                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.8.0 #5117 (Mar 23 2008) (MINGW32)
                              4 ; This file was generated Fri Jun 17 15:10:28 2016
                              5 ;--------------------------------------------------------
                              6 	.module list
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _AB4_LED2
                             13 	.globl _AB4_LED1
                             14 	.globl _AB4_SW2
                             15 	.globl _AB4_SW1
                             16 	.globl _SW2
                             17 	.globl _LED
                             18 	.globl _P7_7
                             19 	.globl _P7_6
                             20 	.globl _P7_5
                             21 	.globl _P7_4
                             22 	.globl _P7_3
                             23 	.globl _P7_2
                             24 	.globl _P7_1
                             25 	.globl _P7_0
                             26 	.globl _SPIF
                             27 	.globl _WCOL
                             28 	.globl _MODF
                             29 	.globl _RXOVRN
                             30 	.globl _NSSMD1
                             31 	.globl _NSSMD0
                             32 	.globl _TXBMT
                             33 	.globl _SPIEN
                             34 	.globl _P6_7
                             35 	.globl _P6_6
                             36 	.globl _P6_5
                             37 	.globl _P6_4
                             38 	.globl _P6_3
                             39 	.globl _P6_2
                             40 	.globl _P6_1
                             41 	.globl _P6_0
                             42 	.globl _AD2EN
                             43 	.globl _AD2TM
                             44 	.globl _AD2INT
                             45 	.globl _AD2BUSY
                             46 	.globl _AD2CM2
                             47 	.globl _AD2CM1
                             48 	.globl _AD2CM0
                             49 	.globl _AD2WINT
                             50 	.globl _AD0EN
                             51 	.globl _AD0TM
                             52 	.globl _AD0INT
                             53 	.globl _AD0BUSY
                             54 	.globl _AD0CM1
                             55 	.globl _AD0CM0
                             56 	.globl _AD0WINT
                             57 	.globl _AD0LJST
                             58 	.globl _P5_7
                             59 	.globl _P5_6
                             60 	.globl _P5_5
                             61 	.globl _P5_4
                             62 	.globl _P5_3
                             63 	.globl _P5_2
                             64 	.globl _P5_1
                             65 	.globl _P5_0
                             66 	.globl _CF
                             67 	.globl _CR
                             68 	.globl _CCF5
                             69 	.globl _CCF4
                             70 	.globl _CCF3
                             71 	.globl _CCF2
                             72 	.globl _CCF1
                             73 	.globl _CCF0
                             74 	.globl _CY
                             75 	.globl _AC
                             76 	.globl _F0
                             77 	.globl _RS1
                             78 	.globl _RS0
                             79 	.globl _OV
                             80 	.globl _F1
                             81 	.globl _P
                             82 	.globl _P4_7
                             83 	.globl _P4_6
                             84 	.globl _P4_5
                             85 	.globl _P4_4
                             86 	.globl _P4_3
                             87 	.globl _P4_2
                             88 	.globl _P4_1
                             89 	.globl _P4_0
                             90 	.globl _TF4
                             91 	.globl _EXF4
                             92 	.globl _EXEN4
                             93 	.globl _TR4
                             94 	.globl _CT4
                             95 	.globl _CPRL4
                             96 	.globl _TF3
                             97 	.globl _EXF3
                             98 	.globl _EXEN3
                             99 	.globl _TR3
                            100 	.globl _CT3
                            101 	.globl _CPRL3
                            102 	.globl _TF2
                            103 	.globl _EXF2
                            104 	.globl _EXEN2
                            105 	.globl _TR2
                            106 	.globl _CT2
                            107 	.globl _CPRL2
                            108 	.globl _MAC0HO
                            109 	.globl _MAC0Z
                            110 	.globl _MAC0SO
                            111 	.globl _MAC0N
                            112 	.globl _BUSY
                            113 	.globl _ENSMB
                            114 	.globl _STA
                            115 	.globl _STO
                            116 	.globl _SI
                            117 	.globl _AA
                            118 	.globl _SMBFTE
                            119 	.globl _SMBTOE
                            120 	.globl _PT2
                            121 	.globl _PS
                            122 	.globl _PS0
                            123 	.globl _PT1
                            124 	.globl _PX1
                            125 	.globl _PT0
                            126 	.globl _PX0
                            127 	.globl _P3_7
                            128 	.globl _P3_6
                            129 	.globl _P3_5
                            130 	.globl _P3_4
                            131 	.globl _P3_3
                            132 	.globl _P3_2
                            133 	.globl _P3_1
                            134 	.globl _P3_0
                            135 	.globl _EA
                            136 	.globl _ET2
                            137 	.globl _ES
                            138 	.globl _ES0
                            139 	.globl _ET1
                            140 	.globl _EX1
                            141 	.globl _ET0
                            142 	.globl _EX0
                            143 	.globl _P2_7
                            144 	.globl _P2_6
                            145 	.globl _P2_5
                            146 	.globl _P2_4
                            147 	.globl _P2_3
                            148 	.globl _P2_2
                            149 	.globl _P2_1
                            150 	.globl _P2_0
                            151 	.globl _S1MODE
                            152 	.globl _MCE1
                            153 	.globl _REN1
                            154 	.globl _TB81
                            155 	.globl _RB81
                            156 	.globl _TI1
                            157 	.globl _RI1
                            158 	.globl _SM00
                            159 	.globl _SM10
                            160 	.globl _SM20
                            161 	.globl _REN
                            162 	.globl _REN0
                            163 	.globl _TB80
                            164 	.globl _RB80
                            165 	.globl _TI
                            166 	.globl _TI0
                            167 	.globl _RI
                            168 	.globl _RI0
                            169 	.globl _P1_7
                            170 	.globl _P1_6
                            171 	.globl _P1_5
                            172 	.globl _P1_4
                            173 	.globl _P1_3
                            174 	.globl _P1_2
                            175 	.globl _P1_1
                            176 	.globl _P1_0
                            177 	.globl _FLHBUSY
                            178 	.globl _CP1EN
                            179 	.globl _CP1OUT
                            180 	.globl _CP1RIF
                            181 	.globl _CP1FIF
                            182 	.globl _CP1HYP1
                            183 	.globl _CP1HYP0
                            184 	.globl _CP1HYN1
                            185 	.globl _CP1HYN0
                            186 	.globl _CP0EN
                            187 	.globl _CP0OUT
                            188 	.globl _CP0RIF
                            189 	.globl _CP0FIF
                            190 	.globl _CP0HYP1
                            191 	.globl _CP0HYP0
                            192 	.globl _CP0HYN1
                            193 	.globl _CP0HYN0
                            194 	.globl _TF1
                            195 	.globl _TR1
                            196 	.globl _TF0
                            197 	.globl _TR0
                            198 	.globl _IE1
                            199 	.globl _IT1
                            200 	.globl _IE0
                            201 	.globl _IT0
                            202 	.globl _P0_7
                            203 	.globl _P0_6
                            204 	.globl _P0_5
                            205 	.globl _P0_4
                            206 	.globl _P0_3
                            207 	.globl _P0_2
                            208 	.globl _P0_1
                            209 	.globl _P0_0
                            210 	.globl _MAC0RND
                            211 	.globl _MAC0ACC
                            212 	.globl _MAC0A
                            213 	.globl _RCAP4
                            214 	.globl _TMR4
                            215 	.globl _DAC1
                            216 	.globl _RCAP3
                            217 	.globl _TMR3
                            218 	.globl _PCA0CP5
                            219 	.globl _PCA0CP4
                            220 	.globl _PCA0CP3
                            221 	.globl _PCA0CP2
                            222 	.globl _PCA0CP1
                            223 	.globl _PCA0CP0
                            224 	.globl _PCA0
                            225 	.globl _DAC0
                            226 	.globl _ADC0LT
                            227 	.globl _ADC0GT
                            228 	.globl _ADC0
                            229 	.globl _RCAP2
                            230 	.globl _TMR2
                            231 	.globl _TMR1
                            232 	.globl _TMR0
                            233 	.globl _P7
                            234 	.globl _P6
                            235 	.globl _XBR2
                            236 	.globl _XBR1
                            237 	.globl _XBR0
                            238 	.globl _P5
                            239 	.globl _P4
                            240 	.globl _FLACL
                            241 	.globl _P1MDIN
                            242 	.globl _P3MDOUT
                            243 	.globl _P2MDOUT
                            244 	.globl _P1MDOUT
                            245 	.globl _P0MDOUT
                            246 	.globl _CCH0LC
                            247 	.globl _CCH0TN
                            248 	.globl _CCH0CN
                            249 	.globl _P7MDOUT
                            250 	.globl _P6MDOUT
                            251 	.globl _P5MDOUT
                            252 	.globl _P4MDOUT
                            253 	.globl _CCH0MA
                            254 	.globl _CLKSEL
                            255 	.globl _SFRPGCN
                            256 	.globl _PLL0FLT
                            257 	.globl _PLL0MUL
                            258 	.globl _PLL0DIV
                            259 	.globl _OSCXCN
                            260 	.globl _OSCICL
                            261 	.globl _OSCICN
                            262 	.globl _PLL0CN
                            263 	.globl _FLSTAT
                            264 	.globl _MAC0RNDH
                            265 	.globl _MAC0RNDL
                            266 	.globl _MAC0CF
                            267 	.globl _MAC0AH
                            268 	.globl _MAC0AL
                            269 	.globl _MAC0STA
                            270 	.globl _MAC0OVR
                            271 	.globl _MAC0ACC3
                            272 	.globl _MAC0ACC2
                            273 	.globl _MAC0ACC1
                            274 	.globl _MAC0ACC0
                            275 	.globl _MAC0BH
                            276 	.globl _MAC0BL
                            277 	.globl _ADC2CN
                            278 	.globl _TMR4H
                            279 	.globl _TMR4L
                            280 	.globl _RCAP4H
                            281 	.globl _RCAP4L
                            282 	.globl _TMR4CF
                            283 	.globl _TMR4CN
                            284 	.globl _ADC2LT
                            285 	.globl _ADC2GT
                            286 	.globl _ADC2
                            287 	.globl _ADC2CF
                            288 	.globl _AMX2SL
                            289 	.globl _AMX2CF
                            290 	.globl _CPT1MD
                            291 	.globl _CPT1CN
                            292 	.globl _DAC1CN
                            293 	.globl _DAC1H
                            294 	.globl _DAC1L
                            295 	.globl _TMR3H
                            296 	.globl _TMR3L
                            297 	.globl _RCAP3H
                            298 	.globl _RCAP3L
                            299 	.globl _TMR3CF
                            300 	.globl _TMR3CN
                            301 	.globl _SBUF1
                            302 	.globl _SCON1
                            303 	.globl _CPT0MD
                            304 	.globl _CPT0CN
                            305 	.globl _PCA0CPH1
                            306 	.globl _PCA0CPL1
                            307 	.globl _PCA0CPH0
                            308 	.globl _PCA0CPL0
                            309 	.globl _PCA0H
                            310 	.globl _PCA0L
                            311 	.globl _SPI0CN
                            312 	.globl _RSTSRC
                            313 	.globl _PCA0CPH4
                            314 	.globl _PCA0CPL4
                            315 	.globl _PCA0CPH3
                            316 	.globl _PCA0CPL3
                            317 	.globl _PCA0CPH2
                            318 	.globl _PCA0CPL2
                            319 	.globl _ADC0CN
                            320 	.globl _PCA0CPH5
                            321 	.globl _PCA0CPL5
                            322 	.globl _PCA0CPM5
                            323 	.globl _PCA0CPM4
                            324 	.globl _PCA0CPM3
                            325 	.globl _PCA0CPM2
                            326 	.globl _PCA0CPM1
                            327 	.globl _PCA0CPM0
                            328 	.globl _PCA0MD
                            329 	.globl _PCA0CN
                            330 	.globl _DAC0CN
                            331 	.globl _DAC0H
                            332 	.globl _DAC0L
                            333 	.globl _REF0CN
                            334 	.globl _SMB0CR
                            335 	.globl _TH2
                            336 	.globl _TMR2H
                            337 	.globl _TL2
                            338 	.globl _TMR2L
                            339 	.globl _RCAP2H
                            340 	.globl _RCAP2L
                            341 	.globl _TMR2CF
                            342 	.globl _TMR2CN
                            343 	.globl _ADC0LTH
                            344 	.globl _ADC0LTL
                            345 	.globl _ADC0GTH
                            346 	.globl _ADC0GTL
                            347 	.globl _SMB0ADR
                            348 	.globl _SMB0DAT
                            349 	.globl _SMB0STA
                            350 	.globl _SMB0CN
                            351 	.globl _ADC0H
                            352 	.globl _ADC0L
                            353 	.globl _ADC0CF
                            354 	.globl _AMX0SL
                            355 	.globl _AMX0CF
                            356 	.globl _SADEN0
                            357 	.globl _FLSCL
                            358 	.globl _SADDR0
                            359 	.globl _EMI0CF
                            360 	.globl __XPAGE
                            361 	.globl _EMI0CN
                            362 	.globl _EMI0TC
                            363 	.globl _SPI0CKR
                            364 	.globl _SPI0DAT
                            365 	.globl _SPI0CFG
                            366 	.globl _SBUF
                            367 	.globl _SBUF0
                            368 	.globl _SCON
                            369 	.globl _SCON0
                            370 	.globl _SSTA0
                            371 	.globl _PSCTL
                            372 	.globl _CKCON
                            373 	.globl _TH1
                            374 	.globl _TH0
                            375 	.globl _TL1
                            376 	.globl _TL0
                            377 	.globl _TMOD
                            378 	.globl _TCON
                            379 	.globl _WDTCN
                            380 	.globl _EIP2
                            381 	.globl _EIP1
                            382 	.globl _B
                            383 	.globl _EIE2
                            384 	.globl _EIE1
                            385 	.globl _ACC
                            386 	.globl _PSW
                            387 	.globl _IP
                            388 	.globl _PSBANK
                            389 	.globl _P3
                            390 	.globl _IE
                            391 	.globl _P2
                            392 	.globl _P1
                            393 	.globl _PCON
                            394 	.globl _SFRLAST
                            395 	.globl _SFRNEXT
                            396 	.globl _SFRPAGE
                            397 	.globl _DPH
                            398 	.globl _DPL
                            399 	.globl _SP
                            400 	.globl _P0
                            401 	.globl _vListInitialise
                            402 	.globl _vListInitialiseItem
                            403 	.globl _vListInsertEnd
                            404 	.globl _vListInsert
                            405 	.globl _vListRemove
                            406 ;--------------------------------------------------------
                            407 ; special function registers
                            408 ;--------------------------------------------------------
                            409 	.area RSEG    (DATA)
                    0080    410 G$P0$0$0 == 0x0080
                    0080    411 _P0	=	0x0080
                    0081    412 G$SP$0$0 == 0x0081
                    0081    413 _SP	=	0x0081
                    0082    414 G$DPL$0$0 == 0x0082
                    0082    415 _DPL	=	0x0082
                    0083    416 G$DPH$0$0 == 0x0083
                    0083    417 _DPH	=	0x0083
                    0084    418 G$SFRPAGE$0$0 == 0x0084
                    0084    419 _SFRPAGE	=	0x0084
                    0085    420 G$SFRNEXT$0$0 == 0x0085
                    0085    421 _SFRNEXT	=	0x0085
                    0086    422 G$SFRLAST$0$0 == 0x0086
                    0086    423 _SFRLAST	=	0x0086
                    0087    424 G$PCON$0$0 == 0x0087
                    0087    425 _PCON	=	0x0087
                    0090    426 G$P1$0$0 == 0x0090
                    0090    427 _P1	=	0x0090
                    00A0    428 G$P2$0$0 == 0x00a0
                    00A0    429 _P2	=	0x00a0
                    00A8    430 G$IE$0$0 == 0x00a8
                    00A8    431 _IE	=	0x00a8
                    00B0    432 G$P3$0$0 == 0x00b0
                    00B0    433 _P3	=	0x00b0
                    00B1    434 G$PSBANK$0$0 == 0x00b1
                    00B1    435 _PSBANK	=	0x00b1
                    00B8    436 G$IP$0$0 == 0x00b8
                    00B8    437 _IP	=	0x00b8
                    00D0    438 G$PSW$0$0 == 0x00d0
                    00D0    439 _PSW	=	0x00d0
                    00E0    440 G$ACC$0$0 == 0x00e0
                    00E0    441 _ACC	=	0x00e0
                    00E6    442 G$EIE1$0$0 == 0x00e6
                    00E6    443 _EIE1	=	0x00e6
                    00E7    444 G$EIE2$0$0 == 0x00e7
                    00E7    445 _EIE2	=	0x00e7
                    00F0    446 G$B$0$0 == 0x00f0
                    00F0    447 _B	=	0x00f0
                    00F6    448 G$EIP1$0$0 == 0x00f6
                    00F6    449 _EIP1	=	0x00f6
                    00F7    450 G$EIP2$0$0 == 0x00f7
                    00F7    451 _EIP2	=	0x00f7
                    00FF    452 G$WDTCN$0$0 == 0x00ff
                    00FF    453 _WDTCN	=	0x00ff
                    0088    454 G$TCON$0$0 == 0x0088
                    0088    455 _TCON	=	0x0088
                    0089    456 G$TMOD$0$0 == 0x0089
                    0089    457 _TMOD	=	0x0089
                    008A    458 G$TL0$0$0 == 0x008a
                    008A    459 _TL0	=	0x008a
                    008B    460 G$TL1$0$0 == 0x008b
                    008B    461 _TL1	=	0x008b
                    008C    462 G$TH0$0$0 == 0x008c
                    008C    463 _TH0	=	0x008c
                    008D    464 G$TH1$0$0 == 0x008d
                    008D    465 _TH1	=	0x008d
                    008E    466 G$CKCON$0$0 == 0x008e
                    008E    467 _CKCON	=	0x008e
                    008F    468 G$PSCTL$0$0 == 0x008f
                    008F    469 _PSCTL	=	0x008f
                    0091    470 G$SSTA0$0$0 == 0x0091
                    0091    471 _SSTA0	=	0x0091
                    0098    472 G$SCON0$0$0 == 0x0098
                    0098    473 _SCON0	=	0x0098
                    0098    474 G$SCON$0$0 == 0x0098
                    0098    475 _SCON	=	0x0098
                    0099    476 G$SBUF0$0$0 == 0x0099
                    0099    477 _SBUF0	=	0x0099
                    0099    478 G$SBUF$0$0 == 0x0099
                    0099    479 _SBUF	=	0x0099
                    009A    480 G$SPI0CFG$0$0 == 0x009a
                    009A    481 _SPI0CFG	=	0x009a
                    009B    482 G$SPI0DAT$0$0 == 0x009b
                    009B    483 _SPI0DAT	=	0x009b
                    009D    484 G$SPI0CKR$0$0 == 0x009d
                    009D    485 _SPI0CKR	=	0x009d
                    00A1    486 G$EMI0TC$0$0 == 0x00a1
                    00A1    487 _EMI0TC	=	0x00a1
                    00A2    488 G$EMI0CN$0$0 == 0x00a2
                    00A2    489 _EMI0CN	=	0x00a2
                    00A2    490 G$_XPAGE$0$0 == 0x00a2
                    00A2    491 __XPAGE	=	0x00a2
                    00A3    492 G$EMI0CF$0$0 == 0x00a3
                    00A3    493 _EMI0CF	=	0x00a3
                    00A9    494 G$SADDR0$0$0 == 0x00a9
                    00A9    495 _SADDR0	=	0x00a9
                    00B7    496 G$FLSCL$0$0 == 0x00b7
                    00B7    497 _FLSCL	=	0x00b7
                    00B9    498 G$SADEN0$0$0 == 0x00b9
                    00B9    499 _SADEN0	=	0x00b9
                    00BA    500 G$AMX0CF$0$0 == 0x00ba
                    00BA    501 _AMX0CF	=	0x00ba
                    00BB    502 G$AMX0SL$0$0 == 0x00bb
                    00BB    503 _AMX0SL	=	0x00bb
                    00BC    504 G$ADC0CF$0$0 == 0x00bc
                    00BC    505 _ADC0CF	=	0x00bc
                    00BE    506 G$ADC0L$0$0 == 0x00be
                    00BE    507 _ADC0L	=	0x00be
                    00BF    508 G$ADC0H$0$0 == 0x00bf
                    00BF    509 _ADC0H	=	0x00bf
                    00C0    510 G$SMB0CN$0$0 == 0x00c0
                    00C0    511 _SMB0CN	=	0x00c0
                    00C1    512 G$SMB0STA$0$0 == 0x00c1
                    00C1    513 _SMB0STA	=	0x00c1
                    00C2    514 G$SMB0DAT$0$0 == 0x00c2
                    00C2    515 _SMB0DAT	=	0x00c2
                    00C3    516 G$SMB0ADR$0$0 == 0x00c3
                    00C3    517 _SMB0ADR	=	0x00c3
                    00C4    518 G$ADC0GTL$0$0 == 0x00c4
                    00C4    519 _ADC0GTL	=	0x00c4
                    00C5    520 G$ADC0GTH$0$0 == 0x00c5
                    00C5    521 _ADC0GTH	=	0x00c5
                    00C6    522 G$ADC0LTL$0$0 == 0x00c6
                    00C6    523 _ADC0LTL	=	0x00c6
                    00C7    524 G$ADC0LTH$0$0 == 0x00c7
                    00C7    525 _ADC0LTH	=	0x00c7
                    00C8    526 G$TMR2CN$0$0 == 0x00c8
                    00C8    527 _TMR2CN	=	0x00c8
                    00C9    528 G$TMR2CF$0$0 == 0x00c9
                    00C9    529 _TMR2CF	=	0x00c9
                    00CA    530 G$RCAP2L$0$0 == 0x00ca
                    00CA    531 _RCAP2L	=	0x00ca
                    00CB    532 G$RCAP2H$0$0 == 0x00cb
                    00CB    533 _RCAP2H	=	0x00cb
                    00CC    534 G$TMR2L$0$0 == 0x00cc
                    00CC    535 _TMR2L	=	0x00cc
                    00CC    536 G$TL2$0$0 == 0x00cc
                    00CC    537 _TL2	=	0x00cc
                    00CD    538 G$TMR2H$0$0 == 0x00cd
                    00CD    539 _TMR2H	=	0x00cd
                    00CD    540 G$TH2$0$0 == 0x00cd
                    00CD    541 _TH2	=	0x00cd
                    00CF    542 G$SMB0CR$0$0 == 0x00cf
                    00CF    543 _SMB0CR	=	0x00cf
                    00D1    544 G$REF0CN$0$0 == 0x00d1
                    00D1    545 _REF0CN	=	0x00d1
                    00D2    546 G$DAC0L$0$0 == 0x00d2
                    00D2    547 _DAC0L	=	0x00d2
                    00D3    548 G$DAC0H$0$0 == 0x00d3
                    00D3    549 _DAC0H	=	0x00d3
                    00D4    550 G$DAC0CN$0$0 == 0x00d4
                    00D4    551 _DAC0CN	=	0x00d4
                    00D8    552 G$PCA0CN$0$0 == 0x00d8
                    00D8    553 _PCA0CN	=	0x00d8
                    00D9    554 G$PCA0MD$0$0 == 0x00d9
                    00D9    555 _PCA0MD	=	0x00d9
                    00DA    556 G$PCA0CPM0$0$0 == 0x00da
                    00DA    557 _PCA0CPM0	=	0x00da
                    00DB    558 G$PCA0CPM1$0$0 == 0x00db
                    00DB    559 _PCA0CPM1	=	0x00db
                    00DC    560 G$PCA0CPM2$0$0 == 0x00dc
                    00DC    561 _PCA0CPM2	=	0x00dc
                    00DD    562 G$PCA0CPM3$0$0 == 0x00dd
                    00DD    563 _PCA0CPM3	=	0x00dd
                    00DE    564 G$PCA0CPM4$0$0 == 0x00de
                    00DE    565 _PCA0CPM4	=	0x00de
                    00DF    566 G$PCA0CPM5$0$0 == 0x00df
                    00DF    567 _PCA0CPM5	=	0x00df
                    00E1    568 G$PCA0CPL5$0$0 == 0x00e1
                    00E1    569 _PCA0CPL5	=	0x00e1
                    00E2    570 G$PCA0CPH5$0$0 == 0x00e2
                    00E2    571 _PCA0CPH5	=	0x00e2
                    00E8    572 G$ADC0CN$0$0 == 0x00e8
                    00E8    573 _ADC0CN	=	0x00e8
                    00E9    574 G$PCA0CPL2$0$0 == 0x00e9
                    00E9    575 _PCA0CPL2	=	0x00e9
                    00EA    576 G$PCA0CPH2$0$0 == 0x00ea
                    00EA    577 _PCA0CPH2	=	0x00ea
                    00EB    578 G$PCA0CPL3$0$0 == 0x00eb
                    00EB    579 _PCA0CPL3	=	0x00eb
                    00EC    580 G$PCA0CPH3$0$0 == 0x00ec
                    00EC    581 _PCA0CPH3	=	0x00ec
                    00ED    582 G$PCA0CPL4$0$0 == 0x00ed
                    00ED    583 _PCA0CPL4	=	0x00ed
                    00EE    584 G$PCA0CPH4$0$0 == 0x00ee
                    00EE    585 _PCA0CPH4	=	0x00ee
                    00EF    586 G$RSTSRC$0$0 == 0x00ef
                    00EF    587 _RSTSRC	=	0x00ef
                    00F8    588 G$SPI0CN$0$0 == 0x00f8
                    00F8    589 _SPI0CN	=	0x00f8
                    00F9    590 G$PCA0L$0$0 == 0x00f9
                    00F9    591 _PCA0L	=	0x00f9
                    00FA    592 G$PCA0H$0$0 == 0x00fa
                    00FA    593 _PCA0H	=	0x00fa
                    00FB    594 G$PCA0CPL0$0$0 == 0x00fb
                    00FB    595 _PCA0CPL0	=	0x00fb
                    00FC    596 G$PCA0CPH0$0$0 == 0x00fc
                    00FC    597 _PCA0CPH0	=	0x00fc
                    00FD    598 G$PCA0CPL1$0$0 == 0x00fd
                    00FD    599 _PCA0CPL1	=	0x00fd
                    00FE    600 G$PCA0CPH1$0$0 == 0x00fe
                    00FE    601 _PCA0CPH1	=	0x00fe
                    0088    602 G$CPT0CN$0$0 == 0x0088
                    0088    603 _CPT0CN	=	0x0088
                    0089    604 G$CPT0MD$0$0 == 0x0089
                    0089    605 _CPT0MD	=	0x0089
                    0098    606 G$SCON1$0$0 == 0x0098
                    0098    607 _SCON1	=	0x0098
                    0099    608 G$SBUF1$0$0 == 0x0099
                    0099    609 _SBUF1	=	0x0099
                    00C8    610 G$TMR3CN$0$0 == 0x00c8
                    00C8    611 _TMR3CN	=	0x00c8
                    00C9    612 G$TMR3CF$0$0 == 0x00c9
                    00C9    613 _TMR3CF	=	0x00c9
                    00CA    614 G$RCAP3L$0$0 == 0x00ca
                    00CA    615 _RCAP3L	=	0x00ca
                    00CB    616 G$RCAP3H$0$0 == 0x00cb
                    00CB    617 _RCAP3H	=	0x00cb
                    00CC    618 G$TMR3L$0$0 == 0x00cc
                    00CC    619 _TMR3L	=	0x00cc
                    00CD    620 G$TMR3H$0$0 == 0x00cd
                    00CD    621 _TMR3H	=	0x00cd
                    00D2    622 G$DAC1L$0$0 == 0x00d2
                    00D2    623 _DAC1L	=	0x00d2
                    00D3    624 G$DAC1H$0$0 == 0x00d3
                    00D3    625 _DAC1H	=	0x00d3
                    00D4    626 G$DAC1CN$0$0 == 0x00d4
                    00D4    627 _DAC1CN	=	0x00d4
                    0088    628 G$CPT1CN$0$0 == 0x0088
                    0088    629 _CPT1CN	=	0x0088
                    0089    630 G$CPT1MD$0$0 == 0x0089
                    0089    631 _CPT1MD	=	0x0089
                    00BA    632 G$AMX2CF$0$0 == 0x00ba
                    00BA    633 _AMX2CF	=	0x00ba
                    00BB    634 G$AMX2SL$0$0 == 0x00bb
                    00BB    635 _AMX2SL	=	0x00bb
                    00BC    636 G$ADC2CF$0$0 == 0x00bc
                    00BC    637 _ADC2CF	=	0x00bc
                    00BE    638 G$ADC2$0$0 == 0x00be
                    00BE    639 _ADC2	=	0x00be
                    00C4    640 G$ADC2GT$0$0 == 0x00c4
                    00C4    641 _ADC2GT	=	0x00c4
                    00C6    642 G$ADC2LT$0$0 == 0x00c6
                    00C6    643 _ADC2LT	=	0x00c6
                    00C8    644 G$TMR4CN$0$0 == 0x00c8
                    00C8    645 _TMR4CN	=	0x00c8
                    00C9    646 G$TMR4CF$0$0 == 0x00c9
                    00C9    647 _TMR4CF	=	0x00c9
                    00CA    648 G$RCAP4L$0$0 == 0x00ca
                    00CA    649 _RCAP4L	=	0x00ca
                    00CB    650 G$RCAP4H$0$0 == 0x00cb
                    00CB    651 _RCAP4H	=	0x00cb
                    00CC    652 G$TMR4L$0$0 == 0x00cc
                    00CC    653 _TMR4L	=	0x00cc
                    00CD    654 G$TMR4H$0$0 == 0x00cd
                    00CD    655 _TMR4H	=	0x00cd
                    00E8    656 G$ADC2CN$0$0 == 0x00e8
                    00E8    657 _ADC2CN	=	0x00e8
                    0091    658 G$MAC0BL$0$0 == 0x0091
                    0091    659 _MAC0BL	=	0x0091
                    0092    660 G$MAC0BH$0$0 == 0x0092
                    0092    661 _MAC0BH	=	0x0092
                    0093    662 G$MAC0ACC0$0$0 == 0x0093
                    0093    663 _MAC0ACC0	=	0x0093
                    0094    664 G$MAC0ACC1$0$0 == 0x0094
                    0094    665 _MAC0ACC1	=	0x0094
                    0095    666 G$MAC0ACC2$0$0 == 0x0095
                    0095    667 _MAC0ACC2	=	0x0095
                    0096    668 G$MAC0ACC3$0$0 == 0x0096
                    0096    669 _MAC0ACC3	=	0x0096
                    0097    670 G$MAC0OVR$0$0 == 0x0097
                    0097    671 _MAC0OVR	=	0x0097
                    00C0    672 G$MAC0STA$0$0 == 0x00c0
                    00C0    673 _MAC0STA	=	0x00c0
                    00C1    674 G$MAC0AL$0$0 == 0x00c1
                    00C1    675 _MAC0AL	=	0x00c1
                    00C2    676 G$MAC0AH$0$0 == 0x00c2
                    00C2    677 _MAC0AH	=	0x00c2
                    00C3    678 G$MAC0CF$0$0 == 0x00c3
                    00C3    679 _MAC0CF	=	0x00c3
                    00CE    680 G$MAC0RNDL$0$0 == 0x00ce
                    00CE    681 _MAC0RNDL	=	0x00ce
                    00CF    682 G$MAC0RNDH$0$0 == 0x00cf
                    00CF    683 _MAC0RNDH	=	0x00cf
                    0088    684 G$FLSTAT$0$0 == 0x0088
                    0088    685 _FLSTAT	=	0x0088
                    0089    686 G$PLL0CN$0$0 == 0x0089
                    0089    687 _PLL0CN	=	0x0089
                    008A    688 G$OSCICN$0$0 == 0x008a
                    008A    689 _OSCICN	=	0x008a
                    008B    690 G$OSCICL$0$0 == 0x008b
                    008B    691 _OSCICL	=	0x008b
                    008C    692 G$OSCXCN$0$0 == 0x008c
                    008C    693 _OSCXCN	=	0x008c
                    008D    694 G$PLL0DIV$0$0 == 0x008d
                    008D    695 _PLL0DIV	=	0x008d
                    008E    696 G$PLL0MUL$0$0 == 0x008e
                    008E    697 _PLL0MUL	=	0x008e
                    008F    698 G$PLL0FLT$0$0 == 0x008f
                    008F    699 _PLL0FLT	=	0x008f
                    0096    700 G$SFRPGCN$0$0 == 0x0096
                    0096    701 _SFRPGCN	=	0x0096
                    0097    702 G$CLKSEL$0$0 == 0x0097
                    0097    703 _CLKSEL	=	0x0097
                    009A    704 G$CCH0MA$0$0 == 0x009a
                    009A    705 _CCH0MA	=	0x009a
                    009C    706 G$P4MDOUT$0$0 == 0x009c
                    009C    707 _P4MDOUT	=	0x009c
                    009D    708 G$P5MDOUT$0$0 == 0x009d
                    009D    709 _P5MDOUT	=	0x009d
                    009E    710 G$P6MDOUT$0$0 == 0x009e
                    009E    711 _P6MDOUT	=	0x009e
                    009F    712 G$P7MDOUT$0$0 == 0x009f
                    009F    713 _P7MDOUT	=	0x009f
                    00A1    714 G$CCH0CN$0$0 == 0x00a1
                    00A1    715 _CCH0CN	=	0x00a1
                    00A2    716 G$CCH0TN$0$0 == 0x00a2
                    00A2    717 _CCH0TN	=	0x00a2
                    00A3    718 G$CCH0LC$0$0 == 0x00a3
                    00A3    719 _CCH0LC	=	0x00a3
                    00A4    720 G$P0MDOUT$0$0 == 0x00a4
                    00A4    721 _P0MDOUT	=	0x00a4
                    00A5    722 G$P1MDOUT$0$0 == 0x00a5
                    00A5    723 _P1MDOUT	=	0x00a5
                    00A6    724 G$P2MDOUT$0$0 == 0x00a6
                    00A6    725 _P2MDOUT	=	0x00a6
                    00A7    726 G$P3MDOUT$0$0 == 0x00a7
                    00A7    727 _P3MDOUT	=	0x00a7
                    00AD    728 G$P1MDIN$0$0 == 0x00ad
                    00AD    729 _P1MDIN	=	0x00ad
                    00B7    730 G$FLACL$0$0 == 0x00b7
                    00B7    731 _FLACL	=	0x00b7
                    00C8    732 G$P4$0$0 == 0x00c8
                    00C8    733 _P4	=	0x00c8
                    00D8    734 G$P5$0$0 == 0x00d8
                    00D8    735 _P5	=	0x00d8
                    00E1    736 G$XBR0$0$0 == 0x00e1
                    00E1    737 _XBR0	=	0x00e1
                    00E2    738 G$XBR1$0$0 == 0x00e2
                    00E2    739 _XBR1	=	0x00e2
                    00E3    740 G$XBR2$0$0 == 0x00e3
                    00E3    741 _XBR2	=	0x00e3
                    00E8    742 G$P6$0$0 == 0x00e8
                    00E8    743 _P6	=	0x00e8
                    00F8    744 G$P7$0$0 == 0x00f8
                    00F8    745 _P7	=	0x00f8
                    8C8A    746 G$TMR0$0$0 == 0x8c8a
                    8C8A    747 _TMR0	=	0x8c8a
                    8D8B    748 G$TMR1$0$0 == 0x8d8b
                    8D8B    749 _TMR1	=	0x8d8b
                    CDCC    750 G$TMR2$0$0 == 0xcdcc
                    CDCC    751 _TMR2	=	0xcdcc
                    CBCA    752 G$RCAP2$0$0 == 0xcbca
                    CBCA    753 _RCAP2	=	0xcbca
                    BFBE    754 G$ADC0$0$0 == 0xbfbe
                    BFBE    755 _ADC0	=	0xbfbe
                    C5C4    756 G$ADC0GT$0$0 == 0xc5c4
                    C5C4    757 _ADC0GT	=	0xc5c4
                    C7C6    758 G$ADC0LT$0$0 == 0xc7c6
                    C7C6    759 _ADC0LT	=	0xc7c6
                    D3D2    760 G$DAC0$0$0 == 0xd3d2
                    D3D2    761 _DAC0	=	0xd3d2
                    FAF9    762 G$PCA0$0$0 == 0xfaf9
                    FAF9    763 _PCA0	=	0xfaf9
                    FCFB    764 G$PCA0CP0$0$0 == 0xfcfb
                    FCFB    765 _PCA0CP0	=	0xfcfb
                    FEFD    766 G$PCA0CP1$0$0 == 0xfefd
                    FEFD    767 _PCA0CP1	=	0xfefd
                    EAE9    768 G$PCA0CP2$0$0 == 0xeae9
                    EAE9    769 _PCA0CP2	=	0xeae9
                    ECEB    770 G$PCA0CP3$0$0 == 0xeceb
                    ECEB    771 _PCA0CP3	=	0xeceb
                    EEED    772 G$PCA0CP4$0$0 == 0xeeed
                    EEED    773 _PCA0CP4	=	0xeeed
                    E2E1    774 G$PCA0CP5$0$0 == 0xe2e1
                    E2E1    775 _PCA0CP5	=	0xe2e1
                    CDCC    776 G$TMR3$0$0 == 0xcdcc
                    CDCC    777 _TMR3	=	0xcdcc
                    CBCA    778 G$RCAP3$0$0 == 0xcbca
                    CBCA    779 _RCAP3	=	0xcbca
                    D3D2    780 G$DAC1$0$0 == 0xd3d2
                    D3D2    781 _DAC1	=	0xd3d2
                    CDCC    782 G$TMR4$0$0 == 0xcdcc
                    CDCC    783 _TMR4	=	0xcdcc
                    CBCA    784 G$RCAP4$0$0 == 0xcbca
                    CBCA    785 _RCAP4	=	0xcbca
                    C2C1    786 G$MAC0A$0$0 == 0xc2c1
                    C2C1    787 _MAC0A	=	0xc2c1
                    96959493    788 G$MAC0ACC$0$0 == 0x96959493
                    96959493    789 _MAC0ACC	=	0x96959493
                    CFCE    790 G$MAC0RND$0$0 == 0xcfce
                    CFCE    791 _MAC0RND	=	0xcfce
                            792 ;--------------------------------------------------------
                            793 ; special function bits
                            794 ;--------------------------------------------------------
                            795 	.area RSEG    (DATA)
                    0080    796 G$P0_0$0$0 == 0x0080
                    0080    797 _P0_0	=	0x0080
                    0081    798 G$P0_1$0$0 == 0x0081
                    0081    799 _P0_1	=	0x0081
                    0082    800 G$P0_2$0$0 == 0x0082
                    0082    801 _P0_2	=	0x0082
                    0083    802 G$P0_3$0$0 == 0x0083
                    0083    803 _P0_3	=	0x0083
                    0084    804 G$P0_4$0$0 == 0x0084
                    0084    805 _P0_4	=	0x0084
                    0085    806 G$P0_5$0$0 == 0x0085
                    0085    807 _P0_5	=	0x0085
                    0086    808 G$P0_6$0$0 == 0x0086
                    0086    809 _P0_6	=	0x0086
                    0087    810 G$P0_7$0$0 == 0x0087
                    0087    811 _P0_7	=	0x0087
                    0088    812 G$IT0$0$0 == 0x0088
                    0088    813 _IT0	=	0x0088
                    0089    814 G$IE0$0$0 == 0x0089
                    0089    815 _IE0	=	0x0089
                    008A    816 G$IT1$0$0 == 0x008a
                    008A    817 _IT1	=	0x008a
                    008B    818 G$IE1$0$0 == 0x008b
                    008B    819 _IE1	=	0x008b
                    008C    820 G$TR0$0$0 == 0x008c
                    008C    821 _TR0	=	0x008c
                    008D    822 G$TF0$0$0 == 0x008d
                    008D    823 _TF0	=	0x008d
                    008E    824 G$TR1$0$0 == 0x008e
                    008E    825 _TR1	=	0x008e
                    008F    826 G$TF1$0$0 == 0x008f
                    008F    827 _TF1	=	0x008f
                    0088    828 G$CP0HYN0$0$0 == 0x0088
                    0088    829 _CP0HYN0	=	0x0088
                    0089    830 G$CP0HYN1$0$0 == 0x0089
                    0089    831 _CP0HYN1	=	0x0089
                    008A    832 G$CP0HYP0$0$0 == 0x008a
                    008A    833 _CP0HYP0	=	0x008a
                    008B    834 G$CP0HYP1$0$0 == 0x008b
                    008B    835 _CP0HYP1	=	0x008b
                    008C    836 G$CP0FIF$0$0 == 0x008c
                    008C    837 _CP0FIF	=	0x008c
                    008D    838 G$CP0RIF$0$0 == 0x008d
                    008D    839 _CP0RIF	=	0x008d
                    008E    840 G$CP0OUT$0$0 == 0x008e
                    008E    841 _CP0OUT	=	0x008e
                    008F    842 G$CP0EN$0$0 == 0x008f
                    008F    843 _CP0EN	=	0x008f
                    0088    844 G$CP1HYN0$0$0 == 0x0088
                    0088    845 _CP1HYN0	=	0x0088
                    0089    846 G$CP1HYN1$0$0 == 0x0089
                    0089    847 _CP1HYN1	=	0x0089
                    008A    848 G$CP1HYP0$0$0 == 0x008a
                    008A    849 _CP1HYP0	=	0x008a
                    008B    850 G$CP1HYP1$0$0 == 0x008b
                    008B    851 _CP1HYP1	=	0x008b
                    008C    852 G$CP1FIF$0$0 == 0x008c
                    008C    853 _CP1FIF	=	0x008c
                    008D    854 G$CP1RIF$0$0 == 0x008d
                    008D    855 _CP1RIF	=	0x008d
                    008E    856 G$CP1OUT$0$0 == 0x008e
                    008E    857 _CP1OUT	=	0x008e
                    008F    858 G$CP1EN$0$0 == 0x008f
                    008F    859 _CP1EN	=	0x008f
                    0088    860 G$FLHBUSY$0$0 == 0x0088
                    0088    861 _FLHBUSY	=	0x0088
                    0090    862 G$P1_0$0$0 == 0x0090
                    0090    863 _P1_0	=	0x0090
                    0091    864 G$P1_1$0$0 == 0x0091
                    0091    865 _P1_1	=	0x0091
                    0092    866 G$P1_2$0$0 == 0x0092
                    0092    867 _P1_2	=	0x0092
                    0093    868 G$P1_3$0$0 == 0x0093
                    0093    869 _P1_3	=	0x0093
                    0094    870 G$P1_4$0$0 == 0x0094
                    0094    871 _P1_4	=	0x0094
                    0095    872 G$P1_5$0$0 == 0x0095
                    0095    873 _P1_5	=	0x0095
                    0096    874 G$P1_6$0$0 == 0x0096
                    0096    875 _P1_6	=	0x0096
                    0097    876 G$P1_7$0$0 == 0x0097
                    0097    877 _P1_7	=	0x0097
                    0098    878 G$RI0$0$0 == 0x0098
                    0098    879 _RI0	=	0x0098
                    0098    880 G$RI$0$0 == 0x0098
                    0098    881 _RI	=	0x0098
                    0099    882 G$TI0$0$0 == 0x0099
                    0099    883 _TI0	=	0x0099
                    0099    884 G$TI$0$0 == 0x0099
                    0099    885 _TI	=	0x0099
                    009A    886 G$RB80$0$0 == 0x009a
                    009A    887 _RB80	=	0x009a
                    009B    888 G$TB80$0$0 == 0x009b
                    009B    889 _TB80	=	0x009b
                    009C    890 G$REN0$0$0 == 0x009c
                    009C    891 _REN0	=	0x009c
                    009C    892 G$REN$0$0 == 0x009c
                    009C    893 _REN	=	0x009c
                    009D    894 G$SM20$0$0 == 0x009d
                    009D    895 _SM20	=	0x009d
                    009E    896 G$SM10$0$0 == 0x009e
                    009E    897 _SM10	=	0x009e
                    009F    898 G$SM00$0$0 == 0x009f
                    009F    899 _SM00	=	0x009f
                    0098    900 G$RI1$0$0 == 0x0098
                    0098    901 _RI1	=	0x0098
                    0099    902 G$TI1$0$0 == 0x0099
                    0099    903 _TI1	=	0x0099
                    009A    904 G$RB81$0$0 == 0x009a
                    009A    905 _RB81	=	0x009a
                    009B    906 G$TB81$0$0 == 0x009b
                    009B    907 _TB81	=	0x009b
                    009C    908 G$REN1$0$0 == 0x009c
                    009C    909 _REN1	=	0x009c
                    009D    910 G$MCE1$0$0 == 0x009d
                    009D    911 _MCE1	=	0x009d
                    009F    912 G$S1MODE$0$0 == 0x009f
                    009F    913 _S1MODE	=	0x009f
                    00A0    914 G$P2_0$0$0 == 0x00a0
                    00A0    915 _P2_0	=	0x00a0
                    00A1    916 G$P2_1$0$0 == 0x00a1
                    00A1    917 _P2_1	=	0x00a1
                    00A2    918 G$P2_2$0$0 == 0x00a2
                    00A2    919 _P2_2	=	0x00a2
                    00A3    920 G$P2_3$0$0 == 0x00a3
                    00A3    921 _P2_3	=	0x00a3
                    00A4    922 G$P2_4$0$0 == 0x00a4
                    00A4    923 _P2_4	=	0x00a4
                    00A5    924 G$P2_5$0$0 == 0x00a5
                    00A5    925 _P2_5	=	0x00a5
                    00A6    926 G$P2_6$0$0 == 0x00a6
                    00A6    927 _P2_6	=	0x00a6
                    00A7    928 G$P2_7$0$0 == 0x00a7
                    00A7    929 _P2_7	=	0x00a7
                    00A8    930 G$EX0$0$0 == 0x00a8
                    00A8    931 _EX0	=	0x00a8
                    00A9    932 G$ET0$0$0 == 0x00a9
                    00A9    933 _ET0	=	0x00a9
                    00AA    934 G$EX1$0$0 == 0x00aa
                    00AA    935 _EX1	=	0x00aa
                    00AB    936 G$ET1$0$0 == 0x00ab
                    00AB    937 _ET1	=	0x00ab
                    00AC    938 G$ES0$0$0 == 0x00ac
                    00AC    939 _ES0	=	0x00ac
                    00AC    940 G$ES$0$0 == 0x00ac
                    00AC    941 _ES	=	0x00ac
                    00AD    942 G$ET2$0$0 == 0x00ad
                    00AD    943 _ET2	=	0x00ad
                    00AF    944 G$EA$0$0 == 0x00af
                    00AF    945 _EA	=	0x00af
                    00B0    946 G$P3_0$0$0 == 0x00b0
                    00B0    947 _P3_0	=	0x00b0
                    00B1    948 G$P3_1$0$0 == 0x00b1
                    00B1    949 _P3_1	=	0x00b1
                    00B2    950 G$P3_2$0$0 == 0x00b2
                    00B2    951 _P3_2	=	0x00b2
                    00B3    952 G$P3_3$0$0 == 0x00b3
                    00B3    953 _P3_3	=	0x00b3
                    00B4    954 G$P3_4$0$0 == 0x00b4
                    00B4    955 _P3_4	=	0x00b4
                    00B5    956 G$P3_5$0$0 == 0x00b5
                    00B5    957 _P3_5	=	0x00b5
                    00B6    958 G$P3_6$0$0 == 0x00b6
                    00B6    959 _P3_6	=	0x00b6
                    00B7    960 G$P3_7$0$0 == 0x00b7
                    00B7    961 _P3_7	=	0x00b7
                    00B8    962 G$PX0$0$0 == 0x00b8
                    00B8    963 _PX0	=	0x00b8
                    00B9    964 G$PT0$0$0 == 0x00b9
                    00B9    965 _PT0	=	0x00b9
                    00BA    966 G$PX1$0$0 == 0x00ba
                    00BA    967 _PX1	=	0x00ba
                    00BB    968 G$PT1$0$0 == 0x00bb
                    00BB    969 _PT1	=	0x00bb
                    00BC    970 G$PS0$0$0 == 0x00bc
                    00BC    971 _PS0	=	0x00bc
                    00BC    972 G$PS$0$0 == 0x00bc
                    00BC    973 _PS	=	0x00bc
                    00BD    974 G$PT2$0$0 == 0x00bd
                    00BD    975 _PT2	=	0x00bd
                    00C0    976 G$SMBTOE$0$0 == 0x00c0
                    00C0    977 _SMBTOE	=	0x00c0
                    00C1    978 G$SMBFTE$0$0 == 0x00c1
                    00C1    979 _SMBFTE	=	0x00c1
                    00C2    980 G$AA$0$0 == 0x00c2
                    00C2    981 _AA	=	0x00c2
                    00C3    982 G$SI$0$0 == 0x00c3
                    00C3    983 _SI	=	0x00c3
                    00C4    984 G$STO$0$0 == 0x00c4
                    00C4    985 _STO	=	0x00c4
                    00C5    986 G$STA$0$0 == 0x00c5
                    00C5    987 _STA	=	0x00c5
                    00C6    988 G$ENSMB$0$0 == 0x00c6
                    00C6    989 _ENSMB	=	0x00c6
                    00C7    990 G$BUSY$0$0 == 0x00c7
                    00C7    991 _BUSY	=	0x00c7
                    00C0    992 G$MAC0N$0$0 == 0x00c0
                    00C0    993 _MAC0N	=	0x00c0
                    00C1    994 G$MAC0SO$0$0 == 0x00c1
                    00C1    995 _MAC0SO	=	0x00c1
                    00C2    996 G$MAC0Z$0$0 == 0x00c2
                    00C2    997 _MAC0Z	=	0x00c2
                    00C3    998 G$MAC0HO$0$0 == 0x00c3
                    00C3    999 _MAC0HO	=	0x00c3
                    00C8   1000 G$CPRL2$0$0 == 0x00c8
                    00C8   1001 _CPRL2	=	0x00c8
                    00C9   1002 G$CT2$0$0 == 0x00c9
                    00C9   1003 _CT2	=	0x00c9
                    00CA   1004 G$TR2$0$0 == 0x00ca
                    00CA   1005 _TR2	=	0x00ca
                    00CB   1006 G$EXEN2$0$0 == 0x00cb
                    00CB   1007 _EXEN2	=	0x00cb
                    00CE   1008 G$EXF2$0$0 == 0x00ce
                    00CE   1009 _EXF2	=	0x00ce
                    00CF   1010 G$TF2$0$0 == 0x00cf
                    00CF   1011 _TF2	=	0x00cf
                    00C8   1012 G$CPRL3$0$0 == 0x00c8
                    00C8   1013 _CPRL3	=	0x00c8
                    00C9   1014 G$CT3$0$0 == 0x00c9
                    00C9   1015 _CT3	=	0x00c9
                    00CA   1016 G$TR3$0$0 == 0x00ca
                    00CA   1017 _TR3	=	0x00ca
                    00CB   1018 G$EXEN3$0$0 == 0x00cb
                    00CB   1019 _EXEN3	=	0x00cb
                    00CE   1020 G$EXF3$0$0 == 0x00ce
                    00CE   1021 _EXF3	=	0x00ce
                    00CF   1022 G$TF3$0$0 == 0x00cf
                    00CF   1023 _TF3	=	0x00cf
                    00C8   1024 G$CPRL4$0$0 == 0x00c8
                    00C8   1025 _CPRL4	=	0x00c8
                    00C9   1026 G$CT4$0$0 == 0x00c9
                    00C9   1027 _CT4	=	0x00c9
                    00CA   1028 G$TR4$0$0 == 0x00ca
                    00CA   1029 _TR4	=	0x00ca
                    00CB   1030 G$EXEN4$0$0 == 0x00cb
                    00CB   1031 _EXEN4	=	0x00cb
                    00CE   1032 G$EXF4$0$0 == 0x00ce
                    00CE   1033 _EXF4	=	0x00ce
                    00CF   1034 G$TF4$0$0 == 0x00cf
                    00CF   1035 _TF4	=	0x00cf
                    00C8   1036 G$P4_0$0$0 == 0x00c8
                    00C8   1037 _P4_0	=	0x00c8
                    00C9   1038 G$P4_1$0$0 == 0x00c9
                    00C9   1039 _P4_1	=	0x00c9
                    00CA   1040 G$P4_2$0$0 == 0x00ca
                    00CA   1041 _P4_2	=	0x00ca
                    00CB   1042 G$P4_3$0$0 == 0x00cb
                    00CB   1043 _P4_3	=	0x00cb
                    00CC   1044 G$P4_4$0$0 == 0x00cc
                    00CC   1045 _P4_4	=	0x00cc
                    00CD   1046 G$P4_5$0$0 == 0x00cd
                    00CD   1047 _P4_5	=	0x00cd
                    00CE   1048 G$P4_6$0$0 == 0x00ce
                    00CE   1049 _P4_6	=	0x00ce
                    00CF   1050 G$P4_7$0$0 == 0x00cf
                    00CF   1051 _P4_7	=	0x00cf
                    00D0   1052 G$P$0$0 == 0x00d0
                    00D0   1053 _P	=	0x00d0
                    00D1   1054 G$F1$0$0 == 0x00d1
                    00D1   1055 _F1	=	0x00d1
                    00D2   1056 G$OV$0$0 == 0x00d2
                    00D2   1057 _OV	=	0x00d2
                    00D3   1058 G$RS0$0$0 == 0x00d3
                    00D3   1059 _RS0	=	0x00d3
                    00D4   1060 G$RS1$0$0 == 0x00d4
                    00D4   1061 _RS1	=	0x00d4
                    00D5   1062 G$F0$0$0 == 0x00d5
                    00D5   1063 _F0	=	0x00d5
                    00D6   1064 G$AC$0$0 == 0x00d6
                    00D6   1065 _AC	=	0x00d6
                    00D7   1066 G$CY$0$0 == 0x00d7
                    00D7   1067 _CY	=	0x00d7
                    00D8   1068 G$CCF0$0$0 == 0x00d8
                    00D8   1069 _CCF0	=	0x00d8
                    00D9   1070 G$CCF1$0$0 == 0x00d9
                    00D9   1071 _CCF1	=	0x00d9
                    00DA   1072 G$CCF2$0$0 == 0x00da
                    00DA   1073 _CCF2	=	0x00da
                    00DB   1074 G$CCF3$0$0 == 0x00db
                    00DB   1075 _CCF3	=	0x00db
                    00DC   1076 G$CCF4$0$0 == 0x00dc
                    00DC   1077 _CCF4	=	0x00dc
                    00DD   1078 G$CCF5$0$0 == 0x00dd
                    00DD   1079 _CCF5	=	0x00dd
                    00DE   1080 G$CR$0$0 == 0x00de
                    00DE   1081 _CR	=	0x00de
                    00DF   1082 G$CF$0$0 == 0x00df
                    00DF   1083 _CF	=	0x00df
                    00D8   1084 G$P5_0$0$0 == 0x00d8
                    00D8   1085 _P5_0	=	0x00d8
                    00D9   1086 G$P5_1$0$0 == 0x00d9
                    00D9   1087 _P5_1	=	0x00d9
                    00DA   1088 G$P5_2$0$0 == 0x00da
                    00DA   1089 _P5_2	=	0x00da
                    00DB   1090 G$P5_3$0$0 == 0x00db
                    00DB   1091 _P5_3	=	0x00db
                    00DC   1092 G$P5_4$0$0 == 0x00dc
                    00DC   1093 _P5_4	=	0x00dc
                    00DD   1094 G$P5_5$0$0 == 0x00dd
                    00DD   1095 _P5_5	=	0x00dd
                    00DE   1096 G$P5_6$0$0 == 0x00de
                    00DE   1097 _P5_6	=	0x00de
                    00DF   1098 G$P5_7$0$0 == 0x00df
                    00DF   1099 _P5_7	=	0x00df
                    00E8   1100 G$AD0LJST$0$0 == 0x00e8
                    00E8   1101 _AD0LJST	=	0x00e8
                    00E9   1102 G$AD0WINT$0$0 == 0x00e9
                    00E9   1103 _AD0WINT	=	0x00e9
                    00EA   1104 G$AD0CM0$0$0 == 0x00ea
                    00EA   1105 _AD0CM0	=	0x00ea
                    00EB   1106 G$AD0CM1$0$0 == 0x00eb
                    00EB   1107 _AD0CM1	=	0x00eb
                    00EC   1108 G$AD0BUSY$0$0 == 0x00ec
                    00EC   1109 _AD0BUSY	=	0x00ec
                    00ED   1110 G$AD0INT$0$0 == 0x00ed
                    00ED   1111 _AD0INT	=	0x00ed
                    00EE   1112 G$AD0TM$0$0 == 0x00ee
                    00EE   1113 _AD0TM	=	0x00ee
                    00EF   1114 G$AD0EN$0$0 == 0x00ef
                    00EF   1115 _AD0EN	=	0x00ef
                    00E8   1116 G$AD2WINT$0$0 == 0x00e8
                    00E8   1117 _AD2WINT	=	0x00e8
                    00E9   1118 G$AD2CM0$0$0 == 0x00e9
                    00E9   1119 _AD2CM0	=	0x00e9
                    00EA   1120 G$AD2CM1$0$0 == 0x00ea
                    00EA   1121 _AD2CM1	=	0x00ea
                    00EB   1122 G$AD2CM2$0$0 == 0x00eb
                    00EB   1123 _AD2CM2	=	0x00eb
                    00EC   1124 G$AD2BUSY$0$0 == 0x00ec
                    00EC   1125 _AD2BUSY	=	0x00ec
                    00ED   1126 G$AD2INT$0$0 == 0x00ed
                    00ED   1127 _AD2INT	=	0x00ed
                    00EE   1128 G$AD2TM$0$0 == 0x00ee
                    00EE   1129 _AD2TM	=	0x00ee
                    00EF   1130 G$AD2EN$0$0 == 0x00ef
                    00EF   1131 _AD2EN	=	0x00ef
                    00E8   1132 G$P6_0$0$0 == 0x00e8
                    00E8   1133 _P6_0	=	0x00e8
                    00E9   1134 G$P6_1$0$0 == 0x00e9
                    00E9   1135 _P6_1	=	0x00e9
                    00EA   1136 G$P6_2$0$0 == 0x00ea
                    00EA   1137 _P6_2	=	0x00ea
                    00EB   1138 G$P6_3$0$0 == 0x00eb
                    00EB   1139 _P6_3	=	0x00eb
                    00EC   1140 G$P6_4$0$0 == 0x00ec
                    00EC   1141 _P6_4	=	0x00ec
                    00ED   1142 G$P6_5$0$0 == 0x00ed
                    00ED   1143 _P6_5	=	0x00ed
                    00EE   1144 G$P6_6$0$0 == 0x00ee
                    00EE   1145 _P6_6	=	0x00ee
                    00EF   1146 G$P6_7$0$0 == 0x00ef
                    00EF   1147 _P6_7	=	0x00ef
                    00F8   1148 G$SPIEN$0$0 == 0x00f8
                    00F8   1149 _SPIEN	=	0x00f8
                    00F9   1150 G$TXBMT$0$0 == 0x00f9
                    00F9   1151 _TXBMT	=	0x00f9
                    00FA   1152 G$NSSMD0$0$0 == 0x00fa
                    00FA   1153 _NSSMD0	=	0x00fa
                    00FB   1154 G$NSSMD1$0$0 == 0x00fb
                    00FB   1155 _NSSMD1	=	0x00fb
                    00FC   1156 G$RXOVRN$0$0 == 0x00fc
                    00FC   1157 _RXOVRN	=	0x00fc
                    00FD   1158 G$MODF$0$0 == 0x00fd
                    00FD   1159 _MODF	=	0x00fd
                    00FE   1160 G$WCOL$0$0 == 0x00fe
                    00FE   1161 _WCOL	=	0x00fe
                    00FF   1162 G$SPIF$0$0 == 0x00ff
                    00FF   1163 _SPIF	=	0x00ff
                    00F8   1164 G$P7_0$0$0 == 0x00f8
                    00F8   1165 _P7_0	=	0x00f8
                    00F9   1166 G$P7_1$0$0 == 0x00f9
                    00F9   1167 _P7_1	=	0x00f9
                    00FA   1168 G$P7_2$0$0 == 0x00fa
                    00FA   1169 _P7_2	=	0x00fa
                    00FB   1170 G$P7_3$0$0 == 0x00fb
                    00FB   1171 _P7_3	=	0x00fb
                    00FC   1172 G$P7_4$0$0 == 0x00fc
                    00FC   1173 _P7_4	=	0x00fc
                    00FD   1174 G$P7_5$0$0 == 0x00fd
                    00FD   1175 _P7_5	=	0x00fd
                    00FE   1176 G$P7_6$0$0 == 0x00fe
                    00FE   1177 _P7_6	=	0x00fe
                    00FF   1178 G$P7_7$0$0 == 0x00ff
                    00FF   1179 _P7_7	=	0x00ff
                    0096   1180 G$LED$0$0 == 0x0096
                    0096   1181 _LED	=	0x0096
                    00B7   1182 G$SW2$0$0 == 0x00b7
                    00B7   1183 _SW2	=	0x00b7
                    00C9   1184 G$AB4_SW1$0$0 == 0x00c9
                    00C9   1185 _AB4_SW1	=	0x00c9
                    00CA   1186 G$AB4_SW2$0$0 == 0x00ca
                    00CA   1187 _AB4_SW2	=	0x00ca
                    00CB   1188 G$AB4_LED1$0$0 == 0x00cb
                    00CB   1189 _AB4_LED1	=	0x00cb
                    00CC   1190 G$AB4_LED2$0$0 == 0x00cc
                    00CC   1191 _AB4_LED2	=	0x00cc
                           1192 ;--------------------------------------------------------
                           1193 ; overlayable register banks
                           1194 ;--------------------------------------------------------
                           1195 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                    1196 	.ds 8
                           1197 ;--------------------------------------------------------
                           1198 ; internal ram data
                           1199 ;--------------------------------------------------------
                           1200 	.area DSEG    (DATA)
                           1201 ;--------------------------------------------------------
                           1202 ; overlayable items in internal ram 
                           1203 ;--------------------------------------------------------
                           1204 	.area OSEG    (OVR,DATA)
                           1205 ;--------------------------------------------------------
                           1206 ; indirectly addressable internal ram data
                           1207 ;--------------------------------------------------------
                           1208 	.area ISEG    (DATA)
                           1209 ;--------------------------------------------------------
                           1210 ; absolute internal ram data
                           1211 ;--------------------------------------------------------
                           1212 	.area IABS    (ABS,DATA)
                           1213 	.area IABS    (ABS,DATA)
                           1214 ;--------------------------------------------------------
                           1215 ; bit data
                           1216 ;--------------------------------------------------------
                           1217 	.area BSEG    (BIT)
                           1218 ;--------------------------------------------------------
                           1219 ; paged external ram data
                           1220 ;--------------------------------------------------------
                           1221 	.area PSEG    (PAG,XDATA)
                           1222 ;--------------------------------------------------------
                           1223 ; external ram data
                           1224 ;--------------------------------------------------------
                           1225 	.area XSEG    (XDATA)
                           1226 ;--------------------------------------------------------
                           1227 ; absolute external ram data
                           1228 ;--------------------------------------------------------
                           1229 	.area XABS    (ABS,XDATA)
                           1230 ;--------------------------------------------------------
                           1231 ; external initialized ram data
                           1232 ;--------------------------------------------------------
                           1233 	.area XISEG   (XDATA)
                           1234 	.area HOME    (CODE)
                           1235 	.area GSINIT0 (CODE)
                           1236 	.area GSINIT1 (CODE)
                           1237 	.area GSINIT2 (CODE)
                           1238 	.area GSINIT3 (CODE)
                           1239 	.area GSINIT4 (CODE)
                           1240 	.area GSINIT5 (CODE)
                           1241 	.area GSINIT  (CODE)
                           1242 	.area GSFINAL (CODE)
                           1243 	.area CSEG    (CODE)
                           1244 ;--------------------------------------------------------
                           1245 ; global & static initialisations
                           1246 ;--------------------------------------------------------
                           1247 	.area HOME    (CODE)
                           1248 	.area GSINIT  (CODE)
                           1249 	.area GSFINAL (CODE)
                           1250 	.area GSINIT  (CODE)
                           1251 ;--------------------------------------------------------
                           1252 ; Home
                           1253 ;--------------------------------------------------------
                           1254 	.area HOME    (CODE)
                           1255 	.area HOME    (CODE)
                           1256 ;--------------------------------------------------------
                           1257 ; code
                           1258 ;--------------------------------------------------------
                           1259 	.area CSEG    (CODE)
                           1260 ;------------------------------------------------------------
                           1261 ;Allocation info for local variables in function 'vListInitialise'
                           1262 ;------------------------------------------------------------
                           1263 ;pxList                    Allocated to stack - offset 1
                           1264 ;sloc0                     Allocated to stack - offset 4
                           1265 ;------------------------------------------------------------
                    0000   1266 	G$vListInitialise$0$0 ==.
                    0000   1267 	C$list.c$59$0$0 ==.
                           1268 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:59: void vListInitialise( xList *pxList )
                           1269 ;	-----------------------------------------
                           1270 ;	 function vListInitialise
                           1271 ;	-----------------------------------------
   0000                    1272 _vListInitialise:
                    0002   1273 	ar2 = 0x02
                    0003   1274 	ar3 = 0x03
                    0004   1275 	ar4 = 0x04
                    0005   1276 	ar5 = 0x05
                    0006   1277 	ar6 = 0x06
                    0007   1278 	ar7 = 0x07
                    0000   1279 	ar0 = 0x00
                    0001   1280 	ar1 = 0x01
   0000 C0*00              1281 	push	_bp
   0002 85 81*00           1282 	mov	_bp,sp
   0005 C0 82              1283 	push	dpl
   0007 C0 83              1284 	push	dph
   0009 C0 F0              1285 	push	b
   000B 05 81              1286 	inc	sp
   000D 05 81              1287 	inc	sp
   000F 05 81              1288 	inc	sp
                    0011   1289 	C$list.c$64$1$1 ==.
                           1290 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:64: pxList->pxIndex = ( xListItem * ) &( pxList->xListEnd );
   0011 A8*00              1291 	mov	r0,_bp
   0013 08                 1292 	inc	r0
   0014 74 01              1293 	mov	a,#0x01
   0016 26                 1294 	add	a,@r0
   0017 FD                 1295 	mov	r5,a
   0018 74 00              1296 	mov	a,#0x00
   001A 08                 1297 	inc	r0
   001B 36                 1298 	addc	a,@r0
   001C FE                 1299 	mov	r6,a
   001D 08                 1300 	inc	r0
   001E 86 07              1301 	mov	ar7,@r0
   0020 A8*00              1302 	mov	r0,_bp
   0022 08                 1303 	inc	r0
   0023 E5*00              1304 	mov	a,_bp
   0025 24 04              1305 	add	a,#0x04
   0027 F9                 1306 	mov	r1,a
   0028 74 04              1307 	mov	a,#0x04
   002A 26                 1308 	add	a,@r0
   002B F7                 1309 	mov	@r1,a
   002C 74 00              1310 	mov	a,#0x00
   002E 08                 1311 	inc	r0
   002F 36                 1312 	addc	a,@r0
   0030 09                 1313 	inc	r1
   0031 F7                 1314 	mov	@r1,a
   0032 08                 1315 	inc	r0
   0033 09                 1316 	inc	r1
   0034 E6                 1317 	mov	a,@r0
   0035 F7                 1318 	mov	@r1,a
   0036 8D 82              1319 	mov	dpl,r5
   0038 8E 83              1320 	mov	dph,r6
   003A 8F F0              1321 	mov	b,r7
   003C E5*00              1322 	mov	a,_bp
   003E 24 04              1323 	add	a,#0x04
   0040 F8                 1324 	mov	r0,a
   0041 E6                 1325 	mov	a,@r0
   0042 12s00r00           1326 	lcall	__gptrput
   0045 A3                 1327 	inc	dptr
   0046 08                 1328 	inc	r0
   0047 E6                 1329 	mov	a,@r0
   0048 12s00r00           1330 	lcall	__gptrput
   004B A3                 1331 	inc	dptr
   004C 08                 1332 	inc	r0
   004D E6                 1333 	mov	a,@r0
   004E 12s00r00           1334 	lcall	__gptrput
                    0051   1335 	C$list.c$68$1$1 ==.
                           1336 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:68: pxList->xListEnd.xItemValue = portMAX_DELAY;
   0051 E5*00              1337 	mov	a,_bp
   0053 24 04              1338 	add	a,#0x04
   0055 F8                 1339 	mov	r0,a
   0056 86 82              1340 	mov	dpl,@r0
   0058 08                 1341 	inc	r0
   0059 86 83              1342 	mov	dph,@r0
   005B 08                 1343 	inc	r0
   005C 86 F0              1344 	mov	b,@r0
   005E 74 FF              1345 	mov	a,#0xFF
   0060 12s00r00           1346 	lcall	__gptrput
   0063 A3                 1347 	inc	dptr
   0064 74 FF              1348 	mov	a,#0xFF
   0066 12s00r00           1349 	lcall	__gptrput
                    0069   1350 	C$list.c$72$1$1 ==.
                           1351 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:72: pxList->xListEnd.pxNext = ( xListItem * ) &( pxList->xListEnd );
   0069 E5*00              1352 	mov	a,_bp
   006B 24 04              1353 	add	a,#0x04
   006D F8                 1354 	mov	r0,a
   006E 74 02              1355 	mov	a,#0x02
   0070 26                 1356 	add	a,@r0
   0071 FB                 1357 	mov	r3,a
   0072 74 00              1358 	mov	a,#0x00
   0074 08                 1359 	inc	r0
   0075 36                 1360 	addc	a,@r0
   0076 FC                 1361 	mov	r4,a
   0077 08                 1362 	inc	r0
   0078 86 05              1363 	mov	ar5,@r0
   007A 8B 82              1364 	mov	dpl,r3
   007C 8C 83              1365 	mov	dph,r4
   007E 8D F0              1366 	mov	b,r5
   0080 E5*00              1367 	mov	a,_bp
   0082 24 04              1368 	add	a,#0x04
   0084 F8                 1369 	mov	r0,a
   0085 E6                 1370 	mov	a,@r0
   0086 12s00r00           1371 	lcall	__gptrput
   0089 A3                 1372 	inc	dptr
   008A 08                 1373 	inc	r0
   008B E6                 1374 	mov	a,@r0
   008C 12s00r00           1375 	lcall	__gptrput
   008F A3                 1376 	inc	dptr
   0090 08                 1377 	inc	r0
   0091 E6                 1378 	mov	a,@r0
   0092 12s00r00           1379 	lcall	__gptrput
                    0095   1380 	C$list.c$73$1$1 ==.
                           1381 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:73: pxList->xListEnd.pxPrevious = ( xListItem * ) &( pxList->xListEnd );
   0095 E5*00              1382 	mov	a,_bp
   0097 24 04              1383 	add	a,#0x04
   0099 F8                 1384 	mov	r0,a
   009A 74 05              1385 	mov	a,#0x05
   009C 26                 1386 	add	a,@r0
   009D FB                 1387 	mov	r3,a
   009E 74 00              1388 	mov	a,#0x00
   00A0 08                 1389 	inc	r0
   00A1 36                 1390 	addc	a,@r0
   00A2 FC                 1391 	mov	r4,a
   00A3 08                 1392 	inc	r0
   00A4 86 05              1393 	mov	ar5,@r0
   00A6 8B 82              1394 	mov	dpl,r3
   00A8 8C 83              1395 	mov	dph,r4
   00AA 8D F0              1396 	mov	b,r5
   00AC E5*00              1397 	mov	a,_bp
   00AE 24 04              1398 	add	a,#0x04
   00B0 F8                 1399 	mov	r0,a
   00B1 E6                 1400 	mov	a,@r0
   00B2 12s00r00           1401 	lcall	__gptrput
   00B5 A3                 1402 	inc	dptr
   00B6 08                 1403 	inc	r0
   00B7 E6                 1404 	mov	a,@r0
   00B8 12s00r00           1405 	lcall	__gptrput
   00BB A3                 1406 	inc	dptr
   00BC 08                 1407 	inc	r0
   00BD E6                 1408 	mov	a,@r0
   00BE 12s00r00           1409 	lcall	__gptrput
                    00C1   1410 	C$list.c$75$1$1 ==.
                           1411 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:75: pxList->uxNumberOfItems = 0;
   00C1 A8*00              1412 	mov	r0,_bp
   00C3 08                 1413 	inc	r0
   00C4 86 82              1414 	mov	dpl,@r0
   00C6 08                 1415 	inc	r0
   00C7 86 83              1416 	mov	dph,@r0
   00C9 08                 1417 	inc	r0
   00CA 86 F0              1418 	mov	b,@r0
   00CC 74 00              1419 	mov	a,#0x00
   00CE 12s00r00           1420 	lcall	__gptrput
   00D1                    1421 00101$:
   00D1 85*00 81           1422 	mov	sp,_bp
   00D4 D0*00              1423 	pop	_bp
                    00D6   1424 	C$list.c$76$1$1 ==.
                    00D6   1425 	XG$vListInitialise$0$0 ==.
   00D6 22                 1426 	ret
                           1427 ;------------------------------------------------------------
                           1428 ;Allocation info for local variables in function 'vListInitialiseItem'
                           1429 ;------------------------------------------------------------
                           1430 ;pxItem                    Allocated to registers r2 r3 r4 
                           1431 ;------------------------------------------------------------
                    00D7   1432 	G$vListInitialiseItem$0$0 ==.
                    00D7   1433 	C$list.c$79$1$1 ==.
                           1434 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:79: void vListInitialiseItem( xListItem *pxItem )
                           1435 ;	-----------------------------------------
                           1436 ;	 function vListInitialiseItem
                           1437 ;	-----------------------------------------
   00D7                    1438 _vListInitialiseItem:
   00D7 AA 82              1439 	mov	r2,dpl
   00D9 AB 83              1440 	mov	r3,dph
   00DB AC F0              1441 	mov	r4,b
                    00DD   1442 	C$list.c$82$1$1 ==.
                           1443 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:82: pxItem->pvContainer = NULL;
   00DD 74 0B              1444 	mov	a,#0x0B
   00DF 25 02              1445 	add	a,ar2
   00E1 FA                 1446 	mov	r2,a
   00E2 74 00              1447 	mov	a,#0x00
   00E4 35 03              1448 	addc	a,ar3
   00E6 FB                 1449 	mov	r3,a
   00E7 8A 82              1450 	mov	dpl,r2
   00E9 8B 83              1451 	mov	dph,r3
   00EB 8C F0              1452 	mov	b,r4
   00ED 74 00              1453 	mov	a,#0x00
   00EF 12s00r00           1454 	lcall	__gptrput
   00F2 A3                 1455 	inc	dptr
   00F3 74 00              1456 	mov	a,#0x00
   00F5 12s00r00           1457 	lcall	__gptrput
   00F8 A3                 1458 	inc	dptr
   00F9 74 00              1459 	mov	a,#0x00
   00FB 12s00r00           1460 	lcall	__gptrput
   00FE                    1461 00101$:
                    00FE   1462 	C$list.c$83$1$1 ==.
                    00FE   1463 	XG$vListInitialiseItem$0$0 ==.
   00FE 22                 1464 	ret
                           1465 ;------------------------------------------------------------
                           1466 ;Allocation info for local variables in function 'vListInsertEnd'
                           1467 ;------------------------------------------------------------
                           1468 ;pxNewListItem             Allocated to stack - offset -5
                           1469 ;pxList                    Allocated to stack - offset 1
                           1470 ;pxIndex                   Allocated to stack - offset 4
                           1471 ;sloc0                     Allocated to stack - offset 7
                           1472 ;sloc1                     Allocated to stack - offset 10
                           1473 ;------------------------------------------------------------
                    00FF   1474 	G$vListInsertEnd$0$0 ==.
                    00FF   1475 	C$list.c$86$1$1 ==.
                           1476 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:86: void vListInsertEnd( xList *pxList, xListItem *pxNewListItem )
                           1477 ;	-----------------------------------------
                           1478 ;	 function vListInsertEnd
                           1479 ;	-----------------------------------------
   00FF                    1480 _vListInsertEnd:
   00FF C0*00              1481 	push	_bp
   0101 85 81*00           1482 	mov	_bp,sp
   0104 C0 82              1483 	push	dpl
   0106 C0 83              1484 	push	dph
   0108 C0 F0              1485 	push	b
   010A E5 81              1486 	mov	a,sp
   010C 24 0C              1487 	add	a,#0x0c
   010E F5 81              1488 	mov	sp,a
                    0110   1489 	C$list.c$94$1$1 ==.
                           1490 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:94: pxIndex = pxList->pxIndex;
   0110 A8*00              1491 	mov	r0,_bp
   0112 08                 1492 	inc	r0
   0113 E5*00              1493 	mov	a,_bp
   0115 24 07              1494 	add	a,#0x07
   0117 F9                 1495 	mov	r1,a
   0118 74 01              1496 	mov	a,#0x01
   011A 26                 1497 	add	a,@r0
   011B F7                 1498 	mov	@r1,a
   011C 74 00              1499 	mov	a,#0x00
   011E 08                 1500 	inc	r0
   011F 36                 1501 	addc	a,@r0
   0120 09                 1502 	inc	r1
   0121 F7                 1503 	mov	@r1,a
   0122 08                 1504 	inc	r0
   0123 09                 1505 	inc	r1
   0124 E6                 1506 	mov	a,@r0
   0125 F7                 1507 	mov	@r1,a
   0126 E5*00              1508 	mov	a,_bp
   0128 24 07              1509 	add	a,#0x07
   012A F8                 1510 	mov	r0,a
   012B 86 82              1511 	mov	dpl,@r0
   012D 08                 1512 	inc	r0
   012E 86 83              1513 	mov	dph,@r0
   0130 08                 1514 	inc	r0
   0131 86 F0              1515 	mov	b,@r0
   0133 12s00r00           1516 	lcall	__gptrget
   0136 FA                 1517 	mov	r2,a
   0137 A3                 1518 	inc	dptr
   0138 12s00r00           1519 	lcall	__gptrget
   013B FB                 1520 	mov	r3,a
   013C A3                 1521 	inc	dptr
   013D 12s00r00           1522 	lcall	__gptrget
   0140 FC                 1523 	mov	r4,a
   0141 E5*00              1524 	mov	a,_bp
   0143 24 04              1525 	add	a,#0x04
   0145 F8                 1526 	mov	r0,a
   0146 A6 02              1527 	mov	@r0,ar2
   0148 08                 1528 	inc	r0
   0149 A6 03              1529 	mov	@r0,ar3
   014B 08                 1530 	inc	r0
   014C A6 04              1531 	mov	@r0,ar4
                    014E   1532 	C$list.c$96$1$1 ==.
                           1533 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:96: pxNewListItem->pxNext = pxIndex->pxNext;
   014E E5*00              1534 	mov	a,_bp
   0150 24 FB              1535 	add	a,#0xfb
   0152 F8                 1536 	mov	r0,a
   0153 86 02              1537 	mov	ar2,@r0
   0155 08                 1538 	inc	r0
   0156 86 03              1539 	mov	ar3,@r0
   0158 08                 1540 	inc	r0
   0159 86 04              1541 	mov	ar4,@r0
   015B E5*00              1542 	mov	a,_bp
   015D 24 0A              1543 	add	a,#0x0a
   015F F8                 1544 	mov	r0,a
   0160 74 02              1545 	mov	a,#0x02
   0162 25 02              1546 	add	a,ar2
   0164 F6                 1547 	mov	@r0,a
   0165 74 00              1548 	mov	a,#0x00
   0167 35 03              1549 	addc	a,ar3
   0169 08                 1550 	inc	r0
   016A F6                 1551 	mov	@r0,a
   016B 08                 1552 	inc	r0
   016C A6 04              1553 	mov	@r0,ar4
   016E E5*00              1554 	mov	a,_bp
   0170 24 04              1555 	add	a,#0x04
   0172 F8                 1556 	mov	r0,a
   0173 86 05              1557 	mov	ar5,@r0
   0175 08                 1558 	inc	r0
   0176 86 06              1559 	mov	ar6,@r0
   0178 08                 1560 	inc	r0
   0179 86 07              1561 	mov	ar7,@r0
   017B 74 02              1562 	mov	a,#0x02
   017D 25 05              1563 	add	a,ar5
   017F FD                 1564 	mov	r5,a
   0180 74 00              1565 	mov	a,#0x00
   0182 35 06              1566 	addc	a,ar6
   0184 FE                 1567 	mov	r6,a
   0185 8D 82              1568 	mov	dpl,r5
   0187 8E 83              1569 	mov	dph,r6
   0189 8F F0              1570 	mov	b,r7
   018B 12s00r00           1571 	lcall	__gptrget
   018E FD                 1572 	mov	r5,a
   018F A3                 1573 	inc	dptr
   0190 12s00r00           1574 	lcall	__gptrget
   0193 FE                 1575 	mov	r6,a
   0194 A3                 1576 	inc	dptr
   0195 12s00r00           1577 	lcall	__gptrget
   0198 FF                 1578 	mov	r7,a
   0199 E5*00              1579 	mov	a,_bp
   019B 24 0A              1580 	add	a,#0x0a
   019D F8                 1581 	mov	r0,a
   019E 86 82              1582 	mov	dpl,@r0
   01A0 08                 1583 	inc	r0
   01A1 86 83              1584 	mov	dph,@r0
   01A3 08                 1585 	inc	r0
   01A4 86 F0              1586 	mov	b,@r0
   01A6 ED                 1587 	mov	a,r5
   01A7 12s00r00           1588 	lcall	__gptrput
   01AA A3                 1589 	inc	dptr
   01AB EE                 1590 	mov	a,r6
   01AC 12s00r00           1591 	lcall	__gptrput
   01AF A3                 1592 	inc	dptr
   01B0 EF                 1593 	mov	a,r7
   01B1 12s00r00           1594 	lcall	__gptrput
                    01B4   1595 	C$list.c$97$1$1 ==.
                           1596 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:97: pxNewListItem->pxPrevious = pxList->pxIndex;
   01B4 E5*00              1597 	mov	a,_bp
   01B6 24 0A              1598 	add	a,#0x0a
   01B8 F8                 1599 	mov	r0,a
   01B9 74 05              1600 	mov	a,#0x05
   01BB 25 02              1601 	add	a,ar2
   01BD F6                 1602 	mov	@r0,a
   01BE 74 00              1603 	mov	a,#0x00
   01C0 35 03              1604 	addc	a,ar3
   01C2 08                 1605 	inc	r0
   01C3 F6                 1606 	mov	@r0,a
   01C4 08                 1607 	inc	r0
   01C5 A6 04              1608 	mov	@r0,ar4
   01C7 E5*00              1609 	mov	a,_bp
   01C9 24 07              1610 	add	a,#0x07
   01CB F8                 1611 	mov	r0,a
   01CC 86 82              1612 	mov	dpl,@r0
   01CE 08                 1613 	inc	r0
   01CF 86 83              1614 	mov	dph,@r0
   01D1 08                 1615 	inc	r0
   01D2 86 F0              1616 	mov	b,@r0
   01D4 12s00r00           1617 	lcall	__gptrget
   01D7 FD                 1618 	mov	r5,a
   01D8 A3                 1619 	inc	dptr
   01D9 12s00r00           1620 	lcall	__gptrget
   01DC FE                 1621 	mov	r6,a
   01DD A3                 1622 	inc	dptr
   01DE 12s00r00           1623 	lcall	__gptrget
   01E1 FF                 1624 	mov	r7,a
   01E2 E5*00              1625 	mov	a,_bp
   01E4 24 0A              1626 	add	a,#0x0a
   01E6 F8                 1627 	mov	r0,a
   01E7 86 82              1628 	mov	dpl,@r0
   01E9 08                 1629 	inc	r0
   01EA 86 83              1630 	mov	dph,@r0
   01EC 08                 1631 	inc	r0
   01ED 86 F0              1632 	mov	b,@r0
   01EF ED                 1633 	mov	a,r5
   01F0 12s00r00           1634 	lcall	__gptrput
   01F3 A3                 1635 	inc	dptr
   01F4 EE                 1636 	mov	a,r6
   01F5 12s00r00           1637 	lcall	__gptrput
   01F8 A3                 1638 	inc	dptr
   01F9 EF                 1639 	mov	a,r7
   01FA 12s00r00           1640 	lcall	__gptrput
                    01FD   1641 	C$list.c$98$1$1 ==.
                           1642 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:98: pxIndex->pxNext->pxPrevious = ( volatile xListItem * ) pxNewListItem;
   01FD E5*00              1643 	mov	a,_bp
   01FF 24 04              1644 	add	a,#0x04
   0201 F8                 1645 	mov	r0,a
   0202 86 05              1646 	mov	ar5,@r0
   0204 08                 1647 	inc	r0
   0205 86 06              1648 	mov	ar6,@r0
   0207 08                 1649 	inc	r0
   0208 86 07              1650 	mov	ar7,@r0
   020A 74 02              1651 	mov	a,#0x02
   020C 25 05              1652 	add	a,ar5
   020E FD                 1653 	mov	r5,a
   020F 74 00              1654 	mov	a,#0x00
   0211 35 06              1655 	addc	a,ar6
   0213 FE                 1656 	mov	r6,a
   0214 8D 82              1657 	mov	dpl,r5
   0216 8E 83              1658 	mov	dph,r6
   0218 8F F0              1659 	mov	b,r7
   021A 12s00r00           1660 	lcall	__gptrget
   021D FD                 1661 	mov	r5,a
   021E A3                 1662 	inc	dptr
   021F 12s00r00           1663 	lcall	__gptrget
   0222 FE                 1664 	mov	r6,a
   0223 A3                 1665 	inc	dptr
   0224 12s00r00           1666 	lcall	__gptrget
   0227 FF                 1667 	mov	r7,a
   0228 74 05              1668 	mov	a,#0x05
   022A 25 05              1669 	add	a,ar5
   022C FD                 1670 	mov	r5,a
   022D 74 00              1671 	mov	a,#0x00
   022F 35 06              1672 	addc	a,ar6
   0231 FE                 1673 	mov	r6,a
   0232 8D 82              1674 	mov	dpl,r5
   0234 8E 83              1675 	mov	dph,r6
   0236 8F F0              1676 	mov	b,r7
   0238 EA                 1677 	mov	a,r2
   0239 12s00r00           1678 	lcall	__gptrput
   023C A3                 1679 	inc	dptr
   023D EB                 1680 	mov	a,r3
   023E 12s00r00           1681 	lcall	__gptrput
   0241 A3                 1682 	inc	dptr
   0242 EC                 1683 	mov	a,r4
   0243 12s00r00           1684 	lcall	__gptrput
                    0246   1685 	C$list.c$99$1$1 ==.
                           1686 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:99: pxIndex->pxNext = ( volatile xListItem * ) pxNewListItem;
   0246 E5*00              1687 	mov	a,_bp
   0248 24 04              1688 	add	a,#0x04
   024A F8                 1689 	mov	r0,a
   024B 86 05              1690 	mov	ar5,@r0
   024D 08                 1691 	inc	r0
   024E 86 06              1692 	mov	ar6,@r0
   0250 08                 1693 	inc	r0
   0251 86 07              1694 	mov	ar7,@r0
   0253 74 02              1695 	mov	a,#0x02
   0255 25 05              1696 	add	a,ar5
   0257 FD                 1697 	mov	r5,a
   0258 74 00              1698 	mov	a,#0x00
   025A 35 06              1699 	addc	a,ar6
   025C FE                 1700 	mov	r6,a
   025D 8D 82              1701 	mov	dpl,r5
   025F 8E 83              1702 	mov	dph,r6
   0261 8F F0              1703 	mov	b,r7
   0263 EA                 1704 	mov	a,r2
   0264 12s00r00           1705 	lcall	__gptrput
   0267 A3                 1706 	inc	dptr
   0268 EB                 1707 	mov	a,r3
   0269 12s00r00           1708 	lcall	__gptrput
   026C A3                 1709 	inc	dptr
   026D EC                 1710 	mov	a,r4
   026E 12s00r00           1711 	lcall	__gptrput
                    0271   1712 	C$list.c$100$1$1 ==.
                           1713 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:100: pxList->pxIndex = ( volatile xListItem * ) pxNewListItem;
   0271 E5*00              1714 	mov	a,_bp
   0273 24 07              1715 	add	a,#0x07
   0275 F8                 1716 	mov	r0,a
   0276 86 82              1717 	mov	dpl,@r0
   0278 08                 1718 	inc	r0
   0279 86 83              1719 	mov	dph,@r0
   027B 08                 1720 	inc	r0
   027C 86 F0              1721 	mov	b,@r0
   027E EA                 1722 	mov	a,r2
   027F 12s00r00           1723 	lcall	__gptrput
   0282 A3                 1724 	inc	dptr
   0283 EB                 1725 	mov	a,r3
   0284 12s00r00           1726 	lcall	__gptrput
   0287 A3                 1727 	inc	dptr
   0288 EC                 1728 	mov	a,r4
   0289 12s00r00           1729 	lcall	__gptrput
                    028C   1730 	C$list.c$103$1$1 ==.
                           1731 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:103: pxNewListItem->pvContainer = ( void * ) pxList;
   028C 74 0B              1732 	mov	a,#0x0B
   028E 25 02              1733 	add	a,ar2
   0290 FA                 1734 	mov	r2,a
   0291 74 00              1735 	mov	a,#0x00
   0293 35 03              1736 	addc	a,ar3
   0295 FB                 1737 	mov	r3,a
   0296 8A 82              1738 	mov	dpl,r2
   0298 8B 83              1739 	mov	dph,r3
   029A 8C F0              1740 	mov	b,r4
   029C A8*00              1741 	mov	r0,_bp
   029E 08                 1742 	inc	r0
   029F E6                 1743 	mov	a,@r0
   02A0 12s00r00           1744 	lcall	__gptrput
   02A3 A3                 1745 	inc	dptr
   02A4 08                 1746 	inc	r0
   02A5 E6                 1747 	mov	a,@r0
   02A6 12s00r00           1748 	lcall	__gptrput
   02A9 A3                 1749 	inc	dptr
   02AA 08                 1750 	inc	r0
   02AB E6                 1751 	mov	a,@r0
   02AC 12s00r00           1752 	lcall	__gptrput
                    02AF   1753 	C$list.c$105$1$1 ==.
                           1754 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:105: ( pxList->uxNumberOfItems )++;
   02AF A8*00              1755 	mov	r0,_bp
   02B1 08                 1756 	inc	r0
   02B2 86 82              1757 	mov	dpl,@r0
   02B4 08                 1758 	inc	r0
   02B5 86 83              1759 	mov	dph,@r0
   02B7 08                 1760 	inc	r0
   02B8 86 F0              1761 	mov	b,@r0
   02BA 12s00r00           1762 	lcall	__gptrget
   02BD FA                 1763 	mov	r2,a
   02BE 0A                 1764 	inc	r2
   02BF A8*00              1765 	mov	r0,_bp
   02C1 08                 1766 	inc	r0
   02C2 86 82              1767 	mov	dpl,@r0
   02C4 08                 1768 	inc	r0
   02C5 86 83              1769 	mov	dph,@r0
   02C7 08                 1770 	inc	r0
   02C8 86 F0              1771 	mov	b,@r0
   02CA EA                 1772 	mov	a,r2
   02CB 12s00r00           1773 	lcall	__gptrput
   02CE                    1774 00101$:
   02CE 85*00 81           1775 	mov	sp,_bp
   02D1 D0*00              1776 	pop	_bp
                    02D3   1777 	C$list.c$106$1$1 ==.
                    02D3   1778 	XG$vListInsertEnd$0$0 ==.
   02D3 22                 1779 	ret
                           1780 ;------------------------------------------------------------
                           1781 ;Allocation info for local variables in function 'vListInsert'
                           1782 ;------------------------------------------------------------
                           1783 ;pxNewListItem             Allocated to stack - offset -5
                           1784 ;pxList                    Allocated to stack - offset 1
                           1785 ;pxIterator                Allocated to stack - offset 4
                           1786 ;xValueOfInsertion         Allocated to stack - offset 7
                           1787 ;sloc0                     Allocated to stack - offset 9
                           1788 ;------------------------------------------------------------
                    02D4   1789 	G$vListInsert$0$0 ==.
                    02D4   1790 	C$list.c$109$1$1 ==.
                           1791 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:109: void vListInsert( xList *pxList, xListItem *pxNewListItem )
                           1792 ;	-----------------------------------------
                           1793 ;	 function vListInsert
                           1794 ;	-----------------------------------------
   02D4                    1795 _vListInsert:
   02D4 C0*00              1796 	push	_bp
   02D6 85 81*00           1797 	mov	_bp,sp
   02D9 C0 82              1798 	push	dpl
   02DB C0 83              1799 	push	dph
   02DD C0 F0              1800 	push	b
   02DF E5 81              1801 	mov	a,sp
   02E1 24 0B              1802 	add	a,#0x0b
   02E3 F5 81              1803 	mov	sp,a
                    02E5   1804 	C$list.c$115$1$1 ==.
                           1805 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:115: xValueOfInsertion = pxNewListItem->xItemValue;
   02E5 E5*00              1806 	mov	a,_bp
   02E7 24 FB              1807 	add	a,#0xfb
   02E9 F8                 1808 	mov	r0,a
   02EA 86 05              1809 	mov	ar5,@r0
   02EC 08                 1810 	inc	r0
   02ED 86 06              1811 	mov	ar6,@r0
   02EF 08                 1812 	inc	r0
   02F0 86 07              1813 	mov	ar7,@r0
   02F2 8D 82              1814 	mov	dpl,r5
   02F4 8E 83              1815 	mov	dph,r6
   02F6 8F F0              1816 	mov	b,r7
   02F8 12s00r00           1817 	lcall	__gptrget
   02FB FA                 1818 	mov	r2,a
   02FC A3                 1819 	inc	dptr
   02FD 12s00r00           1820 	lcall	__gptrget
   0300 FB                 1821 	mov	r3,a
   0301 E5*00              1822 	mov	a,_bp
   0303 24 07              1823 	add	a,#0x07
   0305 F8                 1824 	mov	r0,a
   0306 A6 02              1825 	mov	@r0,ar2
   0308 08                 1826 	inc	r0
   0309 A6 03              1827 	mov	@r0,ar3
                    030B   1828 	C$list.c$124$1$1 ==.
                           1829 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:124: if( xValueOfInsertion == portMAX_DELAY )
   030B E5*00              1830 	mov	a,_bp
   030D 24 07              1831 	add	a,#0x07
   030F F8                 1832 	mov	r0,a
   0310 B6 FF 06           1833 	cjne	@r0,#0xFF,00113$
   0313 08                 1834 	inc	r0
   0314 B6 FF 02           1835 	cjne	@r0,#0xFF,00113$
   0317 80 03              1836 	sjmp	00114$
   0319                    1837 00113$:
   0319 02s03r65           1838 	ljmp	00102$
   031C                    1839 00114$:
                    031C   1840 	C$list.c$126$1$1 ==.
                           1841 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:126: pxIterator = pxList->xListEnd.pxPrevious;
   031C C0 05              1842 	push	ar5
   031E C0 06              1843 	push	ar6
   0320 C0 07              1844 	push	ar7
   0322 A8*00              1845 	mov	r0,_bp
   0324 08                 1846 	inc	r0
   0325 74 04              1847 	mov	a,#0x04
   0327 26                 1848 	add	a,@r0
   0328 FD                 1849 	mov	r5,a
   0329 74 00              1850 	mov	a,#0x00
   032B 08                 1851 	inc	r0
   032C 36                 1852 	addc	a,@r0
   032D FE                 1853 	mov	r6,a
   032E 08                 1854 	inc	r0
   032F 86 07              1855 	mov	ar7,@r0
   0331 74 05              1856 	mov	a,#0x05
   0333 25 05              1857 	add	a,ar5
   0335 FD                 1858 	mov	r5,a
   0336 74 00              1859 	mov	a,#0x00
   0338 35 06              1860 	addc	a,ar6
   033A FE                 1861 	mov	r6,a
   033B 8D 82              1862 	mov	dpl,r5
   033D 8E 83              1863 	mov	dph,r6
   033F 8F F0              1864 	mov	b,r7
   0341 12s00r00           1865 	lcall	__gptrget
   0344 FD                 1866 	mov	r5,a
   0345 A3                 1867 	inc	dptr
   0346 12s00r00           1868 	lcall	__gptrget
   0349 FE                 1869 	mov	r6,a
   034A A3                 1870 	inc	dptr
   034B 12s00r00           1871 	lcall	__gptrget
   034E FF                 1872 	mov	r7,a
   034F E5*00              1873 	mov	a,_bp
   0351 24 04              1874 	add	a,#0x04
   0353 F8                 1875 	mov	r0,a
   0354 A6 05              1876 	mov	@r0,ar5
   0356 08                 1877 	inc	r0
   0357 A6 06              1878 	mov	@r0,ar6
   0359 08                 1879 	inc	r0
   035A A6 07              1880 	mov	@r0,ar7
   035C D0 07              1881 	pop	ar7
   035E D0 06              1882 	pop	ar6
   0360 D0 05              1883 	pop	ar5
   0362 02s04r02           1884 	ljmp	00103$
   0365                    1885 00102$:
                    0365   1886 	C$list.c$130$2$3 ==.
                           1887 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:130: for( pxIterator = ( xListItem * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext )
   0365 A8*00              1888 	mov	r0,_bp
   0367 08                 1889 	inc	r0
   0368 E5*00              1890 	mov	a,_bp
   036A 24 04              1891 	add	a,#0x04
   036C F9                 1892 	mov	r1,a
   036D 74 04              1893 	mov	a,#0x04
   036F 26                 1894 	add	a,@r0
   0370 F7                 1895 	mov	@r1,a
   0371 74 00              1896 	mov	a,#0x00
   0373 08                 1897 	inc	r0
   0374 36                 1898 	addc	a,@r0
   0375 09                 1899 	inc	r1
   0376 F7                 1900 	mov	@r1,a
   0377 08                 1901 	inc	r0
   0378 09                 1902 	inc	r1
   0379 E6                 1903 	mov	a,@r0
   037A F7                 1904 	mov	@r1,a
   037B                    1905 00104$:
   037B E5*00              1906 	mov	a,_bp
   037D 24 04              1907 	add	a,#0x04
   037F F8                 1908 	mov	r0,a
   0380 86 02              1909 	mov	ar2,@r0
   0382 08                 1910 	inc	r0
   0383 86 03              1911 	mov	ar3,@r0
   0385 08                 1912 	inc	r0
   0386 86 04              1913 	mov	ar4,@r0
   0388 74 02              1914 	mov	a,#0x02
   038A 25 02              1915 	add	a,ar2
   038C FA                 1916 	mov	r2,a
   038D 74 00              1917 	mov	a,#0x00
   038F 35 03              1918 	addc	a,ar3
   0391 FB                 1919 	mov	r3,a
   0392 8A 82              1920 	mov	dpl,r2
   0394 8B 83              1921 	mov	dph,r3
   0396 8C F0              1922 	mov	b,r4
   0398 12s00r00           1923 	lcall	__gptrget
   039B FA                 1924 	mov	r2,a
   039C A3                 1925 	inc	dptr
   039D 12s00r00           1926 	lcall	__gptrget
   03A0 FB                 1927 	mov	r3,a
   03A1 A3                 1928 	inc	dptr
   03A2 12s00r00           1929 	lcall	__gptrget
   03A5 FC                 1930 	mov	r4,a
   03A6 8A 82              1931 	mov	dpl,r2
   03A8 8B 83              1932 	mov	dph,r3
   03AA 8C F0              1933 	mov	b,r4
   03AC 12s00r00           1934 	lcall	__gptrget
   03AF FA                 1935 	mov	r2,a
   03B0 A3                 1936 	inc	dptr
   03B1 12s00r00           1937 	lcall	__gptrget
   03B4 FB                 1938 	mov	r3,a
   03B5 E5*00              1939 	mov	a,_bp
   03B7 24 07              1940 	add	a,#0x07
   03B9 F8                 1941 	mov	r0,a
   03BA C3                 1942 	clr	c
   03BB E6                 1943 	mov	a,@r0
   03BC 9A                 1944 	subb	a,r2
   03BD 08                 1945 	inc	r0
   03BE E6                 1946 	mov	a,@r0
   03BF 9B                 1947 	subb	a,r3
   03C0 E4                 1948 	clr	a
   03C1 33                 1949 	rlc	a
   03C2 60 03              1950 	jz	00115$
   03C4 02s04r02           1951 	ljmp	00103$
   03C7                    1952 00115$:
   03C7 E5*00              1953 	mov	a,_bp
   03C9 24 04              1954 	add	a,#0x04
   03CB F8                 1955 	mov	r0,a
   03CC 86 02              1956 	mov	ar2,@r0
   03CE 08                 1957 	inc	r0
   03CF 86 03              1958 	mov	ar3,@r0
   03D1 08                 1959 	inc	r0
   03D2 86 04              1960 	mov	ar4,@r0
   03D4 74 02              1961 	mov	a,#0x02
   03D6 25 02              1962 	add	a,ar2
   03D8 FA                 1963 	mov	r2,a
   03D9 74 00              1964 	mov	a,#0x00
   03DB 35 03              1965 	addc	a,ar3
   03DD FB                 1966 	mov	r3,a
   03DE 8A 82              1967 	mov	dpl,r2
   03E0 8B 83              1968 	mov	dph,r3
   03E2 8C F0              1969 	mov	b,r4
   03E4 12s00r00           1970 	lcall	__gptrget
   03E7 FA                 1971 	mov	r2,a
   03E8 A3                 1972 	inc	dptr
   03E9 12s00r00           1973 	lcall	__gptrget
   03EC FB                 1974 	mov	r3,a
   03ED A3                 1975 	inc	dptr
   03EE 12s00r00           1976 	lcall	__gptrget
   03F1 FC                 1977 	mov	r4,a
   03F2 E5*00              1978 	mov	a,_bp
   03F4 24 04              1979 	add	a,#0x04
   03F6 F8                 1980 	mov	r0,a
   03F7 A6 02              1981 	mov	@r0,ar2
   03F9 08                 1982 	inc	r0
   03FA A6 03              1983 	mov	@r0,ar3
   03FC 08                 1984 	inc	r0
   03FD A6 04              1985 	mov	@r0,ar4
   03FF 02s03r7B           1986 	ljmp	00104$
   0402                    1987 00103$:
                    0402   1988 	C$list.c$137$1$1 ==.
                           1989 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:137: pxNewListItem->pxNext = pxIterator->pxNext;
   0402 E5*00              1990 	mov	a,_bp
   0404 24 09              1991 	add	a,#0x09
   0406 F8                 1992 	mov	r0,a
   0407 74 02              1993 	mov	a,#0x02
   0409 25 05              1994 	add	a,ar5
   040B F6                 1995 	mov	@r0,a
   040C 74 00              1996 	mov	a,#0x00
   040E 35 06              1997 	addc	a,ar6
   0410 08                 1998 	inc	r0
   0411 F6                 1999 	mov	@r0,a
   0412 08                 2000 	inc	r0
   0413 A6 07              2001 	mov	@r0,ar7
   0415 E5*00              2002 	mov	a,_bp
   0417 24 04              2003 	add	a,#0x04
   0419 F8                 2004 	mov	r0,a
   041A 86 02              2005 	mov	ar2,@r0
   041C 08                 2006 	inc	r0
   041D 86 03              2007 	mov	ar3,@r0
   041F 08                 2008 	inc	r0
   0420 86 04              2009 	mov	ar4,@r0
   0422 74 02              2010 	mov	a,#0x02
   0424 25 02              2011 	add	a,ar2
   0426 FA                 2012 	mov	r2,a
   0427 74 00              2013 	mov	a,#0x00
   0429 35 03              2014 	addc	a,ar3
   042B FB                 2015 	mov	r3,a
   042C 8A 82              2016 	mov	dpl,r2
   042E 8B 83              2017 	mov	dph,r3
   0430 8C F0              2018 	mov	b,r4
   0432 12s00r00           2019 	lcall	__gptrget
   0435 FA                 2020 	mov	r2,a
   0436 A3                 2021 	inc	dptr
   0437 12s00r00           2022 	lcall	__gptrget
   043A FB                 2023 	mov	r3,a
   043B A3                 2024 	inc	dptr
   043C 12s00r00           2025 	lcall	__gptrget
   043F FC                 2026 	mov	r4,a
   0440 E5*00              2027 	mov	a,_bp
   0442 24 09              2028 	add	a,#0x09
   0444 F8                 2029 	mov	r0,a
   0445 86 82              2030 	mov	dpl,@r0
   0447 08                 2031 	inc	r0
   0448 86 83              2032 	mov	dph,@r0
   044A 08                 2033 	inc	r0
   044B 86 F0              2034 	mov	b,@r0
   044D EA                 2035 	mov	a,r2
   044E 12s00r00           2036 	lcall	__gptrput
   0451 A3                 2037 	inc	dptr
   0452 EB                 2038 	mov	a,r3
   0453 12s00r00           2039 	lcall	__gptrput
   0456 A3                 2040 	inc	dptr
   0457 EC                 2041 	mov	a,r4
   0458 12s00r00           2042 	lcall	__gptrput
                    045B   2043 	C$list.c$138$1$1 ==.
                           2044 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:138: pxNewListItem->pxNext->pxPrevious = ( volatile xListItem * ) pxNewListItem;
   045B E5*00              2045 	mov	a,_bp
   045D 24 09              2046 	add	a,#0x09
   045F F8                 2047 	mov	r0,a
   0460 86 82              2048 	mov	dpl,@r0
   0462 08                 2049 	inc	r0
   0463 86 83              2050 	mov	dph,@r0
   0465 08                 2051 	inc	r0
   0466 86 F0              2052 	mov	b,@r0
   0468 12s00r00           2053 	lcall	__gptrget
   046B FA                 2054 	mov	r2,a
   046C A3                 2055 	inc	dptr
   046D 12s00r00           2056 	lcall	__gptrget
   0470 FB                 2057 	mov	r3,a
   0471 A3                 2058 	inc	dptr
   0472 12s00r00           2059 	lcall	__gptrget
   0475 FC                 2060 	mov	r4,a
   0476 74 05              2061 	mov	a,#0x05
   0478 25 02              2062 	add	a,ar2
   047A FA                 2063 	mov	r2,a
   047B 74 00              2064 	mov	a,#0x00
   047D 35 03              2065 	addc	a,ar3
   047F FB                 2066 	mov	r3,a
   0480 8A 82              2067 	mov	dpl,r2
   0482 8B 83              2068 	mov	dph,r3
   0484 8C F0              2069 	mov	b,r4
   0486 ED                 2070 	mov	a,r5
   0487 12s00r00           2071 	lcall	__gptrput
   048A A3                 2072 	inc	dptr
   048B EE                 2073 	mov	a,r6
   048C 12s00r00           2074 	lcall	__gptrput
   048F A3                 2075 	inc	dptr
   0490 EF                 2076 	mov	a,r7
   0491 12s00r00           2077 	lcall	__gptrput
                    0494   2078 	C$list.c$139$1$1 ==.
                           2079 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:139: pxNewListItem->pxPrevious = pxIterator;
   0494 74 05              2080 	mov	a,#0x05
   0496 25 05              2081 	add	a,ar5
   0498 FA                 2082 	mov	r2,a
   0499 74 00              2083 	mov	a,#0x00
   049B 35 06              2084 	addc	a,ar6
   049D FB                 2085 	mov	r3,a
   049E 8F 04              2086 	mov	ar4,r7
   04A0 8A 82              2087 	mov	dpl,r2
   04A2 8B 83              2088 	mov	dph,r3
   04A4 8C F0              2089 	mov	b,r4
   04A6 E5*00              2090 	mov	a,_bp
   04A8 24 04              2091 	add	a,#0x04
   04AA F8                 2092 	mov	r0,a
   04AB E6                 2093 	mov	a,@r0
   04AC 12s00r00           2094 	lcall	__gptrput
   04AF A3                 2095 	inc	dptr
   04B0 08                 2096 	inc	r0
   04B1 E6                 2097 	mov	a,@r0
   04B2 12s00r00           2098 	lcall	__gptrput
   04B5 A3                 2099 	inc	dptr
   04B6 08                 2100 	inc	r0
   04B7 E6                 2101 	mov	a,@r0
   04B8 12s00r00           2102 	lcall	__gptrput
                    04BB   2103 	C$list.c$140$1$1 ==.
                           2104 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:140: pxIterator->pxNext = ( volatile xListItem * ) pxNewListItem;
   04BB E5*00              2105 	mov	a,_bp
   04BD 24 04              2106 	add	a,#0x04
   04BF F8                 2107 	mov	r0,a
   04C0 86 02              2108 	mov	ar2,@r0
   04C2 08                 2109 	inc	r0
   04C3 86 03              2110 	mov	ar3,@r0
   04C5 08                 2111 	inc	r0
   04C6 86 04              2112 	mov	ar4,@r0
   04C8 74 02              2113 	mov	a,#0x02
   04CA 25 02              2114 	add	a,ar2
   04CC FA                 2115 	mov	r2,a
   04CD 74 00              2116 	mov	a,#0x00
   04CF 35 03              2117 	addc	a,ar3
   04D1 FB                 2118 	mov	r3,a
   04D2 8A 82              2119 	mov	dpl,r2
   04D4 8B 83              2120 	mov	dph,r3
   04D6 8C F0              2121 	mov	b,r4
   04D8 ED                 2122 	mov	a,r5
   04D9 12s00r00           2123 	lcall	__gptrput
   04DC A3                 2124 	inc	dptr
   04DD EE                 2125 	mov	a,r6
   04DE 12s00r00           2126 	lcall	__gptrput
   04E1 A3                 2127 	inc	dptr
   04E2 EF                 2128 	mov	a,r7
   04E3 12s00r00           2129 	lcall	__gptrput
                    04E6   2130 	C$list.c$144$1$1 ==.
                           2131 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:144: pxNewListItem->pvContainer = ( void * ) pxList;
   04E6 74 0B              2132 	mov	a,#0x0B
   04E8 25 05              2133 	add	a,ar5
   04EA FD                 2134 	mov	r5,a
   04EB 74 00              2135 	mov	a,#0x00
   04ED 35 06              2136 	addc	a,ar6
   04EF FE                 2137 	mov	r6,a
   04F0 8D 82              2138 	mov	dpl,r5
   04F2 8E 83              2139 	mov	dph,r6
   04F4 8F F0              2140 	mov	b,r7
   04F6 A8*00              2141 	mov	r0,_bp
   04F8 08                 2142 	inc	r0
   04F9 E6                 2143 	mov	a,@r0
   04FA 12s00r00           2144 	lcall	__gptrput
   04FD A3                 2145 	inc	dptr
   04FE 08                 2146 	inc	r0
   04FF E6                 2147 	mov	a,@r0
   0500 12s00r00           2148 	lcall	__gptrput
   0503 A3                 2149 	inc	dptr
   0504 08                 2150 	inc	r0
   0505 E6                 2151 	mov	a,@r0
   0506 12s00r00           2152 	lcall	__gptrput
                    0509   2153 	C$list.c$146$1$1 ==.
                           2154 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:146: ( pxList->uxNumberOfItems )++;
   0509 A8*00              2155 	mov	r0,_bp
   050B 08                 2156 	inc	r0
   050C 86 82              2157 	mov	dpl,@r0
   050E 08                 2158 	inc	r0
   050F 86 83              2159 	mov	dph,@r0
   0511 08                 2160 	inc	r0
   0512 86 F0              2161 	mov	b,@r0
   0514 12s00r00           2162 	lcall	__gptrget
   0517 FA                 2163 	mov	r2,a
   0518 0A                 2164 	inc	r2
   0519 A8*00              2165 	mov	r0,_bp
   051B 08                 2166 	inc	r0
   051C 86 82              2167 	mov	dpl,@r0
   051E 08                 2168 	inc	r0
   051F 86 83              2169 	mov	dph,@r0
   0521 08                 2170 	inc	r0
   0522 86 F0              2171 	mov	b,@r0
   0524 EA                 2172 	mov	a,r2
   0525 12s00r00           2173 	lcall	__gptrput
   0528                    2174 00108$:
   0528 85*00 81           2175 	mov	sp,_bp
   052B D0*00              2176 	pop	_bp
                    052D   2177 	C$list.c$147$1$1 ==.
                    052D   2178 	XG$vListInsert$0$0 ==.
   052D 22                 2179 	ret
                           2180 ;------------------------------------------------------------
                           2181 ;Allocation info for local variables in function 'vListRemove'
                           2182 ;------------------------------------------------------------
                           2183 ;pxItemToRemove            Allocated to stack - offset 1
                           2184 ;pxList                    Allocated to stack - offset 4
                           2185 ;sloc0                     Allocated to stack - offset 7
                           2186 ;sloc1                     Allocated to stack - offset 10
                           2187 ;------------------------------------------------------------
                    052E   2188 	G$vListRemove$0$0 ==.
                    052E   2189 	C$list.c$150$1$1 ==.
                           2190 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:150: void vListRemove( xListItem *pxItemToRemove )
                           2191 ;	-----------------------------------------
                           2192 ;	 function vListRemove
                           2193 ;	-----------------------------------------
   052E                    2194 _vListRemove:
   052E C0*00              2195 	push	_bp
   0530 85 81*00           2196 	mov	_bp,sp
   0533 C0 82              2197 	push	dpl
   0535 C0 83              2198 	push	dph
   0537 C0 F0              2199 	push	b
   0539 E5 81              2200 	mov	a,sp
   053B 24 0C              2201 	add	a,#0x0c
   053D F5 81              2202 	mov	sp,a
                    053F   2203 	C$list.c$154$1$1 ==.
                           2204 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:154: pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
   053F A8*00              2205 	mov	r0,_bp
   0541 08                 2206 	inc	r0
   0542 74 02              2207 	mov	a,#0x02
   0544 26                 2208 	add	a,@r0
   0545 FD                 2209 	mov	r5,a
   0546 74 00              2210 	mov	a,#0x00
   0548 08                 2211 	inc	r0
   0549 36                 2212 	addc	a,@r0
   054A FE                 2213 	mov	r6,a
   054B 08                 2214 	inc	r0
   054C 86 07              2215 	mov	ar7,@r0
   054E 8D 82              2216 	mov	dpl,r5
   0550 8E 83              2217 	mov	dph,r6
   0552 8F F0              2218 	mov	b,r7
   0554 12s00r00           2219 	lcall	__gptrget
   0557 FA                 2220 	mov	r2,a
   0558 A3                 2221 	inc	dptr
   0559 12s00r00           2222 	lcall	__gptrget
   055C FB                 2223 	mov	r3,a
   055D A3                 2224 	inc	dptr
   055E 12s00r00           2225 	lcall	__gptrget
   0561 FC                 2226 	mov	r4,a
   0562 E5*00              2227 	mov	a,_bp
   0564 24 0A              2228 	add	a,#0x0a
   0566 F8                 2229 	mov	r0,a
   0567 74 05              2230 	mov	a,#0x05
   0569 25 02              2231 	add	a,ar2
   056B F6                 2232 	mov	@r0,a
   056C 74 00              2233 	mov	a,#0x00
   056E 35 03              2234 	addc	a,ar3
   0570 08                 2235 	inc	r0
   0571 F6                 2236 	mov	@r0,a
   0572 08                 2237 	inc	r0
   0573 A6 04              2238 	mov	@r0,ar4
   0575 A8*00              2239 	mov	r0,_bp
   0577 08                 2240 	inc	r0
   0578 E5*00              2241 	mov	a,_bp
   057A 24 07              2242 	add	a,#0x07
   057C F9                 2243 	mov	r1,a
   057D 74 05              2244 	mov	a,#0x05
   057F 26                 2245 	add	a,@r0
   0580 F7                 2246 	mov	@r1,a
   0581 74 00              2247 	mov	a,#0x00
   0583 08                 2248 	inc	r0
   0584 36                 2249 	addc	a,@r0
   0585 09                 2250 	inc	r1
   0586 F7                 2251 	mov	@r1,a
   0587 08                 2252 	inc	r0
   0588 09                 2253 	inc	r1
   0589 E6                 2254 	mov	a,@r0
   058A F7                 2255 	mov	@r1,a
   058B E5*00              2256 	mov	a,_bp
   058D 24 07              2257 	add	a,#0x07
   058F F8                 2258 	mov	r0,a
   0590 86 82              2259 	mov	dpl,@r0
   0592 08                 2260 	inc	r0
   0593 86 83              2261 	mov	dph,@r0
   0595 08                 2262 	inc	r0
   0596 86 F0              2263 	mov	b,@r0
   0598 12s00r00           2264 	lcall	__gptrget
   059B FA                 2265 	mov	r2,a
   059C A3                 2266 	inc	dptr
   059D 12s00r00           2267 	lcall	__gptrget
   05A0 FB                 2268 	mov	r3,a
   05A1 A3                 2269 	inc	dptr
   05A2 12s00r00           2270 	lcall	__gptrget
   05A5 FC                 2271 	mov	r4,a
   05A6 E5*00              2272 	mov	a,_bp
   05A8 24 0A              2273 	add	a,#0x0a
   05AA F8                 2274 	mov	r0,a
   05AB 86 82              2275 	mov	dpl,@r0
   05AD 08                 2276 	inc	r0
   05AE 86 83              2277 	mov	dph,@r0
   05B0 08                 2278 	inc	r0
   05B1 86 F0              2279 	mov	b,@r0
   05B3 EA                 2280 	mov	a,r2
   05B4 12s00r00           2281 	lcall	__gptrput
   05B7 A3                 2282 	inc	dptr
   05B8 EB                 2283 	mov	a,r3
   05B9 12s00r00           2284 	lcall	__gptrput
   05BC A3                 2285 	inc	dptr
   05BD EC                 2286 	mov	a,r4
   05BE 12s00r00           2287 	lcall	__gptrput
                    05C1   2288 	C$list.c$155$1$1 ==.
                           2289 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:155: pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
   05C1 E5*00              2290 	mov	a,_bp
   05C3 24 07              2291 	add	a,#0x07
   05C5 F8                 2292 	mov	r0,a
   05C6 86 82              2293 	mov	dpl,@r0
   05C8 08                 2294 	inc	r0
   05C9 86 83              2295 	mov	dph,@r0
   05CB 08                 2296 	inc	r0
   05CC 86 F0              2297 	mov	b,@r0
   05CE 12s00r00           2298 	lcall	__gptrget
   05D1 FA                 2299 	mov	r2,a
   05D2 A3                 2300 	inc	dptr
   05D3 12s00r00           2301 	lcall	__gptrget
   05D6 FB                 2302 	mov	r3,a
   05D7 A3                 2303 	inc	dptr
   05D8 12s00r00           2304 	lcall	__gptrget
   05DB FC                 2305 	mov	r4,a
   05DC 74 02              2306 	mov	a,#0x02
   05DE 25 02              2307 	add	a,ar2
   05E0 FA                 2308 	mov	r2,a
   05E1 74 00              2309 	mov	a,#0x00
   05E3 35 03              2310 	addc	a,ar3
   05E5 FB                 2311 	mov	r3,a
   05E6 8D 82              2312 	mov	dpl,r5
   05E8 8E 83              2313 	mov	dph,r6
   05EA 8F F0              2314 	mov	b,r7
   05EC 12s00r00           2315 	lcall	__gptrget
   05EF FD                 2316 	mov	r5,a
   05F0 A3                 2317 	inc	dptr
   05F1 12s00r00           2318 	lcall	__gptrget
   05F4 FE                 2319 	mov	r6,a
   05F5 A3                 2320 	inc	dptr
   05F6 12s00r00           2321 	lcall	__gptrget
   05F9 FF                 2322 	mov	r7,a
   05FA 8A 82              2323 	mov	dpl,r2
   05FC 8B 83              2324 	mov	dph,r3
   05FE 8C F0              2325 	mov	b,r4
   0600 ED                 2326 	mov	a,r5
   0601 12s00r00           2327 	lcall	__gptrput
   0604 A3                 2328 	inc	dptr
   0605 EE                 2329 	mov	a,r6
   0606 12s00r00           2330 	lcall	__gptrput
   0609 A3                 2331 	inc	dptr
   060A EF                 2332 	mov	a,r7
   060B 12s00r00           2333 	lcall	__gptrput
                    060E   2334 	C$list.c$159$1$1 ==.
                           2335 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:159: pxList = ( xList * ) pxItemToRemove->pvContainer;
   060E A8*00              2336 	mov	r0,_bp
   0610 08                 2337 	inc	r0
   0611 74 0B              2338 	mov	a,#0x0B
   0613 26                 2339 	add	a,@r0
   0614 FA                 2340 	mov	r2,a
   0615 74 00              2341 	mov	a,#0x00
   0617 08                 2342 	inc	r0
   0618 36                 2343 	addc	a,@r0
   0619 FB                 2344 	mov	r3,a
   061A 08                 2345 	inc	r0
   061B 86 04              2346 	mov	ar4,@r0
   061D 8A 82              2347 	mov	dpl,r2
   061F 8B 83              2348 	mov	dph,r3
   0621 8C F0              2349 	mov	b,r4
   0623 12s00r00           2350 	lcall	__gptrget
   0626 FD                 2351 	mov	r5,a
   0627 A3                 2352 	inc	dptr
   0628 12s00r00           2353 	lcall	__gptrget
   062B FE                 2354 	mov	r6,a
   062C A3                 2355 	inc	dptr
   062D 12s00r00           2356 	lcall	__gptrget
   0630 FF                 2357 	mov	r7,a
   0631 E5*00              2358 	mov	a,_bp
   0633 24 04              2359 	add	a,#0x04
   0635 F8                 2360 	mov	r0,a
   0636 A6 05              2361 	mov	@r0,ar5
   0638 08                 2362 	inc	r0
   0639 A6 06              2363 	mov	@r0,ar6
   063B 08                 2364 	inc	r0
   063C A6 07              2365 	mov	@r0,ar7
                    063E   2366 	C$list.c$162$1$1 ==.
                           2367 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:162: if( pxList->pxIndex == pxItemToRemove )
   063E E5*00              2368 	mov	a,_bp
   0640 24 04              2369 	add	a,#0x04
   0642 F8                 2370 	mov	r0,a
   0643 E5*00              2371 	mov	a,_bp
   0645 24 0A              2372 	add	a,#0x0a
   0647 F9                 2373 	mov	r1,a
   0648 74 01              2374 	mov	a,#0x01
   064A 26                 2375 	add	a,@r0
   064B F7                 2376 	mov	@r1,a
   064C 74 00              2377 	mov	a,#0x00
   064E 08                 2378 	inc	r0
   064F 36                 2379 	addc	a,@r0
   0650 09                 2380 	inc	r1
   0651 F7                 2381 	mov	@r1,a
   0652 08                 2382 	inc	r0
   0653 09                 2383 	inc	r1
   0654 E6                 2384 	mov	a,@r0
   0655 F7                 2385 	mov	@r1,a
   0656 E5*00              2386 	mov	a,_bp
   0658 24 0A              2387 	add	a,#0x0a
   065A F8                 2388 	mov	r0,a
   065B 86 82              2389 	mov	dpl,@r0
   065D 08                 2390 	inc	r0
   065E 86 83              2391 	mov	dph,@r0
   0660 08                 2392 	inc	r0
   0661 86 F0              2393 	mov	b,@r0
   0663 12s00r00           2394 	lcall	__gptrget
   0666 FD                 2395 	mov	r5,a
   0667 A3                 2396 	inc	dptr
   0668 12s00r00           2397 	lcall	__gptrget
   066B FE                 2398 	mov	r6,a
   066C A3                 2399 	inc	dptr
   066D 12s00r00           2400 	lcall	__gptrget
   0670 FF                 2401 	mov	r7,a
   0671 A8*00              2402 	mov	r0,_bp
   0673 08                 2403 	inc	r0
   0674 E6                 2404 	mov	a,@r0
   0675 B5 05 0C           2405 	cjne	a,ar5,00106$
   0678 08                 2406 	inc	r0
   0679 E6                 2407 	mov	a,@r0
   067A B5 06 07           2408 	cjne	a,ar6,00106$
   067D 08                 2409 	inc	r0
   067E E6                 2410 	mov	a,@r0
   067F B5 07 02           2411 	cjne	a,ar7,00106$
   0682 80 03              2412 	sjmp	00107$
   0684                    2413 00106$:
   0684 02s06rBD           2414 	ljmp	00102$
   0687                    2415 00107$:
                    0687   2416 	C$list.c$164$2$2 ==.
                           2417 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:164: pxList->pxIndex = pxItemToRemove->pxPrevious;
   0687 E5*00              2418 	mov	a,_bp
   0689 24 07              2419 	add	a,#0x07
   068B F8                 2420 	mov	r0,a
   068C 86 82              2421 	mov	dpl,@r0
   068E 08                 2422 	inc	r0
   068F 86 83              2423 	mov	dph,@r0
   0691 08                 2424 	inc	r0
   0692 86 F0              2425 	mov	b,@r0
   0694 12s00r00           2426 	lcall	__gptrget
   0697 FD                 2427 	mov	r5,a
   0698 A3                 2428 	inc	dptr
   0699 12s00r00           2429 	lcall	__gptrget
   069C FE                 2430 	mov	r6,a
   069D A3                 2431 	inc	dptr
   069E 12s00r00           2432 	lcall	__gptrget
   06A1 FF                 2433 	mov	r7,a
   06A2 E5*00              2434 	mov	a,_bp
   06A4 24 0A              2435 	add	a,#0x0a
   06A6 F8                 2436 	mov	r0,a
   06A7 86 82              2437 	mov	dpl,@r0
   06A9 08                 2438 	inc	r0
   06AA 86 83              2439 	mov	dph,@r0
   06AC 08                 2440 	inc	r0
   06AD 86 F0              2441 	mov	b,@r0
   06AF ED                 2442 	mov	a,r5
   06B0 12s00r00           2443 	lcall	__gptrput
   06B3 A3                 2444 	inc	dptr
   06B4 EE                 2445 	mov	a,r6
   06B5 12s00r00           2446 	lcall	__gptrput
   06B8 A3                 2447 	inc	dptr
   06B9 EF                 2448 	mov	a,r7
   06BA 12s00r00           2449 	lcall	__gptrput
   06BD                    2450 00102$:
                    06BD   2451 	C$list.c$167$1$1 ==.
                           2452 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:167: pxItemToRemove->pvContainer = NULL;
   06BD 8A 82              2453 	mov	dpl,r2
   06BF 8B 83              2454 	mov	dph,r3
   06C1 8C F0              2455 	mov	b,r4
   06C3 74 00              2456 	mov	a,#0x00
   06C5 12s00r00           2457 	lcall	__gptrput
   06C8 A3                 2458 	inc	dptr
   06C9 74 00              2459 	mov	a,#0x00
   06CB 12s00r00           2460 	lcall	__gptrput
   06CE A3                 2461 	inc	dptr
   06CF 74 00              2462 	mov	a,#0x00
   06D1 12s00r00           2463 	lcall	__gptrput
                    06D4   2464 	C$list.c$168$1$1 ==.
                           2465 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\list.c:168: ( pxList->uxNumberOfItems )--;
   06D4 E5*00              2466 	mov	a,_bp
   06D6 24 04              2467 	add	a,#0x04
   06D8 F8                 2468 	mov	r0,a
   06D9 86 82              2469 	mov	dpl,@r0
   06DB 08                 2470 	inc	r0
   06DC 86 83              2471 	mov	dph,@r0
   06DE 08                 2472 	inc	r0
   06DF 86 F0              2473 	mov	b,@r0
   06E1 12s00r00           2474 	lcall	__gptrget
   06E4 FA                 2475 	mov	r2,a
   06E5 1A                 2476 	dec	r2
   06E6 E5*00              2477 	mov	a,_bp
   06E8 24 04              2478 	add	a,#0x04
   06EA F8                 2479 	mov	r0,a
   06EB 86 82              2480 	mov	dpl,@r0
   06ED 08                 2481 	inc	r0
   06EE 86 83              2482 	mov	dph,@r0
   06F0 08                 2483 	inc	r0
   06F1 86 F0              2484 	mov	b,@r0
   06F3 EA                 2485 	mov	a,r2
   06F4 12s00r00           2486 	lcall	__gptrput
   06F7                    2487 00103$:
   06F7 85*00 81           2488 	mov	sp,_bp
   06FA D0*00              2489 	pop	_bp
                    06FC   2490 	C$list.c$169$1$1 ==.
                    06FC   2491 	XG$vListRemove$0$0 ==.
   06FC 22                 2492 	ret
                           2493 	.area CSEG    (CODE)
                           2494 	.area CONST   (CODE)
                           2495 	.area XINIT   (CODE)
                           2496 	.area CABS    (ABS,CODE)
