                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.8.0 #5117 (Mar 23 2008) (MINGW32)
                              4 ; This file was generated Fri Jun 17 15:10:29 2016
                              5 ;--------------------------------------------------------
                              6 	.module port
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _AB4_LED2
                             13 	.globl _AB4_LED1
                             14 	.globl _AB4_SW2
                             15 	.globl _AB4_SW1
                             16 	.globl _SW2
                             17 	.globl _LED
                             18 	.globl _P7_7
                             19 	.globl _P7_6
                             20 	.globl _P7_5
                             21 	.globl _P7_4
                             22 	.globl _P7_3
                             23 	.globl _P7_2
                             24 	.globl _P7_1
                             25 	.globl _P7_0
                             26 	.globl _SPIF
                             27 	.globl _WCOL
                             28 	.globl _MODF
                             29 	.globl _RXOVRN
                             30 	.globl _NSSMD1
                             31 	.globl _NSSMD0
                             32 	.globl _TXBMT
                             33 	.globl _SPIEN
                             34 	.globl _P6_7
                             35 	.globl _P6_6
                             36 	.globl _P6_5
                             37 	.globl _P6_4
                             38 	.globl _P6_3
                             39 	.globl _P6_2
                             40 	.globl _P6_1
                             41 	.globl _P6_0
                             42 	.globl _AD2EN
                             43 	.globl _AD2TM
                             44 	.globl _AD2INT
                             45 	.globl _AD2BUSY
                             46 	.globl _AD2CM2
                             47 	.globl _AD2CM1
                             48 	.globl _AD2CM0
                             49 	.globl _AD2WINT
                             50 	.globl _AD0EN
                             51 	.globl _AD0TM
                             52 	.globl _AD0INT
                             53 	.globl _AD0BUSY
                             54 	.globl _AD0CM1
                             55 	.globl _AD0CM0
                             56 	.globl _AD0WINT
                             57 	.globl _AD0LJST
                             58 	.globl _P5_7
                             59 	.globl _P5_6
                             60 	.globl _P5_5
                             61 	.globl _P5_4
                             62 	.globl _P5_3
                             63 	.globl _P5_2
                             64 	.globl _P5_1
                             65 	.globl _P5_0
                             66 	.globl _CF
                             67 	.globl _CR
                             68 	.globl _CCF5
                             69 	.globl _CCF4
                             70 	.globl _CCF3
                             71 	.globl _CCF2
                             72 	.globl _CCF1
                             73 	.globl _CCF0
                             74 	.globl _CY
                             75 	.globl _AC
                             76 	.globl _F0
                             77 	.globl _RS1
                             78 	.globl _RS0
                             79 	.globl _OV
                             80 	.globl _F1
                             81 	.globl _P
                             82 	.globl _P4_7
                             83 	.globl _P4_6
                             84 	.globl _P4_5
                             85 	.globl _P4_4
                             86 	.globl _P4_3
                             87 	.globl _P4_2
                             88 	.globl _P4_1
                             89 	.globl _P4_0
                             90 	.globl _TF4
                             91 	.globl _EXF4
                             92 	.globl _EXEN4
                             93 	.globl _TR4
                             94 	.globl _CT4
                             95 	.globl _CPRL4
                             96 	.globl _TF3
                             97 	.globl _EXF3
                             98 	.globl _EXEN3
                             99 	.globl _TR3
                            100 	.globl _CT3
                            101 	.globl _CPRL3
                            102 	.globl _TF2
                            103 	.globl _EXF2
                            104 	.globl _EXEN2
                            105 	.globl _TR2
                            106 	.globl _CT2
                            107 	.globl _CPRL2
                            108 	.globl _MAC0HO
                            109 	.globl _MAC0Z
                            110 	.globl _MAC0SO
                            111 	.globl _MAC0N
                            112 	.globl _BUSY
                            113 	.globl _ENSMB
                            114 	.globl _STA
                            115 	.globl _STO
                            116 	.globl _SI
                            117 	.globl _AA
                            118 	.globl _SMBFTE
                            119 	.globl _SMBTOE
                            120 	.globl _PT2
                            121 	.globl _PS
                            122 	.globl _PS0
                            123 	.globl _PT1
                            124 	.globl _PX1
                            125 	.globl _PT0
                            126 	.globl _PX0
                            127 	.globl _P3_7
                            128 	.globl _P3_6
                            129 	.globl _P3_5
                            130 	.globl _P3_4
                            131 	.globl _P3_3
                            132 	.globl _P3_2
                            133 	.globl _P3_1
                            134 	.globl _P3_0
                            135 	.globl _EA
                            136 	.globl _ET2
                            137 	.globl _ES
                            138 	.globl _ES0
                            139 	.globl _ET1
                            140 	.globl _EX1
                            141 	.globl _ET0
                            142 	.globl _EX0
                            143 	.globl _P2_7
                            144 	.globl _P2_6
                            145 	.globl _P2_5
                            146 	.globl _P2_4
                            147 	.globl _P2_3
                            148 	.globl _P2_2
                            149 	.globl _P2_1
                            150 	.globl _P2_0
                            151 	.globl _S1MODE
                            152 	.globl _MCE1
                            153 	.globl _REN1
                            154 	.globl _TB81
                            155 	.globl _RB81
                            156 	.globl _TI1
                            157 	.globl _RI1
                            158 	.globl _SM00
                            159 	.globl _SM10
                            160 	.globl _SM20
                            161 	.globl _REN
                            162 	.globl _REN0
                            163 	.globl _TB80
                            164 	.globl _RB80
                            165 	.globl _TI
                            166 	.globl _TI0
                            167 	.globl _RI
                            168 	.globl _RI0
                            169 	.globl _P1_7
                            170 	.globl _P1_6
                            171 	.globl _P1_5
                            172 	.globl _P1_4
                            173 	.globl _P1_3
                            174 	.globl _P1_2
                            175 	.globl _P1_1
                            176 	.globl _P1_0
                            177 	.globl _FLHBUSY
                            178 	.globl _CP1EN
                            179 	.globl _CP1OUT
                            180 	.globl _CP1RIF
                            181 	.globl _CP1FIF
                            182 	.globl _CP1HYP1
                            183 	.globl _CP1HYP0
                            184 	.globl _CP1HYN1
                            185 	.globl _CP1HYN0
                            186 	.globl _CP0EN
                            187 	.globl _CP0OUT
                            188 	.globl _CP0RIF
                            189 	.globl _CP0FIF
                            190 	.globl _CP0HYP1
                            191 	.globl _CP0HYP0
                            192 	.globl _CP0HYN1
                            193 	.globl _CP0HYN0
                            194 	.globl _TF1
                            195 	.globl _TR1
                            196 	.globl _TF0
                            197 	.globl _TR0
                            198 	.globl _IE1
                            199 	.globl _IT1
                            200 	.globl _IE0
                            201 	.globl _IT0
                            202 	.globl _P0_7
                            203 	.globl _P0_6
                            204 	.globl _P0_5
                            205 	.globl _P0_4
                            206 	.globl _P0_3
                            207 	.globl _P0_2
                            208 	.globl _P0_1
                            209 	.globl _P0_0
                            210 	.globl _MAC0RND
                            211 	.globl _MAC0ACC
                            212 	.globl _MAC0A
                            213 	.globl _RCAP4
                            214 	.globl _TMR4
                            215 	.globl _DAC1
                            216 	.globl _RCAP3
                            217 	.globl _TMR3
                            218 	.globl _PCA0CP5
                            219 	.globl _PCA0CP4
                            220 	.globl _PCA0CP3
                            221 	.globl _PCA0CP2
                            222 	.globl _PCA0CP1
                            223 	.globl _PCA0CP0
                            224 	.globl _PCA0
                            225 	.globl _DAC0
                            226 	.globl _ADC0LT
                            227 	.globl _ADC0GT
                            228 	.globl _ADC0
                            229 	.globl _RCAP2
                            230 	.globl _TMR2
                            231 	.globl _TMR1
                            232 	.globl _TMR0
                            233 	.globl _P7
                            234 	.globl _P6
                            235 	.globl _XBR2
                            236 	.globl _XBR1
                            237 	.globl _XBR0
                            238 	.globl _P5
                            239 	.globl _P4
                            240 	.globl _FLACL
                            241 	.globl _P1MDIN
                            242 	.globl _P3MDOUT
                            243 	.globl _P2MDOUT
                            244 	.globl _P1MDOUT
                            245 	.globl _P0MDOUT
                            246 	.globl _CCH0LC
                            247 	.globl _CCH0TN
                            248 	.globl _CCH0CN
                            249 	.globl _P7MDOUT
                            250 	.globl _P6MDOUT
                            251 	.globl _P5MDOUT
                            252 	.globl _P4MDOUT
                            253 	.globl _CCH0MA
                            254 	.globl _CLKSEL
                            255 	.globl _SFRPGCN
                            256 	.globl _PLL0FLT
                            257 	.globl _PLL0MUL
                            258 	.globl _PLL0DIV
                            259 	.globl _OSCXCN
                            260 	.globl _OSCICL
                            261 	.globl _OSCICN
                            262 	.globl _PLL0CN
                            263 	.globl _FLSTAT
                            264 	.globl _MAC0RNDH
                            265 	.globl _MAC0RNDL
                            266 	.globl _MAC0CF
                            267 	.globl _MAC0AH
                            268 	.globl _MAC0AL
                            269 	.globl _MAC0STA
                            270 	.globl _MAC0OVR
                            271 	.globl _MAC0ACC3
                            272 	.globl _MAC0ACC2
                            273 	.globl _MAC0ACC1
                            274 	.globl _MAC0ACC0
                            275 	.globl _MAC0BH
                            276 	.globl _MAC0BL
                            277 	.globl _ADC2CN
                            278 	.globl _TMR4H
                            279 	.globl _TMR4L
                            280 	.globl _RCAP4H
                            281 	.globl _RCAP4L
                            282 	.globl _TMR4CF
                            283 	.globl _TMR4CN
                            284 	.globl _ADC2LT
                            285 	.globl _ADC2GT
                            286 	.globl _ADC2
                            287 	.globl _ADC2CF
                            288 	.globl _AMX2SL
                            289 	.globl _AMX2CF
                            290 	.globl _CPT1MD
                            291 	.globl _CPT1CN
                            292 	.globl _DAC1CN
                            293 	.globl _DAC1H
                            294 	.globl _DAC1L
                            295 	.globl _TMR3H
                            296 	.globl _TMR3L
                            297 	.globl _RCAP3H
                            298 	.globl _RCAP3L
                            299 	.globl _TMR3CF
                            300 	.globl _TMR3CN
                            301 	.globl _SBUF1
                            302 	.globl _SCON1
                            303 	.globl _CPT0MD
                            304 	.globl _CPT0CN
                            305 	.globl _PCA0CPH1
                            306 	.globl _PCA0CPL1
                            307 	.globl _PCA0CPH0
                            308 	.globl _PCA0CPL0
                            309 	.globl _PCA0H
                            310 	.globl _PCA0L
                            311 	.globl _SPI0CN
                            312 	.globl _RSTSRC
                            313 	.globl _PCA0CPH4
                            314 	.globl _PCA0CPL4
                            315 	.globl _PCA0CPH3
                            316 	.globl _PCA0CPL3
                            317 	.globl _PCA0CPH2
                            318 	.globl _PCA0CPL2
                            319 	.globl _ADC0CN
                            320 	.globl _PCA0CPH5
                            321 	.globl _PCA0CPL5
                            322 	.globl _PCA0CPM5
                            323 	.globl _PCA0CPM4
                            324 	.globl _PCA0CPM3
                            325 	.globl _PCA0CPM2
                            326 	.globl _PCA0CPM1
                            327 	.globl _PCA0CPM0
                            328 	.globl _PCA0MD
                            329 	.globl _PCA0CN
                            330 	.globl _DAC0CN
                            331 	.globl _DAC0H
                            332 	.globl _DAC0L
                            333 	.globl _REF0CN
                            334 	.globl _SMB0CR
                            335 	.globl _TH2
                            336 	.globl _TMR2H
                            337 	.globl _TL2
                            338 	.globl _TMR2L
                            339 	.globl _RCAP2H
                            340 	.globl _RCAP2L
                            341 	.globl _TMR2CF
                            342 	.globl _TMR2CN
                            343 	.globl _ADC0LTH
                            344 	.globl _ADC0LTL
                            345 	.globl _ADC0GTH
                            346 	.globl _ADC0GTL
                            347 	.globl _SMB0ADR
                            348 	.globl _SMB0DAT
                            349 	.globl _SMB0STA
                            350 	.globl _SMB0CN
                            351 	.globl _ADC0H
                            352 	.globl _ADC0L
                            353 	.globl _ADC0CF
                            354 	.globl _AMX0SL
                            355 	.globl _AMX0CF
                            356 	.globl _SADEN0
                            357 	.globl _FLSCL
                            358 	.globl _SADDR0
                            359 	.globl _EMI0CF
                            360 	.globl __XPAGE
                            361 	.globl _EMI0CN
                            362 	.globl _EMI0TC
                            363 	.globl _SPI0CKR
                            364 	.globl _SPI0DAT
                            365 	.globl _SPI0CFG
                            366 	.globl _SBUF
                            367 	.globl _SBUF0
                            368 	.globl _SCON
                            369 	.globl _SCON0
                            370 	.globl _SSTA0
                            371 	.globl _PSCTL
                            372 	.globl _CKCON
                            373 	.globl _TH1
                            374 	.globl _TH0
                            375 	.globl _TL1
                            376 	.globl _TL0
                            377 	.globl _TMOD
                            378 	.globl _TCON
                            379 	.globl _WDTCN
                            380 	.globl _EIP2
                            381 	.globl _EIP1
                            382 	.globl _B
                            383 	.globl _EIE2
                            384 	.globl _EIE1
                            385 	.globl _ACC
                            386 	.globl _PSW
                            387 	.globl _IP
                            388 	.globl _PSBANK
                            389 	.globl _P3
                            390 	.globl _IE
                            391 	.globl _P2
                            392 	.globl _P1
                            393 	.globl _PCON
                            394 	.globl _SFRLAST
                            395 	.globl _SFRNEXT
                            396 	.globl _SFRPAGE
                            397 	.globl _DPH
                            398 	.globl _DPL
                            399 	.globl _SP
                            400 	.globl _P0
                            401 	.globl _pxPortInitialiseStack
                            402 	.globl _xPortStartScheduler
                            403 	.globl _vPortEndScheduler
                            404 	.globl _vPortYield
                            405 	.globl _vTimer2ISR
                            406 ;--------------------------------------------------------
                            407 ; special function registers
                            408 ;--------------------------------------------------------
                            409 	.area RSEG    (DATA)
                    0080    410 G$P0$0$0 == 0x0080
                    0080    411 _P0	=	0x0080
                    0081    412 G$SP$0$0 == 0x0081
                    0081    413 _SP	=	0x0081
                    0082    414 G$DPL$0$0 == 0x0082
                    0082    415 _DPL	=	0x0082
                    0083    416 G$DPH$0$0 == 0x0083
                    0083    417 _DPH	=	0x0083
                    0084    418 G$SFRPAGE$0$0 == 0x0084
                    0084    419 _SFRPAGE	=	0x0084
                    0085    420 G$SFRNEXT$0$0 == 0x0085
                    0085    421 _SFRNEXT	=	0x0085
                    0086    422 G$SFRLAST$0$0 == 0x0086
                    0086    423 _SFRLAST	=	0x0086
                    0087    424 G$PCON$0$0 == 0x0087
                    0087    425 _PCON	=	0x0087
                    0090    426 G$P1$0$0 == 0x0090
                    0090    427 _P1	=	0x0090
                    00A0    428 G$P2$0$0 == 0x00a0
                    00A0    429 _P2	=	0x00a0
                    00A8    430 G$IE$0$0 == 0x00a8
                    00A8    431 _IE	=	0x00a8
                    00B0    432 G$P3$0$0 == 0x00b0
                    00B0    433 _P3	=	0x00b0
                    00B1    434 G$PSBANK$0$0 == 0x00b1
                    00B1    435 _PSBANK	=	0x00b1
                    00B8    436 G$IP$0$0 == 0x00b8
                    00B8    437 _IP	=	0x00b8
                    00D0    438 G$PSW$0$0 == 0x00d0
                    00D0    439 _PSW	=	0x00d0
                    00E0    440 G$ACC$0$0 == 0x00e0
                    00E0    441 _ACC	=	0x00e0
                    00E6    442 G$EIE1$0$0 == 0x00e6
                    00E6    443 _EIE1	=	0x00e6
                    00E7    444 G$EIE2$0$0 == 0x00e7
                    00E7    445 _EIE2	=	0x00e7
                    00F0    446 G$B$0$0 == 0x00f0
                    00F0    447 _B	=	0x00f0
                    00F6    448 G$EIP1$0$0 == 0x00f6
                    00F6    449 _EIP1	=	0x00f6
                    00F7    450 G$EIP2$0$0 == 0x00f7
                    00F7    451 _EIP2	=	0x00f7
                    00FF    452 G$WDTCN$0$0 == 0x00ff
                    00FF    453 _WDTCN	=	0x00ff
                    0088    454 G$TCON$0$0 == 0x0088
                    0088    455 _TCON	=	0x0088
                    0089    456 G$TMOD$0$0 == 0x0089
                    0089    457 _TMOD	=	0x0089
                    008A    458 G$TL0$0$0 == 0x008a
                    008A    459 _TL0	=	0x008a
                    008B    460 G$TL1$0$0 == 0x008b
                    008B    461 _TL1	=	0x008b
                    008C    462 G$TH0$0$0 == 0x008c
                    008C    463 _TH0	=	0x008c
                    008D    464 G$TH1$0$0 == 0x008d
                    008D    465 _TH1	=	0x008d
                    008E    466 G$CKCON$0$0 == 0x008e
                    008E    467 _CKCON	=	0x008e
                    008F    468 G$PSCTL$0$0 == 0x008f
                    008F    469 _PSCTL	=	0x008f
                    0091    470 G$SSTA0$0$0 == 0x0091
                    0091    471 _SSTA0	=	0x0091
                    0098    472 G$SCON0$0$0 == 0x0098
                    0098    473 _SCON0	=	0x0098
                    0098    474 G$SCON$0$0 == 0x0098
                    0098    475 _SCON	=	0x0098
                    0099    476 G$SBUF0$0$0 == 0x0099
                    0099    477 _SBUF0	=	0x0099
                    0099    478 G$SBUF$0$0 == 0x0099
                    0099    479 _SBUF	=	0x0099
                    009A    480 G$SPI0CFG$0$0 == 0x009a
                    009A    481 _SPI0CFG	=	0x009a
                    009B    482 G$SPI0DAT$0$0 == 0x009b
                    009B    483 _SPI0DAT	=	0x009b
                    009D    484 G$SPI0CKR$0$0 == 0x009d
                    009D    485 _SPI0CKR	=	0x009d
                    00A1    486 G$EMI0TC$0$0 == 0x00a1
                    00A1    487 _EMI0TC	=	0x00a1
                    00A2    488 G$EMI0CN$0$0 == 0x00a2
                    00A2    489 _EMI0CN	=	0x00a2
                    00A2    490 G$_XPAGE$0$0 == 0x00a2
                    00A2    491 __XPAGE	=	0x00a2
                    00A3    492 G$EMI0CF$0$0 == 0x00a3
                    00A3    493 _EMI0CF	=	0x00a3
                    00A9    494 G$SADDR0$0$0 == 0x00a9
                    00A9    495 _SADDR0	=	0x00a9
                    00B7    496 G$FLSCL$0$0 == 0x00b7
                    00B7    497 _FLSCL	=	0x00b7
                    00B9    498 G$SADEN0$0$0 == 0x00b9
                    00B9    499 _SADEN0	=	0x00b9
                    00BA    500 G$AMX0CF$0$0 == 0x00ba
                    00BA    501 _AMX0CF	=	0x00ba
                    00BB    502 G$AMX0SL$0$0 == 0x00bb
                    00BB    503 _AMX0SL	=	0x00bb
                    00BC    504 G$ADC0CF$0$0 == 0x00bc
                    00BC    505 _ADC0CF	=	0x00bc
                    00BE    506 G$ADC0L$0$0 == 0x00be
                    00BE    507 _ADC0L	=	0x00be
                    00BF    508 G$ADC0H$0$0 == 0x00bf
                    00BF    509 _ADC0H	=	0x00bf
                    00C0    510 G$SMB0CN$0$0 == 0x00c0
                    00C0    511 _SMB0CN	=	0x00c0
                    00C1    512 G$SMB0STA$0$0 == 0x00c1
                    00C1    513 _SMB0STA	=	0x00c1
                    00C2    514 G$SMB0DAT$0$0 == 0x00c2
                    00C2    515 _SMB0DAT	=	0x00c2
                    00C3    516 G$SMB0ADR$0$0 == 0x00c3
                    00C3    517 _SMB0ADR	=	0x00c3
                    00C4    518 G$ADC0GTL$0$0 == 0x00c4
                    00C4    519 _ADC0GTL	=	0x00c4
                    00C5    520 G$ADC0GTH$0$0 == 0x00c5
                    00C5    521 _ADC0GTH	=	0x00c5
                    00C6    522 G$ADC0LTL$0$0 == 0x00c6
                    00C6    523 _ADC0LTL	=	0x00c6
                    00C7    524 G$ADC0LTH$0$0 == 0x00c7
                    00C7    525 _ADC0LTH	=	0x00c7
                    00C8    526 G$TMR2CN$0$0 == 0x00c8
                    00C8    527 _TMR2CN	=	0x00c8
                    00C9    528 G$TMR2CF$0$0 == 0x00c9
                    00C9    529 _TMR2CF	=	0x00c9
                    00CA    530 G$RCAP2L$0$0 == 0x00ca
                    00CA    531 _RCAP2L	=	0x00ca
                    00CB    532 G$RCAP2H$0$0 == 0x00cb
                    00CB    533 _RCAP2H	=	0x00cb
                    00CC    534 G$TMR2L$0$0 == 0x00cc
                    00CC    535 _TMR2L	=	0x00cc
                    00CC    536 G$TL2$0$0 == 0x00cc
                    00CC    537 _TL2	=	0x00cc
                    00CD    538 G$TMR2H$0$0 == 0x00cd
                    00CD    539 _TMR2H	=	0x00cd
                    00CD    540 G$TH2$0$0 == 0x00cd
                    00CD    541 _TH2	=	0x00cd
                    00CF    542 G$SMB0CR$0$0 == 0x00cf
                    00CF    543 _SMB0CR	=	0x00cf
                    00D1    544 G$REF0CN$0$0 == 0x00d1
                    00D1    545 _REF0CN	=	0x00d1
                    00D2    546 G$DAC0L$0$0 == 0x00d2
                    00D2    547 _DAC0L	=	0x00d2
                    00D3    548 G$DAC0H$0$0 == 0x00d3
                    00D3    549 _DAC0H	=	0x00d3
                    00D4    550 G$DAC0CN$0$0 == 0x00d4
                    00D4    551 _DAC0CN	=	0x00d4
                    00D8    552 G$PCA0CN$0$0 == 0x00d8
                    00D8    553 _PCA0CN	=	0x00d8
                    00D9    554 G$PCA0MD$0$0 == 0x00d9
                    00D9    555 _PCA0MD	=	0x00d9
                    00DA    556 G$PCA0CPM0$0$0 == 0x00da
                    00DA    557 _PCA0CPM0	=	0x00da
                    00DB    558 G$PCA0CPM1$0$0 == 0x00db
                    00DB    559 _PCA0CPM1	=	0x00db
                    00DC    560 G$PCA0CPM2$0$0 == 0x00dc
                    00DC    561 _PCA0CPM2	=	0x00dc
                    00DD    562 G$PCA0CPM3$0$0 == 0x00dd
                    00DD    563 _PCA0CPM3	=	0x00dd
                    00DE    564 G$PCA0CPM4$0$0 == 0x00de
                    00DE    565 _PCA0CPM4	=	0x00de
                    00DF    566 G$PCA0CPM5$0$0 == 0x00df
                    00DF    567 _PCA0CPM5	=	0x00df
                    00E1    568 G$PCA0CPL5$0$0 == 0x00e1
                    00E1    569 _PCA0CPL5	=	0x00e1
                    00E2    570 G$PCA0CPH5$0$0 == 0x00e2
                    00E2    571 _PCA0CPH5	=	0x00e2
                    00E8    572 G$ADC0CN$0$0 == 0x00e8
                    00E8    573 _ADC0CN	=	0x00e8
                    00E9    574 G$PCA0CPL2$0$0 == 0x00e9
                    00E9    575 _PCA0CPL2	=	0x00e9
                    00EA    576 G$PCA0CPH2$0$0 == 0x00ea
                    00EA    577 _PCA0CPH2	=	0x00ea
                    00EB    578 G$PCA0CPL3$0$0 == 0x00eb
                    00EB    579 _PCA0CPL3	=	0x00eb
                    00EC    580 G$PCA0CPH3$0$0 == 0x00ec
                    00EC    581 _PCA0CPH3	=	0x00ec
                    00ED    582 G$PCA0CPL4$0$0 == 0x00ed
                    00ED    583 _PCA0CPL4	=	0x00ed
                    00EE    584 G$PCA0CPH4$0$0 == 0x00ee
                    00EE    585 _PCA0CPH4	=	0x00ee
                    00EF    586 G$RSTSRC$0$0 == 0x00ef
                    00EF    587 _RSTSRC	=	0x00ef
                    00F8    588 G$SPI0CN$0$0 == 0x00f8
                    00F8    589 _SPI0CN	=	0x00f8
                    00F9    590 G$PCA0L$0$0 == 0x00f9
                    00F9    591 _PCA0L	=	0x00f9
                    00FA    592 G$PCA0H$0$0 == 0x00fa
                    00FA    593 _PCA0H	=	0x00fa
                    00FB    594 G$PCA0CPL0$0$0 == 0x00fb
                    00FB    595 _PCA0CPL0	=	0x00fb
                    00FC    596 G$PCA0CPH0$0$0 == 0x00fc
                    00FC    597 _PCA0CPH0	=	0x00fc
                    00FD    598 G$PCA0CPL1$0$0 == 0x00fd
                    00FD    599 _PCA0CPL1	=	0x00fd
                    00FE    600 G$PCA0CPH1$0$0 == 0x00fe
                    00FE    601 _PCA0CPH1	=	0x00fe
                    0088    602 G$CPT0CN$0$0 == 0x0088
                    0088    603 _CPT0CN	=	0x0088
                    0089    604 G$CPT0MD$0$0 == 0x0089
                    0089    605 _CPT0MD	=	0x0089
                    0098    606 G$SCON1$0$0 == 0x0098
                    0098    607 _SCON1	=	0x0098
                    0099    608 G$SBUF1$0$0 == 0x0099
                    0099    609 _SBUF1	=	0x0099
                    00C8    610 G$TMR3CN$0$0 == 0x00c8
                    00C8    611 _TMR3CN	=	0x00c8
                    00C9    612 G$TMR3CF$0$0 == 0x00c9
                    00C9    613 _TMR3CF	=	0x00c9
                    00CA    614 G$RCAP3L$0$0 == 0x00ca
                    00CA    615 _RCAP3L	=	0x00ca
                    00CB    616 G$RCAP3H$0$0 == 0x00cb
                    00CB    617 _RCAP3H	=	0x00cb
                    00CC    618 G$TMR3L$0$0 == 0x00cc
                    00CC    619 _TMR3L	=	0x00cc
                    00CD    620 G$TMR3H$0$0 == 0x00cd
                    00CD    621 _TMR3H	=	0x00cd
                    00D2    622 G$DAC1L$0$0 == 0x00d2
                    00D2    623 _DAC1L	=	0x00d2
                    00D3    624 G$DAC1H$0$0 == 0x00d3
                    00D3    625 _DAC1H	=	0x00d3
                    00D4    626 G$DAC1CN$0$0 == 0x00d4
                    00D4    627 _DAC1CN	=	0x00d4
                    0088    628 G$CPT1CN$0$0 == 0x0088
                    0088    629 _CPT1CN	=	0x0088
                    0089    630 G$CPT1MD$0$0 == 0x0089
                    0089    631 _CPT1MD	=	0x0089
                    00BA    632 G$AMX2CF$0$0 == 0x00ba
                    00BA    633 _AMX2CF	=	0x00ba
                    00BB    634 G$AMX2SL$0$0 == 0x00bb
                    00BB    635 _AMX2SL	=	0x00bb
                    00BC    636 G$ADC2CF$0$0 == 0x00bc
                    00BC    637 _ADC2CF	=	0x00bc
                    00BE    638 G$ADC2$0$0 == 0x00be
                    00BE    639 _ADC2	=	0x00be
                    00C4    640 G$ADC2GT$0$0 == 0x00c4
                    00C4    641 _ADC2GT	=	0x00c4
                    00C6    642 G$ADC2LT$0$0 == 0x00c6
                    00C6    643 _ADC2LT	=	0x00c6
                    00C8    644 G$TMR4CN$0$0 == 0x00c8
                    00C8    645 _TMR4CN	=	0x00c8
                    00C9    646 G$TMR4CF$0$0 == 0x00c9
                    00C9    647 _TMR4CF	=	0x00c9
                    00CA    648 G$RCAP4L$0$0 == 0x00ca
                    00CA    649 _RCAP4L	=	0x00ca
                    00CB    650 G$RCAP4H$0$0 == 0x00cb
                    00CB    651 _RCAP4H	=	0x00cb
                    00CC    652 G$TMR4L$0$0 == 0x00cc
                    00CC    653 _TMR4L	=	0x00cc
                    00CD    654 G$TMR4H$0$0 == 0x00cd
                    00CD    655 _TMR4H	=	0x00cd
                    00E8    656 G$ADC2CN$0$0 == 0x00e8
                    00E8    657 _ADC2CN	=	0x00e8
                    0091    658 G$MAC0BL$0$0 == 0x0091
                    0091    659 _MAC0BL	=	0x0091
                    0092    660 G$MAC0BH$0$0 == 0x0092
                    0092    661 _MAC0BH	=	0x0092
                    0093    662 G$MAC0ACC0$0$0 == 0x0093
                    0093    663 _MAC0ACC0	=	0x0093
                    0094    664 G$MAC0ACC1$0$0 == 0x0094
                    0094    665 _MAC0ACC1	=	0x0094
                    0095    666 G$MAC0ACC2$0$0 == 0x0095
                    0095    667 _MAC0ACC2	=	0x0095
                    0096    668 G$MAC0ACC3$0$0 == 0x0096
                    0096    669 _MAC0ACC3	=	0x0096
                    0097    670 G$MAC0OVR$0$0 == 0x0097
                    0097    671 _MAC0OVR	=	0x0097
                    00C0    672 G$MAC0STA$0$0 == 0x00c0
                    00C0    673 _MAC0STA	=	0x00c0
                    00C1    674 G$MAC0AL$0$0 == 0x00c1
                    00C1    675 _MAC0AL	=	0x00c1
                    00C2    676 G$MAC0AH$0$0 == 0x00c2
                    00C2    677 _MAC0AH	=	0x00c2
                    00C3    678 G$MAC0CF$0$0 == 0x00c3
                    00C3    679 _MAC0CF	=	0x00c3
                    00CE    680 G$MAC0RNDL$0$0 == 0x00ce
                    00CE    681 _MAC0RNDL	=	0x00ce
                    00CF    682 G$MAC0RNDH$0$0 == 0x00cf
                    00CF    683 _MAC0RNDH	=	0x00cf
                    0088    684 G$FLSTAT$0$0 == 0x0088
                    0088    685 _FLSTAT	=	0x0088
                    0089    686 G$PLL0CN$0$0 == 0x0089
                    0089    687 _PLL0CN	=	0x0089
                    008A    688 G$OSCICN$0$0 == 0x008a
                    008A    689 _OSCICN	=	0x008a
                    008B    690 G$OSCICL$0$0 == 0x008b
                    008B    691 _OSCICL	=	0x008b
                    008C    692 G$OSCXCN$0$0 == 0x008c
                    008C    693 _OSCXCN	=	0x008c
                    008D    694 G$PLL0DIV$0$0 == 0x008d
                    008D    695 _PLL0DIV	=	0x008d
                    008E    696 G$PLL0MUL$0$0 == 0x008e
                    008E    697 _PLL0MUL	=	0x008e
                    008F    698 G$PLL0FLT$0$0 == 0x008f
                    008F    699 _PLL0FLT	=	0x008f
                    0096    700 G$SFRPGCN$0$0 == 0x0096
                    0096    701 _SFRPGCN	=	0x0096
                    0097    702 G$CLKSEL$0$0 == 0x0097
                    0097    703 _CLKSEL	=	0x0097
                    009A    704 G$CCH0MA$0$0 == 0x009a
                    009A    705 _CCH0MA	=	0x009a
                    009C    706 G$P4MDOUT$0$0 == 0x009c
                    009C    707 _P4MDOUT	=	0x009c
                    009D    708 G$P5MDOUT$0$0 == 0x009d
                    009D    709 _P5MDOUT	=	0x009d
                    009E    710 G$P6MDOUT$0$0 == 0x009e
                    009E    711 _P6MDOUT	=	0x009e
                    009F    712 G$P7MDOUT$0$0 == 0x009f
                    009F    713 _P7MDOUT	=	0x009f
                    00A1    714 G$CCH0CN$0$0 == 0x00a1
                    00A1    715 _CCH0CN	=	0x00a1
                    00A2    716 G$CCH0TN$0$0 == 0x00a2
                    00A2    717 _CCH0TN	=	0x00a2
                    00A3    718 G$CCH0LC$0$0 == 0x00a3
                    00A3    719 _CCH0LC	=	0x00a3
                    00A4    720 G$P0MDOUT$0$0 == 0x00a4
                    00A4    721 _P0MDOUT	=	0x00a4
                    00A5    722 G$P1MDOUT$0$0 == 0x00a5
                    00A5    723 _P1MDOUT	=	0x00a5
                    00A6    724 G$P2MDOUT$0$0 == 0x00a6
                    00A6    725 _P2MDOUT	=	0x00a6
                    00A7    726 G$P3MDOUT$0$0 == 0x00a7
                    00A7    727 _P3MDOUT	=	0x00a7
                    00AD    728 G$P1MDIN$0$0 == 0x00ad
                    00AD    729 _P1MDIN	=	0x00ad
                    00B7    730 G$FLACL$0$0 == 0x00b7
                    00B7    731 _FLACL	=	0x00b7
                    00C8    732 G$P4$0$0 == 0x00c8
                    00C8    733 _P4	=	0x00c8
                    00D8    734 G$P5$0$0 == 0x00d8
                    00D8    735 _P5	=	0x00d8
                    00E1    736 G$XBR0$0$0 == 0x00e1
                    00E1    737 _XBR0	=	0x00e1
                    00E2    738 G$XBR1$0$0 == 0x00e2
                    00E2    739 _XBR1	=	0x00e2
                    00E3    740 G$XBR2$0$0 == 0x00e3
                    00E3    741 _XBR2	=	0x00e3
                    00E8    742 G$P6$0$0 == 0x00e8
                    00E8    743 _P6	=	0x00e8
                    00F8    744 G$P7$0$0 == 0x00f8
                    00F8    745 _P7	=	0x00f8
                    8C8A    746 G$TMR0$0$0 == 0x8c8a
                    8C8A    747 _TMR0	=	0x8c8a
                    8D8B    748 G$TMR1$0$0 == 0x8d8b
                    8D8B    749 _TMR1	=	0x8d8b
                    CDCC    750 G$TMR2$0$0 == 0xcdcc
                    CDCC    751 _TMR2	=	0xcdcc
                    CBCA    752 G$RCAP2$0$0 == 0xcbca
                    CBCA    753 _RCAP2	=	0xcbca
                    BFBE    754 G$ADC0$0$0 == 0xbfbe
                    BFBE    755 _ADC0	=	0xbfbe
                    C5C4    756 G$ADC0GT$0$0 == 0xc5c4
                    C5C4    757 _ADC0GT	=	0xc5c4
                    C7C6    758 G$ADC0LT$0$0 == 0xc7c6
                    C7C6    759 _ADC0LT	=	0xc7c6
                    D3D2    760 G$DAC0$0$0 == 0xd3d2
                    D3D2    761 _DAC0	=	0xd3d2
                    FAF9    762 G$PCA0$0$0 == 0xfaf9
                    FAF9    763 _PCA0	=	0xfaf9
                    FCFB    764 G$PCA0CP0$0$0 == 0xfcfb
                    FCFB    765 _PCA0CP0	=	0xfcfb
                    FEFD    766 G$PCA0CP1$0$0 == 0xfefd
                    FEFD    767 _PCA0CP1	=	0xfefd
                    EAE9    768 G$PCA0CP2$0$0 == 0xeae9
                    EAE9    769 _PCA0CP2	=	0xeae9
                    ECEB    770 G$PCA0CP3$0$0 == 0xeceb
                    ECEB    771 _PCA0CP3	=	0xeceb
                    EEED    772 G$PCA0CP4$0$0 == 0xeeed
                    EEED    773 _PCA0CP4	=	0xeeed
                    E2E1    774 G$PCA0CP5$0$0 == 0xe2e1
                    E2E1    775 _PCA0CP5	=	0xe2e1
                    CDCC    776 G$TMR3$0$0 == 0xcdcc
                    CDCC    777 _TMR3	=	0xcdcc
                    CBCA    778 G$RCAP3$0$0 == 0xcbca
                    CBCA    779 _RCAP3	=	0xcbca
                    D3D2    780 G$DAC1$0$0 == 0xd3d2
                    D3D2    781 _DAC1	=	0xd3d2
                    CDCC    782 G$TMR4$0$0 == 0xcdcc
                    CDCC    783 _TMR4	=	0xcdcc
                    CBCA    784 G$RCAP4$0$0 == 0xcbca
                    CBCA    785 _RCAP4	=	0xcbca
                    C2C1    786 G$MAC0A$0$0 == 0xc2c1
                    C2C1    787 _MAC0A	=	0xc2c1
                    96959493    788 G$MAC0ACC$0$0 == 0x96959493
                    96959493    789 _MAC0ACC	=	0x96959493
                    CFCE    790 G$MAC0RND$0$0 == 0xcfce
                    CFCE    791 _MAC0RND	=	0xcfce
                            792 ;--------------------------------------------------------
                            793 ; special function bits
                            794 ;--------------------------------------------------------
                            795 	.area RSEG    (DATA)
                    0080    796 G$P0_0$0$0 == 0x0080
                    0080    797 _P0_0	=	0x0080
                    0081    798 G$P0_1$0$0 == 0x0081
                    0081    799 _P0_1	=	0x0081
                    0082    800 G$P0_2$0$0 == 0x0082
                    0082    801 _P0_2	=	0x0082
                    0083    802 G$P0_3$0$0 == 0x0083
                    0083    803 _P0_3	=	0x0083
                    0084    804 G$P0_4$0$0 == 0x0084
                    0084    805 _P0_4	=	0x0084
                    0085    806 G$P0_5$0$0 == 0x0085
                    0085    807 _P0_5	=	0x0085
                    0086    808 G$P0_6$0$0 == 0x0086
                    0086    809 _P0_6	=	0x0086
                    0087    810 G$P0_7$0$0 == 0x0087
                    0087    811 _P0_7	=	0x0087
                    0088    812 G$IT0$0$0 == 0x0088
                    0088    813 _IT0	=	0x0088
                    0089    814 G$IE0$0$0 == 0x0089
                    0089    815 _IE0	=	0x0089
                    008A    816 G$IT1$0$0 == 0x008a
                    008A    817 _IT1	=	0x008a
                    008B    818 G$IE1$0$0 == 0x008b
                    008B    819 _IE1	=	0x008b
                    008C    820 G$TR0$0$0 == 0x008c
                    008C    821 _TR0	=	0x008c
                    008D    822 G$TF0$0$0 == 0x008d
                    008D    823 _TF0	=	0x008d
                    008E    824 G$TR1$0$0 == 0x008e
                    008E    825 _TR1	=	0x008e
                    008F    826 G$TF1$0$0 == 0x008f
                    008F    827 _TF1	=	0x008f
                    0088    828 G$CP0HYN0$0$0 == 0x0088
                    0088    829 _CP0HYN0	=	0x0088
                    0089    830 G$CP0HYN1$0$0 == 0x0089
                    0089    831 _CP0HYN1	=	0x0089
                    008A    832 G$CP0HYP0$0$0 == 0x008a
                    008A    833 _CP0HYP0	=	0x008a
                    008B    834 G$CP0HYP1$0$0 == 0x008b
                    008B    835 _CP0HYP1	=	0x008b
                    008C    836 G$CP0FIF$0$0 == 0x008c
                    008C    837 _CP0FIF	=	0x008c
                    008D    838 G$CP0RIF$0$0 == 0x008d
                    008D    839 _CP0RIF	=	0x008d
                    008E    840 G$CP0OUT$0$0 == 0x008e
                    008E    841 _CP0OUT	=	0x008e
                    008F    842 G$CP0EN$0$0 == 0x008f
                    008F    843 _CP0EN	=	0x008f
                    0088    844 G$CP1HYN0$0$0 == 0x0088
                    0088    845 _CP1HYN0	=	0x0088
                    0089    846 G$CP1HYN1$0$0 == 0x0089
                    0089    847 _CP1HYN1	=	0x0089
                    008A    848 G$CP1HYP0$0$0 == 0x008a
                    008A    849 _CP1HYP0	=	0x008a
                    008B    850 G$CP1HYP1$0$0 == 0x008b
                    008B    851 _CP1HYP1	=	0x008b
                    008C    852 G$CP1FIF$0$0 == 0x008c
                    008C    853 _CP1FIF	=	0x008c
                    008D    854 G$CP1RIF$0$0 == 0x008d
                    008D    855 _CP1RIF	=	0x008d
                    008E    856 G$CP1OUT$0$0 == 0x008e
                    008E    857 _CP1OUT	=	0x008e
                    008F    858 G$CP1EN$0$0 == 0x008f
                    008F    859 _CP1EN	=	0x008f
                    0088    860 G$FLHBUSY$0$0 == 0x0088
                    0088    861 _FLHBUSY	=	0x0088
                    0090    862 G$P1_0$0$0 == 0x0090
                    0090    863 _P1_0	=	0x0090
                    0091    864 G$P1_1$0$0 == 0x0091
                    0091    865 _P1_1	=	0x0091
                    0092    866 G$P1_2$0$0 == 0x0092
                    0092    867 _P1_2	=	0x0092
                    0093    868 G$P1_3$0$0 == 0x0093
                    0093    869 _P1_3	=	0x0093
                    0094    870 G$P1_4$0$0 == 0x0094
                    0094    871 _P1_4	=	0x0094
                    0095    872 G$P1_5$0$0 == 0x0095
                    0095    873 _P1_5	=	0x0095
                    0096    874 G$P1_6$0$0 == 0x0096
                    0096    875 _P1_6	=	0x0096
                    0097    876 G$P1_7$0$0 == 0x0097
                    0097    877 _P1_7	=	0x0097
                    0098    878 G$RI0$0$0 == 0x0098
                    0098    879 _RI0	=	0x0098
                    0098    880 G$RI$0$0 == 0x0098
                    0098    881 _RI	=	0x0098
                    0099    882 G$TI0$0$0 == 0x0099
                    0099    883 _TI0	=	0x0099
                    0099    884 G$TI$0$0 == 0x0099
                    0099    885 _TI	=	0x0099
                    009A    886 G$RB80$0$0 == 0x009a
                    009A    887 _RB80	=	0x009a
                    009B    888 G$TB80$0$0 == 0x009b
                    009B    889 _TB80	=	0x009b
                    009C    890 G$REN0$0$0 == 0x009c
                    009C    891 _REN0	=	0x009c
                    009C    892 G$REN$0$0 == 0x009c
                    009C    893 _REN	=	0x009c
                    009D    894 G$SM20$0$0 == 0x009d
                    009D    895 _SM20	=	0x009d
                    009E    896 G$SM10$0$0 == 0x009e
                    009E    897 _SM10	=	0x009e
                    009F    898 G$SM00$0$0 == 0x009f
                    009F    899 _SM00	=	0x009f
                    0098    900 G$RI1$0$0 == 0x0098
                    0098    901 _RI1	=	0x0098
                    0099    902 G$TI1$0$0 == 0x0099
                    0099    903 _TI1	=	0x0099
                    009A    904 G$RB81$0$0 == 0x009a
                    009A    905 _RB81	=	0x009a
                    009B    906 G$TB81$0$0 == 0x009b
                    009B    907 _TB81	=	0x009b
                    009C    908 G$REN1$0$0 == 0x009c
                    009C    909 _REN1	=	0x009c
                    009D    910 G$MCE1$0$0 == 0x009d
                    009D    911 _MCE1	=	0x009d
                    009F    912 G$S1MODE$0$0 == 0x009f
                    009F    913 _S1MODE	=	0x009f
                    00A0    914 G$P2_0$0$0 == 0x00a0
                    00A0    915 _P2_0	=	0x00a0
                    00A1    916 G$P2_1$0$0 == 0x00a1
                    00A1    917 _P2_1	=	0x00a1
                    00A2    918 G$P2_2$0$0 == 0x00a2
                    00A2    919 _P2_2	=	0x00a2
                    00A3    920 G$P2_3$0$0 == 0x00a3
                    00A3    921 _P2_3	=	0x00a3
                    00A4    922 G$P2_4$0$0 == 0x00a4
                    00A4    923 _P2_4	=	0x00a4
                    00A5    924 G$P2_5$0$0 == 0x00a5
                    00A5    925 _P2_5	=	0x00a5
                    00A6    926 G$P2_6$0$0 == 0x00a6
                    00A6    927 _P2_6	=	0x00a6
                    00A7    928 G$P2_7$0$0 == 0x00a7
                    00A7    929 _P2_7	=	0x00a7
                    00A8    930 G$EX0$0$0 == 0x00a8
                    00A8    931 _EX0	=	0x00a8
                    00A9    932 G$ET0$0$0 == 0x00a9
                    00A9    933 _ET0	=	0x00a9
                    00AA    934 G$EX1$0$0 == 0x00aa
                    00AA    935 _EX1	=	0x00aa
                    00AB    936 G$ET1$0$0 == 0x00ab
                    00AB    937 _ET1	=	0x00ab
                    00AC    938 G$ES0$0$0 == 0x00ac
                    00AC    939 _ES0	=	0x00ac
                    00AC    940 G$ES$0$0 == 0x00ac
                    00AC    941 _ES	=	0x00ac
                    00AD    942 G$ET2$0$0 == 0x00ad
                    00AD    943 _ET2	=	0x00ad
                    00AF    944 G$EA$0$0 == 0x00af
                    00AF    945 _EA	=	0x00af
                    00B0    946 G$P3_0$0$0 == 0x00b0
                    00B0    947 _P3_0	=	0x00b0
                    00B1    948 G$P3_1$0$0 == 0x00b1
                    00B1    949 _P3_1	=	0x00b1
                    00B2    950 G$P3_2$0$0 == 0x00b2
                    00B2    951 _P3_2	=	0x00b2
                    00B3    952 G$P3_3$0$0 == 0x00b3
                    00B3    953 _P3_3	=	0x00b3
                    00B4    954 G$P3_4$0$0 == 0x00b4
                    00B4    955 _P3_4	=	0x00b4
                    00B5    956 G$P3_5$0$0 == 0x00b5
                    00B5    957 _P3_5	=	0x00b5
                    00B6    958 G$P3_6$0$0 == 0x00b6
                    00B6    959 _P3_6	=	0x00b6
                    00B7    960 G$P3_7$0$0 == 0x00b7
                    00B7    961 _P3_7	=	0x00b7
                    00B8    962 G$PX0$0$0 == 0x00b8
                    00B8    963 _PX0	=	0x00b8
                    00B9    964 G$PT0$0$0 == 0x00b9
                    00B9    965 _PT0	=	0x00b9
                    00BA    966 G$PX1$0$0 == 0x00ba
                    00BA    967 _PX1	=	0x00ba
                    00BB    968 G$PT1$0$0 == 0x00bb
                    00BB    969 _PT1	=	0x00bb
                    00BC    970 G$PS0$0$0 == 0x00bc
                    00BC    971 _PS0	=	0x00bc
                    00BC    972 G$PS$0$0 == 0x00bc
                    00BC    973 _PS	=	0x00bc
                    00BD    974 G$PT2$0$0 == 0x00bd
                    00BD    975 _PT2	=	0x00bd
                    00C0    976 G$SMBTOE$0$0 == 0x00c0
                    00C0    977 _SMBTOE	=	0x00c0
                    00C1    978 G$SMBFTE$0$0 == 0x00c1
                    00C1    979 _SMBFTE	=	0x00c1
                    00C2    980 G$AA$0$0 == 0x00c2
                    00C2    981 _AA	=	0x00c2
                    00C3    982 G$SI$0$0 == 0x00c3
                    00C3    983 _SI	=	0x00c3
                    00C4    984 G$STO$0$0 == 0x00c4
                    00C4    985 _STO	=	0x00c4
                    00C5    986 G$STA$0$0 == 0x00c5
                    00C5    987 _STA	=	0x00c5
                    00C6    988 G$ENSMB$0$0 == 0x00c6
                    00C6    989 _ENSMB	=	0x00c6
                    00C7    990 G$BUSY$0$0 == 0x00c7
                    00C7    991 _BUSY	=	0x00c7
                    00C0    992 G$MAC0N$0$0 == 0x00c0
                    00C0    993 _MAC0N	=	0x00c0
                    00C1    994 G$MAC0SO$0$0 == 0x00c1
                    00C1    995 _MAC0SO	=	0x00c1
                    00C2    996 G$MAC0Z$0$0 == 0x00c2
                    00C2    997 _MAC0Z	=	0x00c2
                    00C3    998 G$MAC0HO$0$0 == 0x00c3
                    00C3    999 _MAC0HO	=	0x00c3
                    00C8   1000 G$CPRL2$0$0 == 0x00c8
                    00C8   1001 _CPRL2	=	0x00c8
                    00C9   1002 G$CT2$0$0 == 0x00c9
                    00C9   1003 _CT2	=	0x00c9
                    00CA   1004 G$TR2$0$0 == 0x00ca
                    00CA   1005 _TR2	=	0x00ca
                    00CB   1006 G$EXEN2$0$0 == 0x00cb
                    00CB   1007 _EXEN2	=	0x00cb
                    00CE   1008 G$EXF2$0$0 == 0x00ce
                    00CE   1009 _EXF2	=	0x00ce
                    00CF   1010 G$TF2$0$0 == 0x00cf
                    00CF   1011 _TF2	=	0x00cf
                    00C8   1012 G$CPRL3$0$0 == 0x00c8
                    00C8   1013 _CPRL3	=	0x00c8
                    00C9   1014 G$CT3$0$0 == 0x00c9
                    00C9   1015 _CT3	=	0x00c9
                    00CA   1016 G$TR3$0$0 == 0x00ca
                    00CA   1017 _TR3	=	0x00ca
                    00CB   1018 G$EXEN3$0$0 == 0x00cb
                    00CB   1019 _EXEN3	=	0x00cb
                    00CE   1020 G$EXF3$0$0 == 0x00ce
                    00CE   1021 _EXF3	=	0x00ce
                    00CF   1022 G$TF3$0$0 == 0x00cf
                    00CF   1023 _TF3	=	0x00cf
                    00C8   1024 G$CPRL4$0$0 == 0x00c8
                    00C8   1025 _CPRL4	=	0x00c8
                    00C9   1026 G$CT4$0$0 == 0x00c9
                    00C9   1027 _CT4	=	0x00c9
                    00CA   1028 G$TR4$0$0 == 0x00ca
                    00CA   1029 _TR4	=	0x00ca
                    00CB   1030 G$EXEN4$0$0 == 0x00cb
                    00CB   1031 _EXEN4	=	0x00cb
                    00CE   1032 G$EXF4$0$0 == 0x00ce
                    00CE   1033 _EXF4	=	0x00ce
                    00CF   1034 G$TF4$0$0 == 0x00cf
                    00CF   1035 _TF4	=	0x00cf
                    00C8   1036 G$P4_0$0$0 == 0x00c8
                    00C8   1037 _P4_0	=	0x00c8
                    00C9   1038 G$P4_1$0$0 == 0x00c9
                    00C9   1039 _P4_1	=	0x00c9
                    00CA   1040 G$P4_2$0$0 == 0x00ca
                    00CA   1041 _P4_2	=	0x00ca
                    00CB   1042 G$P4_3$0$0 == 0x00cb
                    00CB   1043 _P4_3	=	0x00cb
                    00CC   1044 G$P4_4$0$0 == 0x00cc
                    00CC   1045 _P4_4	=	0x00cc
                    00CD   1046 G$P4_5$0$0 == 0x00cd
                    00CD   1047 _P4_5	=	0x00cd
                    00CE   1048 G$P4_6$0$0 == 0x00ce
                    00CE   1049 _P4_6	=	0x00ce
                    00CF   1050 G$P4_7$0$0 == 0x00cf
                    00CF   1051 _P4_7	=	0x00cf
                    00D0   1052 G$P$0$0 == 0x00d0
                    00D0   1053 _P	=	0x00d0
                    00D1   1054 G$F1$0$0 == 0x00d1
                    00D1   1055 _F1	=	0x00d1
                    00D2   1056 G$OV$0$0 == 0x00d2
                    00D2   1057 _OV	=	0x00d2
                    00D3   1058 G$RS0$0$0 == 0x00d3
                    00D3   1059 _RS0	=	0x00d3
                    00D4   1060 G$RS1$0$0 == 0x00d4
                    00D4   1061 _RS1	=	0x00d4
                    00D5   1062 G$F0$0$0 == 0x00d5
                    00D5   1063 _F0	=	0x00d5
                    00D6   1064 G$AC$0$0 == 0x00d6
                    00D6   1065 _AC	=	0x00d6
                    00D7   1066 G$CY$0$0 == 0x00d7
                    00D7   1067 _CY	=	0x00d7
                    00D8   1068 G$CCF0$0$0 == 0x00d8
                    00D8   1069 _CCF0	=	0x00d8
                    00D9   1070 G$CCF1$0$0 == 0x00d9
                    00D9   1071 _CCF1	=	0x00d9
                    00DA   1072 G$CCF2$0$0 == 0x00da
                    00DA   1073 _CCF2	=	0x00da
                    00DB   1074 G$CCF3$0$0 == 0x00db
                    00DB   1075 _CCF3	=	0x00db
                    00DC   1076 G$CCF4$0$0 == 0x00dc
                    00DC   1077 _CCF4	=	0x00dc
                    00DD   1078 G$CCF5$0$0 == 0x00dd
                    00DD   1079 _CCF5	=	0x00dd
                    00DE   1080 G$CR$0$0 == 0x00de
                    00DE   1081 _CR	=	0x00de
                    00DF   1082 G$CF$0$0 == 0x00df
                    00DF   1083 _CF	=	0x00df
                    00D8   1084 G$P5_0$0$0 == 0x00d8
                    00D8   1085 _P5_0	=	0x00d8
                    00D9   1086 G$P5_1$0$0 == 0x00d9
                    00D9   1087 _P5_1	=	0x00d9
                    00DA   1088 G$P5_2$0$0 == 0x00da
                    00DA   1089 _P5_2	=	0x00da
                    00DB   1090 G$P5_3$0$0 == 0x00db
                    00DB   1091 _P5_3	=	0x00db
                    00DC   1092 G$P5_4$0$0 == 0x00dc
                    00DC   1093 _P5_4	=	0x00dc
                    00DD   1094 G$P5_5$0$0 == 0x00dd
                    00DD   1095 _P5_5	=	0x00dd
                    00DE   1096 G$P5_6$0$0 == 0x00de
                    00DE   1097 _P5_6	=	0x00de
                    00DF   1098 G$P5_7$0$0 == 0x00df
                    00DF   1099 _P5_7	=	0x00df
                    00E8   1100 G$AD0LJST$0$0 == 0x00e8
                    00E8   1101 _AD0LJST	=	0x00e8
                    00E9   1102 G$AD0WINT$0$0 == 0x00e9
                    00E9   1103 _AD0WINT	=	0x00e9
                    00EA   1104 G$AD0CM0$0$0 == 0x00ea
                    00EA   1105 _AD0CM0	=	0x00ea
                    00EB   1106 G$AD0CM1$0$0 == 0x00eb
                    00EB   1107 _AD0CM1	=	0x00eb
                    00EC   1108 G$AD0BUSY$0$0 == 0x00ec
                    00EC   1109 _AD0BUSY	=	0x00ec
                    00ED   1110 G$AD0INT$0$0 == 0x00ed
                    00ED   1111 _AD0INT	=	0x00ed
                    00EE   1112 G$AD0TM$0$0 == 0x00ee
                    00EE   1113 _AD0TM	=	0x00ee
                    00EF   1114 G$AD0EN$0$0 == 0x00ef
                    00EF   1115 _AD0EN	=	0x00ef
                    00E8   1116 G$AD2WINT$0$0 == 0x00e8
                    00E8   1117 _AD2WINT	=	0x00e8
                    00E9   1118 G$AD2CM0$0$0 == 0x00e9
                    00E9   1119 _AD2CM0	=	0x00e9
                    00EA   1120 G$AD2CM1$0$0 == 0x00ea
                    00EA   1121 _AD2CM1	=	0x00ea
                    00EB   1122 G$AD2CM2$0$0 == 0x00eb
                    00EB   1123 _AD2CM2	=	0x00eb
                    00EC   1124 G$AD2BUSY$0$0 == 0x00ec
                    00EC   1125 _AD2BUSY	=	0x00ec
                    00ED   1126 G$AD2INT$0$0 == 0x00ed
                    00ED   1127 _AD2INT	=	0x00ed
                    00EE   1128 G$AD2TM$0$0 == 0x00ee
                    00EE   1129 _AD2TM	=	0x00ee
                    00EF   1130 G$AD2EN$0$0 == 0x00ef
                    00EF   1131 _AD2EN	=	0x00ef
                    00E8   1132 G$P6_0$0$0 == 0x00e8
                    00E8   1133 _P6_0	=	0x00e8
                    00E9   1134 G$P6_1$0$0 == 0x00e9
                    00E9   1135 _P6_1	=	0x00e9
                    00EA   1136 G$P6_2$0$0 == 0x00ea
                    00EA   1137 _P6_2	=	0x00ea
                    00EB   1138 G$P6_3$0$0 == 0x00eb
                    00EB   1139 _P6_3	=	0x00eb
                    00EC   1140 G$P6_4$0$0 == 0x00ec
                    00EC   1141 _P6_4	=	0x00ec
                    00ED   1142 G$P6_5$0$0 == 0x00ed
                    00ED   1143 _P6_5	=	0x00ed
                    00EE   1144 G$P6_6$0$0 == 0x00ee
                    00EE   1145 _P6_6	=	0x00ee
                    00EF   1146 G$P6_7$0$0 == 0x00ef
                    00EF   1147 _P6_7	=	0x00ef
                    00F8   1148 G$SPIEN$0$0 == 0x00f8
                    00F8   1149 _SPIEN	=	0x00f8
                    00F9   1150 G$TXBMT$0$0 == 0x00f9
                    00F9   1151 _TXBMT	=	0x00f9
                    00FA   1152 G$NSSMD0$0$0 == 0x00fa
                    00FA   1153 _NSSMD0	=	0x00fa
                    00FB   1154 G$NSSMD1$0$0 == 0x00fb
                    00FB   1155 _NSSMD1	=	0x00fb
                    00FC   1156 G$RXOVRN$0$0 == 0x00fc
                    00FC   1157 _RXOVRN	=	0x00fc
                    00FD   1158 G$MODF$0$0 == 0x00fd
                    00FD   1159 _MODF	=	0x00fd
                    00FE   1160 G$WCOL$0$0 == 0x00fe
                    00FE   1161 _WCOL	=	0x00fe
                    00FF   1162 G$SPIF$0$0 == 0x00ff
                    00FF   1163 _SPIF	=	0x00ff
                    00F8   1164 G$P7_0$0$0 == 0x00f8
                    00F8   1165 _P7_0	=	0x00f8
                    00F9   1166 G$P7_1$0$0 == 0x00f9
                    00F9   1167 _P7_1	=	0x00f9
                    00FA   1168 G$P7_2$0$0 == 0x00fa
                    00FA   1169 _P7_2	=	0x00fa
                    00FB   1170 G$P7_3$0$0 == 0x00fb
                    00FB   1171 _P7_3	=	0x00fb
                    00FC   1172 G$P7_4$0$0 == 0x00fc
                    00FC   1173 _P7_4	=	0x00fc
                    00FD   1174 G$P7_5$0$0 == 0x00fd
                    00FD   1175 _P7_5	=	0x00fd
                    00FE   1176 G$P7_6$0$0 == 0x00fe
                    00FE   1177 _P7_6	=	0x00fe
                    00FF   1178 G$P7_7$0$0 == 0x00ff
                    00FF   1179 _P7_7	=	0x00ff
                    0096   1180 G$LED$0$0 == 0x0096
                    0096   1181 _LED	=	0x0096
                    00B7   1182 G$SW2$0$0 == 0x00b7
                    00B7   1183 _SW2	=	0x00b7
                    00C9   1184 G$AB4_SW1$0$0 == 0x00c9
                    00C9   1185 _AB4_SW1	=	0x00c9
                    00CA   1186 G$AB4_SW2$0$0 == 0x00ca
                    00CA   1187 _AB4_SW2	=	0x00ca
                    00CB   1188 G$AB4_LED1$0$0 == 0x00cb
                    00CB   1189 _AB4_LED1	=	0x00cb
                    00CC   1190 G$AB4_LED2$0$0 == 0x00cc
                    00CC   1191 _AB4_LED2	=	0x00cc
                           1192 ;--------------------------------------------------------
                           1193 ; overlayable register banks
                           1194 ;--------------------------------------------------------
                           1195 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                    1196 	.ds 8
                           1197 ;--------------------------------------------------------
                           1198 ; internal ram data
                           1199 ;--------------------------------------------------------
                           1200 	.area DSEG    (DATA)
                    0000   1201 Fport$ucStackBytes$0$0==.
   0000                    1202 _ucStackBytes:
   0000                    1203 	.ds 1
                    0001   1204 Fport$pxXRAMStack$0$0==.
   0001                    1205 _pxXRAMStack:
   0001                    1206 	.ds 2
                    0003   1207 Fport$pxRAMStack$0$0==.
   0003                    1208 _pxRAMStack:
   0003                    1209 	.ds 1
                           1210 ;--------------------------------------------------------
                           1211 ; overlayable items in internal ram 
                           1212 ;--------------------------------------------------------
                           1213 	.area OSEG    (OVR,DATA)
                           1214 ;--------------------------------------------------------
                           1215 ; indirectly addressable internal ram data
                           1216 ;--------------------------------------------------------
                           1217 	.area ISEG    (DATA)
                           1218 ;--------------------------------------------------------
                           1219 ; absolute internal ram data
                           1220 ;--------------------------------------------------------
                           1221 	.area IABS    (ABS,DATA)
                           1222 	.area IABS    (ABS,DATA)
                           1223 ;--------------------------------------------------------
                           1224 ; bit data
                           1225 ;--------------------------------------------------------
                           1226 	.area BSEG    (BIT)
                           1227 ;--------------------------------------------------------
                           1228 ; paged external ram data
                           1229 ;--------------------------------------------------------
                           1230 	.area PSEG    (PAG,XDATA)
                           1231 ;--------------------------------------------------------
                           1232 ; external ram data
                           1233 ;--------------------------------------------------------
                           1234 	.area XSEG    (XDATA)
                           1235 ;--------------------------------------------------------
                           1236 ; absolute external ram data
                           1237 ;--------------------------------------------------------
                           1238 	.area XABS    (ABS,XDATA)
                           1239 ;--------------------------------------------------------
                           1240 ; external initialized ram data
                           1241 ;--------------------------------------------------------
                           1242 	.area XISEG   (XDATA)
                           1243 	.area HOME    (CODE)
                           1244 	.area GSINIT0 (CODE)
                           1245 	.area GSINIT1 (CODE)
                           1246 	.area GSINIT2 (CODE)
                           1247 	.area GSINIT3 (CODE)
                           1248 	.area GSINIT4 (CODE)
                           1249 	.area GSINIT5 (CODE)
                           1250 	.area GSINIT  (CODE)
                           1251 	.area GSFINAL (CODE)
                           1252 	.area CSEG    (CODE)
                           1253 ;--------------------------------------------------------
                           1254 ; global & static initialisations
                           1255 ;--------------------------------------------------------
                           1256 	.area HOME    (CODE)
                           1257 	.area GSINIT  (CODE)
                           1258 	.area GSFINAL (CODE)
                           1259 	.area GSINIT  (CODE)
                           1260 ;--------------------------------------------------------
                           1261 ; Home
                           1262 ;--------------------------------------------------------
                           1263 	.area HOME    (CODE)
                           1264 	.area HOME    (CODE)
                           1265 ;--------------------------------------------------------
                           1266 ; code
                           1267 ;--------------------------------------------------------
                           1268 	.area CSEG    (CODE)
                           1269 ;------------------------------------------------------------
                           1270 ;Allocation info for local variables in function 'pxPortInitialiseStack'
                           1271 ;------------------------------------------------------------
                           1272 ;pxCode                    Allocated to stack - offset -4
                           1273 ;pvParameters              Allocated to stack - offset -7
                           1274 ;pxTopOfStack              Allocated to stack - offset 1
                           1275 ;ulAddress                 Allocated to registers r5 r6 r7 r2 
                           1276 ;pxStartOfStack            Allocated to stack - offset 4
                           1277 ;------------------------------------------------------------
                    0000   1278 	G$pxPortInitialiseStack$0$0 ==.
                    0000   1279 	C$port.c$292$0$0 ==.
                           1280 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:292: portSTACK_TYPE *pxPortInitialiseStack( portSTACK_TYPE *pxTopOfStack, pdTASK_CODE pxCode, void *pvParameters )
                           1281 ;	-----------------------------------------
                           1282 ;	 function pxPortInitialiseStack
                           1283 ;	-----------------------------------------
   0000                    1284 _pxPortInitialiseStack:
                    0002   1285 	ar2 = 0x02
                    0003   1286 	ar3 = 0x03
                    0004   1287 	ar4 = 0x04
                    0005   1288 	ar5 = 0x05
                    0006   1289 	ar6 = 0x06
                    0007   1290 	ar7 = 0x07
                    0000   1291 	ar0 = 0x00
                    0001   1292 	ar1 = 0x01
   0000 C0*00              1293 	push	_bp
   0002 85 81*00           1294 	mov	_bp,sp
   0005 C0 82              1295 	push	dpl
   0007 C0 83              1296 	push	dph
   0009 C0 F0              1297 	push	b
   000B 05 81              1298 	inc	sp
   000D 05 81              1299 	inc	sp
   000F 05 81              1300 	inc	sp
                    0011   1301 	C$port.c$298$1$1 ==.
                           1302 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:298: pxStartOfStack = pxTopOfStack;
   0011 A8*00              1303 	mov	r0,_bp
   0013 08                 1304 	inc	r0
   0014 E5*00              1305 	mov	a,_bp
   0016 24 04              1306 	add	a,#0x04
   0018 F9                 1307 	mov	r1,a
   0019 E6                 1308 	mov	a,@r0
   001A F7                 1309 	mov	@r1,a
   001B 08                 1310 	inc	r0
   001C 09                 1311 	inc	r1
   001D E6                 1312 	mov	a,@r0
   001E F7                 1313 	mov	@r1,a
   001F 08                 1314 	inc	r0
   0020 09                 1315 	inc	r1
   0021 E6                 1316 	mov	a,@r0
   0022 F7                 1317 	mov	@r1,a
                    0023   1318 	C$port.c$299$1$1 ==.
                           1319 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:299: pxTopOfStack++;
   0023 A8*00              1320 	mov	r0,_bp
   0025 08                 1321 	inc	r0
   0026 06                 1322 	inc	@r0
   0027 B6 00 02           1323 	cjne	@r0,#0x00,00103$
   002A 08                 1324 	inc	r0
   002B 06                 1325 	inc	@r0
   002C                    1326 00103$:
                    002C   1327 	C$port.c$315$1$1 ==.
                           1328 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:315: ulAddress = ( unsigned portLONG ) pxCode;
   002C E5*00              1329 	mov	a,_bp
   002E 24 FC              1330 	add	a,#0xfc
   0030 F8                 1331 	mov	r0,a
   0031 86 05              1332 	mov	ar5,@r0
   0033 08                 1333 	inc	r0
   0034 86 06              1334 	mov	ar6,@r0
   0036 7F 00              1335 	mov	r7,#0x00
   0038 7A 00              1336 	mov	r2,#0x00
                    003A   1337 	C$port.c$316$1$1 ==.
                           1338 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:316: *pxTopOfStack = ( portSTACK_TYPE ) ulAddress;
   003A 8D 03              1339 	mov	ar3,r5
   003C A8*00              1340 	mov	r0,_bp
   003E 08                 1341 	inc	r0
   003F 86 82              1342 	mov	dpl,@r0
   0041 08                 1343 	inc	r0
   0042 86 83              1344 	mov	dph,@r0
   0044 08                 1345 	inc	r0
   0045 86 F0              1346 	mov	b,@r0
   0047 EB                 1347 	mov	a,r3
   0048 12s00r00           1348 	lcall	__gptrput
   004B A3                 1349 	inc	dptr
   004C 18                 1350 	dec	r0
   004D 18                 1351 	dec	r0
   004E A6 82              1352 	mov	@r0,dpl
   0050 08                 1353 	inc	r0
   0051 A6 83              1354 	mov	@r0,dph
                    0053   1355 	C$port.c$317$1$1 ==.
                           1356 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:317: ulAddress >>= 8;
   0053 8E 05              1357 	mov	ar5,r6
   0055 8F 06              1358 	mov	ar6,r7
   0057 8A 07              1359 	mov	ar7,r2
   0059 7A 00              1360 	mov	r2,#0x00
                    005B   1361 	C$port.c$318$1$1 ==.
                           1362 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:318: pxTopOfStack++;
                    005B   1363 	C$port.c$319$1$1 ==.
                           1364 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:319: *pxTopOfStack = ( portSTACK_TYPE ) ( ulAddress );
   005B 8D 03              1365 	mov	ar3,r5
   005D A8*00              1366 	mov	r0,_bp
   005F 08                 1367 	inc	r0
   0060 86 82              1368 	mov	dpl,@r0
   0062 08                 1369 	inc	r0
   0063 86 83              1370 	mov	dph,@r0
   0065 08                 1371 	inc	r0
   0066 86 F0              1372 	mov	b,@r0
   0068 EB                 1373 	mov	a,r3
   0069 12s00r00           1374 	lcall	__gptrput
   006C A3                 1375 	inc	dptr
   006D 18                 1376 	dec	r0
   006E 18                 1377 	dec	r0
   006F A6 82              1378 	mov	@r0,dpl
   0071 08                 1379 	inc	r0
   0072 A6 83              1380 	mov	@r0,dph
                    0074   1381 	C$port.c$320$1$1 ==.
                           1382 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:320: pxTopOfStack++;
                    0074   1383 	C$port.c$323$1$1 ==.
                           1384 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:323: *pxTopOfStack = 0xaa;	/* acc */
   0074 A8*00              1385 	mov	r0,_bp
   0076 08                 1386 	inc	r0
   0077 86 82              1387 	mov	dpl,@r0
   0079 08                 1388 	inc	r0
   007A 86 83              1389 	mov	dph,@r0
   007C 08                 1390 	inc	r0
   007D 86 F0              1391 	mov	b,@r0
   007F 74 AA              1392 	mov	a,#0xAA
   0081 12s00r00           1393 	lcall	__gptrput
   0084 A3                 1394 	inc	dptr
   0085 18                 1395 	dec	r0
   0086 18                 1396 	dec	r0
   0087 A6 82              1397 	mov	@r0,dpl
   0089 08                 1398 	inc	r0
   008A A6 83              1399 	mov	@r0,dph
                    008C   1400 	C$port.c$324$1$1 ==.
                           1401 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:324: pxTopOfStack++;	
                    008C   1402 	C$port.c$327$1$1 ==.
                           1403 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:327: *pxTopOfStack = portGLOBAL_INTERRUPT_BIT;
   008C A8*00              1404 	mov	r0,_bp
   008E 08                 1405 	inc	r0
   008F 86 82              1406 	mov	dpl,@r0
   0091 08                 1407 	inc	r0
   0092 86 83              1408 	mov	dph,@r0
   0094 08                 1409 	inc	r0
   0095 86 F0              1410 	mov	b,@r0
   0097 74 80              1411 	mov	a,#0x80
   0099 12s00r00           1412 	lcall	__gptrput
   009C A3                 1413 	inc	dptr
   009D 18                 1414 	dec	r0
   009E 18                 1415 	dec	r0
   009F A6 82              1416 	mov	@r0,dpl
   00A1 08                 1417 	inc	r0
   00A2 A6 83              1418 	mov	@r0,dph
                    00A4   1419 	C$port.c$328$1$1 ==.
                           1420 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:328: pxTopOfStack++;
                    00A4   1421 	C$port.c$332$1$1 ==.
                           1422 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:332: ulAddress = ( unsigned portLONG ) pvParameters;
   00A4 E5*00              1423 	mov	a,_bp
   00A6 24 F9              1424 	add	a,#0xf9
   00A8 F8                 1425 	mov	r0,a
   00A9 86 05              1426 	mov	ar5,@r0
   00AB 08                 1427 	inc	r0
   00AC 86 06              1428 	mov	ar6,@r0
   00AE 08                 1429 	inc	r0
   00AF 86 07              1430 	mov	ar7,@r0
   00B1 7A 00              1431 	mov	r2,#0x00
                    00B3   1432 	C$port.c$333$1$1 ==.
                           1433 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:333: *pxTopOfStack = ( portSTACK_TYPE ) ulAddress;	/* DPL */
   00B3 8D 03              1434 	mov	ar3,r5
   00B5 A8*00              1435 	mov	r0,_bp
   00B7 08                 1436 	inc	r0
   00B8 86 82              1437 	mov	dpl,@r0
   00BA 08                 1438 	inc	r0
   00BB 86 83              1439 	mov	dph,@r0
   00BD 08                 1440 	inc	r0
   00BE 86 F0              1441 	mov	b,@r0
   00C0 EB                 1442 	mov	a,r3
   00C1 12s00r00           1443 	lcall	__gptrput
   00C4 A3                 1444 	inc	dptr
   00C5 18                 1445 	dec	r0
   00C6 18                 1446 	dec	r0
   00C7 A6 82              1447 	mov	@r0,dpl
   00C9 08                 1448 	inc	r0
   00CA A6 83              1449 	mov	@r0,dph
                    00CC   1450 	C$port.c$334$1$1 ==.
                           1451 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:334: ulAddress >>= 8;
   00CC 8E 05              1452 	mov	ar5,r6
   00CE 8F 06              1453 	mov	ar6,r7
   00D0 8A 07              1454 	mov	ar7,r2
   00D2 7A 00              1455 	mov	r2,#0x00
                    00D4   1456 	C$port.c$335$1$1 ==.
                           1457 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:335: *pxTopOfStack++;
                    00D4   1458 	C$port.c$336$1$1 ==.
                           1459 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:336: *pxTopOfStack = ( portSTACK_TYPE ) ulAddress;	/* DPH */
   00D4 8D 03              1460 	mov	ar3,r5
   00D6 A8*00              1461 	mov	r0,_bp
   00D8 08                 1462 	inc	r0
   00D9 86 82              1463 	mov	dpl,@r0
   00DB 08                 1464 	inc	r0
   00DC 86 83              1465 	mov	dph,@r0
   00DE 08                 1466 	inc	r0
   00DF 86 F0              1467 	mov	b,@r0
   00E1 EB                 1468 	mov	a,r3
   00E2 12s00r00           1469 	lcall	__gptrput
   00E5 A3                 1470 	inc	dptr
   00E6 18                 1471 	dec	r0
   00E7 18                 1472 	dec	r0
   00E8 A6 82              1473 	mov	@r0,dpl
   00EA 08                 1474 	inc	r0
   00EB A6 83              1475 	mov	@r0,dph
                    00ED   1476 	C$port.c$337$1$1 ==.
                           1477 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:337: ulAddress >>= 8;
   00ED 8E 05              1478 	mov	ar5,r6
   00EF 8F 06              1479 	mov	ar6,r7
   00F1 8A 07              1480 	mov	ar7,r2
   00F3 7A 00              1481 	mov	r2,#0x00
                    00F5   1482 	C$port.c$338$1$1 ==.
                           1483 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:338: pxTopOfStack++;
                    00F5   1484 	C$port.c$339$1$1 ==.
                           1485 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:339: *pxTopOfStack = ( portSTACK_TYPE ) ulAddress;	/* b */
   00F5 A8*00              1486 	mov	r0,_bp
   00F7 08                 1487 	inc	r0
   00F8 86 82              1488 	mov	dpl,@r0
   00FA 08                 1489 	inc	r0
   00FB 86 83              1490 	mov	dph,@r0
   00FD 08                 1491 	inc	r0
   00FE 86 F0              1492 	mov	b,@r0
   0100 ED                 1493 	mov	a,r5
   0101 12s00r00           1494 	lcall	__gptrput
   0104 A3                 1495 	inc	dptr
   0105 18                 1496 	dec	r0
   0106 18                 1497 	dec	r0
   0107 A6 82              1498 	mov	@r0,dpl
   0109 08                 1499 	inc	r0
   010A A6 83              1500 	mov	@r0,dph
                    010C   1501 	C$port.c$340$1$1 ==.
                           1502 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:340: pxTopOfStack++;
                    010C   1503 	C$port.c$343$1$1 ==.
                           1504 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:343: *pxTopOfStack = 0x02;	/* R2 */
   010C A8*00              1505 	mov	r0,_bp
   010E 08                 1506 	inc	r0
   010F 86 82              1507 	mov	dpl,@r0
   0111 08                 1508 	inc	r0
   0112 86 83              1509 	mov	dph,@r0
   0114 08                 1510 	inc	r0
   0115 86 F0              1511 	mov	b,@r0
   0117 74 02              1512 	mov	a,#0x02
   0119 12s00r00           1513 	lcall	__gptrput
   011C A3                 1514 	inc	dptr
   011D 18                 1515 	dec	r0
   011E 18                 1516 	dec	r0
   011F A6 82              1517 	mov	@r0,dpl
   0121 08                 1518 	inc	r0
   0122 A6 83              1519 	mov	@r0,dph
                    0124   1520 	C$port.c$344$1$1 ==.
                           1521 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:344: pxTopOfStack++;
                    0124   1522 	C$port.c$345$1$1 ==.
                           1523 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:345: *pxTopOfStack = 0x03;	/* R3 */
   0124 A8*00              1524 	mov	r0,_bp
   0126 08                 1525 	inc	r0
   0127 86 82              1526 	mov	dpl,@r0
   0129 08                 1527 	inc	r0
   012A 86 83              1528 	mov	dph,@r0
   012C 08                 1529 	inc	r0
   012D 86 F0              1530 	mov	b,@r0
   012F 74 03              1531 	mov	a,#0x03
   0131 12s00r00           1532 	lcall	__gptrput
   0134 A3                 1533 	inc	dptr
   0135 18                 1534 	dec	r0
   0136 18                 1535 	dec	r0
   0137 A6 82              1536 	mov	@r0,dpl
   0139 08                 1537 	inc	r0
   013A A6 83              1538 	mov	@r0,dph
                    013C   1539 	C$port.c$346$1$1 ==.
                           1540 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:346: pxTopOfStack++;
                    013C   1541 	C$port.c$347$1$1 ==.
                           1542 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:347: *pxTopOfStack = 0x04;	/* R4 */
   013C A8*00              1543 	mov	r0,_bp
   013E 08                 1544 	inc	r0
   013F 86 82              1545 	mov	dpl,@r0
   0141 08                 1546 	inc	r0
   0142 86 83              1547 	mov	dph,@r0
   0144 08                 1548 	inc	r0
   0145 86 F0              1549 	mov	b,@r0
   0147 74 04              1550 	mov	a,#0x04
   0149 12s00r00           1551 	lcall	__gptrput
   014C A3                 1552 	inc	dptr
   014D 18                 1553 	dec	r0
   014E 18                 1554 	dec	r0
   014F A6 82              1555 	mov	@r0,dpl
   0151 08                 1556 	inc	r0
   0152 A6 83              1557 	mov	@r0,dph
                    0154   1558 	C$port.c$348$1$1 ==.
                           1559 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:348: pxTopOfStack++;
                    0154   1560 	C$port.c$349$1$1 ==.
                           1561 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:349: *pxTopOfStack = 0x05;	/* R5 */
   0154 A8*00              1562 	mov	r0,_bp
   0156 08                 1563 	inc	r0
   0157 86 82              1564 	mov	dpl,@r0
   0159 08                 1565 	inc	r0
   015A 86 83              1566 	mov	dph,@r0
   015C 08                 1567 	inc	r0
   015D 86 F0              1568 	mov	b,@r0
   015F 74 05              1569 	mov	a,#0x05
   0161 12s00r00           1570 	lcall	__gptrput
   0164 A3                 1571 	inc	dptr
   0165 18                 1572 	dec	r0
   0166 18                 1573 	dec	r0
   0167 A6 82              1574 	mov	@r0,dpl
   0169 08                 1575 	inc	r0
   016A A6 83              1576 	mov	@r0,dph
                    016C   1577 	C$port.c$350$1$1 ==.
                           1578 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:350: pxTopOfStack++;
                    016C   1579 	C$port.c$351$1$1 ==.
                           1580 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:351: *pxTopOfStack = 0x06;	/* R6 */
   016C A8*00              1581 	mov	r0,_bp
   016E 08                 1582 	inc	r0
   016F 86 82              1583 	mov	dpl,@r0
   0171 08                 1584 	inc	r0
   0172 86 83              1585 	mov	dph,@r0
   0174 08                 1586 	inc	r0
   0175 86 F0              1587 	mov	b,@r0
   0177 74 06              1588 	mov	a,#0x06
   0179 12s00r00           1589 	lcall	__gptrput
   017C A3                 1590 	inc	dptr
   017D 18                 1591 	dec	r0
   017E 18                 1592 	dec	r0
   017F A6 82              1593 	mov	@r0,dpl
   0181 08                 1594 	inc	r0
   0182 A6 83              1595 	mov	@r0,dph
                    0184   1596 	C$port.c$352$1$1 ==.
                           1597 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:352: pxTopOfStack++;
                    0184   1598 	C$port.c$353$1$1 ==.
                           1599 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:353: *pxTopOfStack = 0x07;	/* R7 */
   0184 A8*00              1600 	mov	r0,_bp
   0186 08                 1601 	inc	r0
   0187 86 82              1602 	mov	dpl,@r0
   0189 08                 1603 	inc	r0
   018A 86 83              1604 	mov	dph,@r0
   018C 08                 1605 	inc	r0
   018D 86 F0              1606 	mov	b,@r0
   018F 74 07              1607 	mov	a,#0x07
   0191 12s00r00           1608 	lcall	__gptrput
   0194 A3                 1609 	inc	dptr
   0195 18                 1610 	dec	r0
   0196 18                 1611 	dec	r0
   0197 A6 82              1612 	mov	@r0,dpl
   0199 08                 1613 	inc	r0
   019A A6 83              1614 	mov	@r0,dph
                    019C   1615 	C$port.c$354$1$1 ==.
                           1616 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:354: pxTopOfStack++;
                    019C   1617 	C$port.c$355$1$1 ==.
                           1618 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:355: *pxTopOfStack = 0x00;	/* R0 */
   019C A8*00              1619 	mov	r0,_bp
   019E 08                 1620 	inc	r0
   019F 86 82              1621 	mov	dpl,@r0
   01A1 08                 1622 	inc	r0
   01A2 86 83              1623 	mov	dph,@r0
   01A4 08                 1624 	inc	r0
   01A5 86 F0              1625 	mov	b,@r0
   01A7 74 00              1626 	mov	a,#0x00
   01A9 12s00r00           1627 	lcall	__gptrput
   01AC A3                 1628 	inc	dptr
   01AD 18                 1629 	dec	r0
   01AE 18                 1630 	dec	r0
   01AF A6 82              1631 	mov	@r0,dpl
   01B1 08                 1632 	inc	r0
   01B2 A6 83              1633 	mov	@r0,dph
                    01B4   1634 	C$port.c$356$1$1 ==.
                           1635 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:356: pxTopOfStack++;
                    01B4   1636 	C$port.c$357$1$1 ==.
                           1637 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:357: *pxTopOfStack = 0x01;	/* R1 */
   01B4 A8*00              1638 	mov	r0,_bp
   01B6 08                 1639 	inc	r0
   01B7 86 82              1640 	mov	dpl,@r0
   01B9 08                 1641 	inc	r0
   01BA 86 83              1642 	mov	dph,@r0
   01BC 08                 1643 	inc	r0
   01BD 86 F0              1644 	mov	b,@r0
   01BF 74 01              1645 	mov	a,#0x01
   01C1 12s00r00           1646 	lcall	__gptrput
   01C4 A3                 1647 	inc	dptr
   01C5 18                 1648 	dec	r0
   01C6 18                 1649 	dec	r0
   01C7 A6 82              1650 	mov	@r0,dpl
   01C9 08                 1651 	inc	r0
   01CA A6 83              1652 	mov	@r0,dph
                    01CC   1653 	C$port.c$358$1$1 ==.
                           1654 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:358: pxTopOfStack++;
                    01CC   1655 	C$port.c$359$1$1 ==.
                           1656 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:359: *pxTopOfStack = 0x00;	/* PSW */
   01CC A8*00              1657 	mov	r0,_bp
   01CE 08                 1658 	inc	r0
   01CF 86 82              1659 	mov	dpl,@r0
   01D1 08                 1660 	inc	r0
   01D2 86 83              1661 	mov	dph,@r0
   01D4 08                 1662 	inc	r0
   01D5 86 F0              1663 	mov	b,@r0
   01D7 74 00              1664 	mov	a,#0x00
   01D9 12s00r00           1665 	lcall	__gptrput
   01DC A3                 1666 	inc	dptr
   01DD 18                 1667 	dec	r0
   01DE 18                 1668 	dec	r0
   01DF A6 82              1669 	mov	@r0,dpl
   01E1 08                 1670 	inc	r0
   01E2 A6 83              1671 	mov	@r0,dph
                    01E4   1672 	C$port.c$360$1$1 ==.
                           1673 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:360: pxTopOfStack++;
                    01E4   1674 	C$port.c$361$1$1 ==.
                           1675 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:361: *pxTopOfStack = 0xbb;	/* BP */
   01E4 A8*00              1676 	mov	r0,_bp
   01E6 08                 1677 	inc	r0
   01E7 86 82              1678 	mov	dpl,@r0
   01E9 08                 1679 	inc	r0
   01EA 86 83              1680 	mov	dph,@r0
   01EC 08                 1681 	inc	r0
   01ED 86 F0              1682 	mov	b,@r0
   01EF 74 BB              1683 	mov	a,#0xBB
   01F1 12s00r00           1684 	lcall	__gptrput
                    01F4   1685 	C$port.c$367$1$1 ==.
                           1686 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:367: *pxStartOfStack = ( portSTACK_TYPE ) ( pxTopOfStack - pxStartOfStack );
   01F4 A8*00              1687 	mov	r0,_bp
   01F6 08                 1688 	inc	r0
   01F7 E5*00              1689 	mov	a,_bp
   01F9 24 04              1690 	add	a,#0x04
   01FB F9                 1691 	mov	r1,a
   01FC E6                 1692 	mov	a,@r0
   01FD C3                 1693 	clr	c
   01FE 97                 1694 	subb	a,@r1
   01FF FA                 1695 	mov	r2,a
   0200 08                 1696 	inc	r0
   0201 E6                 1697 	mov	a,@r0
   0202 09                 1698 	inc	r1
   0203 97                 1699 	subb	a,@r1
   0204 FB                 1700 	mov	r3,a
   0205 E5*00              1701 	mov	a,_bp
   0207 24 04              1702 	add	a,#0x04
   0209 F8                 1703 	mov	r0,a
   020A 86 82              1704 	mov	dpl,@r0
   020C 08                 1705 	inc	r0
   020D 86 83              1706 	mov	dph,@r0
   020F 08                 1707 	inc	r0
   0210 86 F0              1708 	mov	b,@r0
   0212 EA                 1709 	mov	a,r2
   0213 12s00r00           1710 	lcall	__gptrput
                    0216   1711 	C$port.c$371$1$1 ==.
                           1712 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:371: return pxStartOfStack;
   0216 E5*00              1713 	mov	a,_bp
   0218 24 04              1714 	add	a,#0x04
   021A F8                 1715 	mov	r0,a
   021B 86 82              1716 	mov	dpl,@r0
   021D 08                 1717 	inc	r0
   021E 86 83              1718 	mov	dph,@r0
   0220 08                 1719 	inc	r0
   0221 86 F0              1720 	mov	b,@r0
   0223                    1721 00101$:
   0223 85*00 81           1722 	mov	sp,_bp
   0226 D0*00              1723 	pop	_bp
                    0228   1724 	C$port.c$372$1$1 ==.
                    0228   1725 	XG$pxPortInitialiseStack$0$0 ==.
   0228 22                 1726 	ret
                           1727 ;------------------------------------------------------------
                           1728 ;Allocation info for local variables in function 'xPortStartScheduler'
                           1729 ;------------------------------------------------------------
                           1730 ;------------------------------------------------------------
                    0229   1731 	G$xPortStartScheduler$0$0 ==.
                    0229   1732 	C$port.c$378$1$1 ==.
                           1733 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:378: portBASE_TYPE xPortStartScheduler( void )
                           1734 ;	-----------------------------------------
                           1735 ;	 function xPortStartScheduler
                           1736 ;	-----------------------------------------
   0229                    1737 _xPortStartScheduler:
                    0229   1738 	C$port.c$381$1$1 ==.
                           1739 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:381: prvSetupTimerInterrupt();	
   0229 12s04r7F           1740 	lcall	_prvSetupTimerInterrupt
                    022C   1741 	C$port.c$385$1$1 ==.
                           1742 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:385: SFRPAGE = 0;
   022C 75 84 00           1743 	mov	_SFRPAGE,#0x00
                    022F   1744 	C$port.c$389$2$2 ==.
                           1745 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:389: portCOPY_XRAM_TO_STACK();
   022F 90s00r00           1746 	mov	dptr,#_pxCurrentTCB
   0232 E0                 1747 	movx	a,@dptr
   0233 FA                 1748 	mov	r2,a
   0234 A3                 1749 	inc	dptr
   0235 E0                 1750 	movx	a,@dptr
   0236 FB                 1751 	mov	r3,a
   0237 A3                 1752 	inc	dptr
   0238 E0                 1753 	movx	a,@dptr
   0239 FC                 1754 	mov	r4,a
   023A 8A 82              1755 	mov	dpl,r2
   023C 8B 83              1756 	mov	dph,r3
   023E 8C F0              1757 	mov	b,r4
   0240 12s00r00           1758 	lcall	__gptrget
   0243 F5*01              1759 	mov	_pxXRAMStack,a
   0245 A3                 1760 	inc	dptr
   0246 12s00r00           1761 	lcall	__gptrget
   0249 F5*02              1762 	mov	(_pxXRAMStack + 1),a
   024B 75*03 0C           1763 	mov	_pxRAMStack,#0x0C
   024E 85*01 82           1764 	mov	dpl,_pxXRAMStack
   0251 85*02 83           1765 	mov	dph,(_pxXRAMStack + 1)
   0254 E0                 1766 	movx	a,@dptr
   0255 F5*00              1767 	mov	_ucStackBytes,a
   0257                    1768 00101$:
   0257 05*01              1769 	inc	_pxXRAMStack
   0259 E4                 1770 	clr	a
   025A B5*01 02           1771 	cjne	a,_pxXRAMStack,00108$
   025D 05*02              1772 	inc	(_pxXRAMStack + 1)
   025F                    1773 00108$:
   025F 05*03              1774 	inc	_pxRAMStack
   0261 A8*03              1775 	mov	r0,_pxRAMStack
   0263 85*01 82           1776 	mov	dpl,_pxXRAMStack
   0266 85*02 83           1777 	mov	dph,(_pxXRAMStack + 1)
   0269 E0                 1778 	movx	a,@dptr
   026A FA                 1779 	mov	r2,a
   026B A6 02              1780 	mov	@r0,ar2
   026D 15*00              1781 	dec	_ucStackBytes
   026F E5*00              1782 	mov	a,_ucStackBytes
   0271 60 03              1783 	jz	00109$
   0273 02s02r57           1784 	ljmp	00101$
   0276                    1785 00109$:
   0276 85*03 81           1786 	mov	_SP,_pxRAMStack
                    0279   1787 	C$port.c$390$2$4 ==.
                           1788 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:390: portRESTORE_CONTEXT();
   0279                    1789 	 pop _bp pop PSW pop ar1 pop ar0 pop ar7 pop ar6 pop ar5 pop ar4 pop ar3 pop ar2 pop b pop DPH pop DPL pop ACC JB ACC.7,0098$ CLR IE.7 LJMP 0099$ 0098$:
   029D                    1790 	SETB IE.7 0099$:
   029F D0 E0 32           1791 	pop ACC reti 
                    02A2   1792 	C$port.c$393$1$1 ==.
                           1793 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:393: return pdTRUE;
   02A2 75 82 01           1794 	mov	dpl,#0x01
   02A5                    1795 00104$:
                    02A5   1796 	C$port.c$394$1$1 ==.
                    02A5   1797 	XG$xPortStartScheduler$0$0 ==.
   02A5 22                 1798 	ret
                           1799 ;------------------------------------------------------------
                           1800 ;Allocation info for local variables in function 'vPortEndScheduler'
                           1801 ;------------------------------------------------------------
                           1802 ;------------------------------------------------------------
                    02A6   1803 	G$vPortEndScheduler$0$0 ==.
                    02A6   1804 	C$port.c$397$1$1 ==.
                           1805 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:397: void vPortEndScheduler( void )
                           1806 ;	-----------------------------------------
                           1807 ;	 function vPortEndScheduler
                           1808 ;	-----------------------------------------
   02A6                    1809 _vPortEndScheduler:
                    02A6   1810 	C$port.c$400$1$1 ==.
                           1811 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:400: }
   02A6                    1812 00101$:
                    02A6   1813 	C$port.c$400$1$1 ==.
                    02A6   1814 	XG$vPortEndScheduler$0$0 ==.
   02A6 22                 1815 	ret
                           1816 ;------------------------------------------------------------
                           1817 ;Allocation info for local variables in function 'vPortYield'
                           1818 ;------------------------------------------------------------
                           1819 ;------------------------------------------------------------
                    02A7   1820 	G$vPortYield$0$0 ==.
                    02A7   1821 	C$port.c$407$1$1 ==.
                           1822 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:407: void vPortYield( void ) __naked
                           1823 ;	-----------------------------------------
                           1824 ;	 function vPortYield
                           1825 ;	-----------------------------------------
   02A7                    1826 _vPortYield:
                           1827 ;	naked function: no prologue.
                    02A7   1828 	C$port.c$415$2$2 ==.
                           1829 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:415: portSAVE_CONTEXT();
   02A7 C0 E0 C0 A8 C2 AF  1830 	 push ACC push IE clr _EA push DPL push DPH push b push ar2 push ar3 push ar4 push ar5 push ar6 push ar7 push ar0 push ar1 push PSW 
        C0 82 C0 83 C0 F0
        C0 02 C0 03 C0 04
        C0 05 C0 06 C0 07
        C0 00 C0 01 C0 D0
   02C5 75 D0 00           1831 	mov	_PSW,#0x00
   02C8 C0*00              1832 	 push _bp 
                    02CA   1833 	C$port.c$416$2$3 ==.
                           1834 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:416: portCOPY_STACK_TO_XRAM();
   02CA 90s00r00           1835 	mov	dptr,#_pxCurrentTCB
   02CD E0                 1836 	movx	a,@dptr
   02CE FA                 1837 	mov	r2,a
   02CF A3                 1838 	inc	dptr
   02D0 E0                 1839 	movx	a,@dptr
   02D1 FB                 1840 	mov	r3,a
   02D2 A3                 1841 	inc	dptr
   02D3 E0                 1842 	movx	a,@dptr
   02D4 FC                 1843 	mov	r4,a
   02D5 8A 82              1844 	mov	dpl,r2
   02D7 8B 83              1845 	mov	dph,r3
   02D9 8C F0              1846 	mov	b,r4
   02DB 12s00r00           1847 	lcall	__gptrget
   02DE F5*01              1848 	mov	_pxXRAMStack,a
   02E0 A3                 1849 	inc	dptr
   02E1 12s00r00           1850 	lcall	__gptrget
   02E4 F5*02              1851 	mov	(_pxXRAMStack + 1),a
   02E6 75*03 0D           1852 	mov	_pxRAMStack,#0x0D
   02E9 E5 81              1853 	mov	a,_SP
   02EB 24 F4              1854 	add	a,#0xf4
   02ED F5*00              1855 	mov	_ucStackBytes,a
   02EF 85*01 82           1856 	mov	dpl,_pxXRAMStack
   02F2 85*02 83           1857 	mov	dph,(_pxXRAMStack + 1)
   02F5 E5*00              1858 	mov	a,_ucStackBytes
   02F7 F0                 1859 	movx	@dptr,a
   02F8                    1860 00101$:
   02F8 E5*00              1861 	mov	a,_ucStackBytes
   02FA 70 03              1862 	jnz	00113$
   02FC 02s03r1A           1863 	ljmp	00103$
   02FF                    1864 00113$:
   02FF 05*01              1865 	inc	_pxXRAMStack
   0301 E4                 1866 	clr	a
   0302 B5*01 02           1867 	cjne	a,_pxXRAMStack,00114$
   0305 05*02              1868 	inc	(_pxXRAMStack + 1)
   0307                    1869 00114$:
   0307 85*01 82           1870 	mov	dpl,_pxXRAMStack
   030A 85*02 83           1871 	mov	dph,(_pxXRAMStack + 1)
   030D A8*03              1872 	mov	r0,_pxRAMStack
   030F 86 02              1873 	mov	ar2,@r0
   0311 EA                 1874 	mov	a,r2
   0312 F0                 1875 	movx	@dptr,a
   0313 05*03              1876 	inc	_pxRAMStack
   0315 15*00              1877 	dec	_ucStackBytes
   0317 02s02rF8           1878 	ljmp	00101$
   031A                    1879 00103$:
                    031A   1880 	C$port.c$419$1$1 ==.
                           1881 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:419: vTaskSwitchContext();
   031A 12s00r00           1882 	lcall	_vTaskSwitchContext
                    031D   1883 	C$port.c$423$2$5 ==.
                           1884 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:423: portCOPY_XRAM_TO_STACK();
   031D 90s00r00           1885 	mov	dptr,#_pxCurrentTCB
   0320 E0                 1886 	movx	a,@dptr
   0321 FA                 1887 	mov	r2,a
   0322 A3                 1888 	inc	dptr
   0323 E0                 1889 	movx	a,@dptr
   0324 FB                 1890 	mov	r3,a
   0325 A3                 1891 	inc	dptr
   0326 E0                 1892 	movx	a,@dptr
   0327 FC                 1893 	mov	r4,a
   0328 8A 82              1894 	mov	dpl,r2
   032A 8B 83              1895 	mov	dph,r3
   032C 8C F0              1896 	mov	b,r4
   032E 12s00r00           1897 	lcall	__gptrget
   0331 F5*01              1898 	mov	_pxXRAMStack,a
   0333 A3                 1899 	inc	dptr
   0334 12s00r00           1900 	lcall	__gptrget
   0337 F5*02              1901 	mov	(_pxXRAMStack + 1),a
   0339 75*03 0C           1902 	mov	_pxRAMStack,#0x0C
   033C 85*01 82           1903 	mov	dpl,_pxXRAMStack
   033F 85*02 83           1904 	mov	dph,(_pxXRAMStack + 1)
   0342 E0                 1905 	movx	a,@dptr
   0343 F5*00              1906 	mov	_ucStackBytes,a
   0345                    1907 00104$:
   0345 05*01              1908 	inc	_pxXRAMStack
   0347 E4                 1909 	clr	a
   0348 B5*01 02           1910 	cjne	a,_pxXRAMStack,00115$
   034B 05*02              1911 	inc	(_pxXRAMStack + 1)
   034D                    1912 00115$:
   034D 05*03              1913 	inc	_pxRAMStack
   034F A8*03              1914 	mov	r0,_pxRAMStack
   0351 85*01 82           1915 	mov	dpl,_pxXRAMStack
   0354 85*02 83           1916 	mov	dph,(_pxXRAMStack + 1)
   0357 E0                 1917 	movx	a,@dptr
   0358 FA                 1918 	mov	r2,a
   0359 A6 02              1919 	mov	@r0,ar2
   035B 15*00              1920 	dec	_ucStackBytes
   035D E5*00              1921 	mov	a,_ucStackBytes
   035F 60 03              1922 	jz	00116$
   0361 02s03r45           1923 	ljmp	00104$
   0364                    1924 00116$:
   0364 85*03 81           1925 	mov	_SP,_pxRAMStack
                    0367   1926 	C$port.c$424$2$7 ==.
                           1927 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:424: portRESTORE_CONTEXT();
   0367                    1928 	 pop _bp pop PSW pop ar1 pop ar0 pop ar7 pop ar6 pop ar5 pop ar4 pop ar3 pop ar2 pop b pop DPH pop DPL pop ACC JB ACC.7,0098$ CLR IE.7 LJMP 0099$ 0098$:
   038B                    1929 	SETB IE.7 0099$:
   038D D0 E0 32           1930 	pop ACC reti 
   0390                    1931 00107$:
                           1932 ;	naked function: no epilogue.
                    0390   1933 	C$port.c$425$2$7 ==.
                    0390   1934 	XG$vPortYield$0$0 ==.
                           1935 ;------------------------------------------------------------
                           1936 ;Allocation info for local variables in function 'vTimer2ISR'
                           1937 ;------------------------------------------------------------
                           1938 ;------------------------------------------------------------
                    0390   1939 	G$vTimer2ISR$0$0 ==.
                    0390   1940 	C$port.c$429$2$7 ==.
                           1941 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:429: void vTimer2ISR( void ) __interrupt 5 __naked
                           1942 ;	-----------------------------------------
                           1943 ;	 function vTimer2ISR
                           1944 ;	-----------------------------------------
   0390                    1945 _vTimer2ISR:
                           1946 ;	naked function: no prologue.
                    0390   1947 	C$port.c$435$2$2 ==.
                           1948 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:435: portSAVE_CONTEXT();
   0390 C0 E0 C0 A8 C2 AF  1949 	 push ACC push IE clr _EA push DPL push DPH push b push ar2 push ar3 push ar4 push ar5 push ar6 push ar7 push ar0 push ar1 push PSW 
        C0 82 C0 83 C0 F0
        C0 02 C0 03 C0 04
        C0 05 C0 06 C0 07
        C0 00 C0 01 C0 D0
   03AE 75 D0 00           1950 	mov	_PSW,#0x00
   03B1 C0*00              1951 	 push _bp 
                    03B3   1952 	C$port.c$436$2$3 ==.
                           1953 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:436: portCOPY_STACK_TO_XRAM();
   03B3 90s00r00           1954 	mov	dptr,#_pxCurrentTCB
   03B6 E0                 1955 	movx	a,@dptr
   03B7 FA                 1956 	mov	r2,a
   03B8 A3                 1957 	inc	dptr
   03B9 E0                 1958 	movx	a,@dptr
   03BA FB                 1959 	mov	r3,a
   03BB A3                 1960 	inc	dptr
   03BC E0                 1961 	movx	a,@dptr
   03BD FC                 1962 	mov	r4,a
   03BE 8A 82              1963 	mov	dpl,r2
   03C0 8B 83              1964 	mov	dph,r3
   03C2 8C F0              1965 	mov	b,r4
   03C4 12s00r00           1966 	lcall	__gptrget
   03C7 F5*01              1967 	mov	_pxXRAMStack,a
   03C9 A3                 1968 	inc	dptr
   03CA 12s00r00           1969 	lcall	__gptrget
   03CD F5*02              1970 	mov	(_pxXRAMStack + 1),a
   03CF 75*03 0D           1971 	mov	_pxRAMStack,#0x0D
   03D2 E5 81              1972 	mov	a,_SP
   03D4 24 F4              1973 	add	a,#0xf4
   03D6 F5*00              1974 	mov	_ucStackBytes,a
   03D8 85*01 82           1975 	mov	dpl,_pxXRAMStack
   03DB 85*02 83           1976 	mov	dph,(_pxXRAMStack + 1)
   03DE E5*00              1977 	mov	a,_ucStackBytes
   03E0 F0                 1978 	movx	@dptr,a
   03E1                    1979 00101$:
   03E1 E5*00              1980 	mov	a,_ucStackBytes
   03E3 70 03              1981 	jnz	00113$
   03E5 02s04r03           1982 	ljmp	00103$
   03E8                    1983 00113$:
   03E8 05*01              1984 	inc	_pxXRAMStack
   03EA E4                 1985 	clr	a
   03EB B5*01 02           1986 	cjne	a,_pxXRAMStack,00114$
   03EE 05*02              1987 	inc	(_pxXRAMStack + 1)
   03F0                    1988 00114$:
   03F0 85*01 82           1989 	mov	dpl,_pxXRAMStack
   03F3 85*02 83           1990 	mov	dph,(_pxXRAMStack + 1)
   03F6 A8*03              1991 	mov	r0,_pxRAMStack
   03F8 86 02              1992 	mov	ar2,@r0
   03FA EA                 1993 	mov	a,r2
   03FB F0                 1994 	movx	@dptr,a
   03FC 05*03              1995 	inc	_pxRAMStack
   03FE 15*00              1996 	dec	_ucStackBytes
   0400 02s03rE1           1997 	ljmp	00101$
   0403                    1998 00103$:
                    0403   1999 	C$port.c$438$1$1 ==.
                           2000 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:438: vTaskIncrementTick();
   0403 12s00r00           2001 	lcall	_vTaskIncrementTick
                    0406   2002 	C$port.c$439$1$1 ==.
                           2003 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:439: vTaskSwitchContext();
   0406 12s00r00           2004 	lcall	_vTaskSwitchContext
                    0409   2005 	C$port.c$441$1$1 ==.
                           2006 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:441: portCLEAR_INTERRUPT_FLAG();
   0409 53 C8 7F           2007 	anl	_TMR2CN,#0x7F
                    040C   2008 	C$port.c$442$2$5 ==.
                           2009 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:442: portCOPY_XRAM_TO_STACK();
   040C 90s00r00           2010 	mov	dptr,#_pxCurrentTCB
   040F E0                 2011 	movx	a,@dptr
   0410 FA                 2012 	mov	r2,a
   0411 A3                 2013 	inc	dptr
   0412 E0                 2014 	movx	a,@dptr
   0413 FB                 2015 	mov	r3,a
   0414 A3                 2016 	inc	dptr
   0415 E0                 2017 	movx	a,@dptr
   0416 FC                 2018 	mov	r4,a
   0417 8A 82              2019 	mov	dpl,r2
   0419 8B 83              2020 	mov	dph,r3
   041B 8C F0              2021 	mov	b,r4
   041D 12s00r00           2022 	lcall	__gptrget
   0420 F5*01              2023 	mov	_pxXRAMStack,a
   0422 A3                 2024 	inc	dptr
   0423 12s00r00           2025 	lcall	__gptrget
   0426 F5*02              2026 	mov	(_pxXRAMStack + 1),a
   0428 75*03 0C           2027 	mov	_pxRAMStack,#0x0C
   042B 85*01 82           2028 	mov	dpl,_pxXRAMStack
   042E 85*02 83           2029 	mov	dph,(_pxXRAMStack + 1)
   0431 E0                 2030 	movx	a,@dptr
   0432 F5*00              2031 	mov	_ucStackBytes,a
   0434                    2032 00104$:
   0434 05*01              2033 	inc	_pxXRAMStack
   0436 E4                 2034 	clr	a
   0437 B5*01 02           2035 	cjne	a,_pxXRAMStack,00115$
   043A 05*02              2036 	inc	(_pxXRAMStack + 1)
   043C                    2037 00115$:
   043C 05*03              2038 	inc	_pxRAMStack
   043E A8*03              2039 	mov	r0,_pxRAMStack
   0440 85*01 82           2040 	mov	dpl,_pxXRAMStack
   0443 85*02 83           2041 	mov	dph,(_pxXRAMStack + 1)
   0446 E0                 2042 	movx	a,@dptr
   0447 FA                 2043 	mov	r2,a
   0448 A6 02              2044 	mov	@r0,ar2
   044A 15*00              2045 	dec	_ucStackBytes
   044C E5*00              2046 	mov	a,_ucStackBytes
   044E 60 03              2047 	jz	00116$
   0450 02s04r34           2048 	ljmp	00104$
   0453                    2049 00116$:
   0453 85*03 81           2050 	mov	_SP,_pxRAMStack
                    0456   2051 	C$port.c$443$2$7 ==.
                           2052 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:443: portRESTORE_CONTEXT();
   0456                    2053 	 pop _bp pop PSW pop ar1 pop ar0 pop ar7 pop ar6 pop ar5 pop ar4 pop ar3 pop ar2 pop b pop DPH pop DPL pop ACC JB ACC.7,0098$ CLR IE.7 LJMP 0099$ 0098$:
   047A                    2054 	SETB IE.7 0099$:
   047C D0 E0 32           2055 	pop ACC reti 
   047F                    2056 00107$:
                           2057 ;	naked function: no epilogue.
                    047F   2058 	C$port.c$444$2$7 ==.
                    047F   2059 	XG$vTimer2ISR$0$0 ==.
                           2060 ;------------------------------------------------------------
                           2061 ;Allocation info for local variables in function 'prvSetupTimerInterrupt'
                           2062 ;------------------------------------------------------------
                           2063 ;ucOriginalSFRPage         Allocated to registers r2 
                           2064 ;ulTicksPerSecond          Allocated to registers 
                           2065 ;ulCaptureTime             Allocated to registers 
                           2066 ;ulCaptureValue            Allocated to registers 
                           2067 ;ucLowCaptureByte          Allocated to registers 
                           2068 ;ucHighCaptureByte         Allocated to registers 
                           2069 ;------------------------------------------------------------
                    047F   2070 	Fport$prvSetupTimerInterrupt$0$0 ==.
                    047F   2071 	C$port.c$457$2$7 ==.
                           2072 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:457: static void prvSetupTimerInterrupt( void )
                           2073 ;	-----------------------------------------
                           2074 ;	 function prvSetupTimerInterrupt
                           2075 ;	-----------------------------------------
   047F                    2076 _prvSetupTimerInterrupt:
                    047F   2077 	C$port.c$472$1$1 ==.
                           2078 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:472: ucOriginalSFRPage = SFRPAGE;
   047F AA 84              2079 	mov	r2,_SFRPAGE
                    0481   2080 	C$port.c$473$1$1 ==.
                           2081 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:473: SFRPAGE = 0;
   0481 75 84 00           2082 	mov	_SFRPAGE,#0x00
                    0484   2083 	C$port.c$476$1$1 ==.
                           2084 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:476: TMR2CF = ( unsigned portCHAR ) 0;
   0484 75 C9 00           2085 	mov	_TMR2CF,#0x00
                    0487   2086 	C$port.c$479$1$1 ==.
                           2087 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:479: RCAP2L = ucLowCaptureByte;
   0487 75 CA 19           2088 	mov	_RCAP2L,#0x19
                    048A   2089 	C$port.c$480$1$1 ==.
                           2090 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:480: RCAP2H = ucHighCaptureByte;
   048A 75 CB E0           2091 	mov	_RCAP2H,#0xE0
                    048D   2092 	C$port.c$483$1$1 ==.
                           2093 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:483: TMR2L = ucLowCaptureByte;
   048D 75 CC 19           2094 	mov	_TMR2L,#0x19
                    0490   2095 	C$port.c$484$1$1 ==.
                           2096 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:484: TMR2H = ucHighCaptureByte;
   0490 75 CD E0           2097 	mov	_TMR2H,#0xE0
                    0493   2098 	C$port.c$487$1$1 ==.
                           2099 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:487: IE |= portTIMER_2_INTERRUPT_ENABLE;
   0493 43 A8 20           2100 	orl	_IE,#0x20
                    0496   2101 	C$port.c$491$1$1 ==.
                           2102 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:491: TMR2CN = portENABLE_TIMER;
   0496 75 C8 04           2103 	mov	_TMR2CN,#0x04
                    0499   2104 	C$port.c$494$1$1 ==.
                           2105 ;	C:\Users\anle\Desktop\R02_QUEUE_PROC2PROC\Source\portable\SDCC\Cygnal\port.c:494: SFRPAGE = ucOriginalSFRPage;
   0499 8A 84              2106 	mov	_SFRPAGE,r2
   049B                    2107 00101$:
                    049B   2108 	C$port.c$495$1$1 ==.
                    049B   2109 	XFport$prvSetupTimerInterrupt$0$0 ==.
   049B 22                 2110 	ret
                           2111 	.area CSEG    (CODE)
                           2112 	.area CONST   (CODE)
                           2113 	.area XINIT   (CODE)
                           2114 	.area CABS    (ABS,CODE)
